	.file	"tuple.cc"
	.section	.text._ZN6ObjectD2Ev,"axG",@progbits,_ZN6ObjectD5Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN6ObjectD2Ev
	.type	_ZN6ObjectD2Ev, @function
_ZN6ObjectD2Ev:
.LFB39:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	ret
	.cfi_endproc
.LFE39:
	.size	_ZN6ObjectD2Ev, .-_ZN6ObjectD2Ev
	.weak	_ZN6ObjectD1Ev
	.set	_ZN6ObjectD1Ev,_ZN6ObjectD2Ev
	.section	.text._ZN9ExceptionD2Ev,"axG",@progbits,_ZN9ExceptionD5Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN9ExceptionD2Ev
	.type	_ZN9ExceptionD2Ev, @function
_ZN9ExceptionD2Ev:
.LFB83:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	ret
	.cfi_endproc
.LFE83:
	.size	_ZN9ExceptionD2Ev, .-_ZN9ExceptionD2Ev
	.weak	_ZN9ExceptionD1Ev
	.set	_ZN9ExceptionD1Ev,_ZN9ExceptionD2Ev
	.section	.text._ZN11ClientErrorD2Ev,"axG",@progbits,_ZN11ClientErrorD5Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN11ClientErrorD2Ev
	.type	_ZN11ClientErrorD2Ev, @function
_ZN11ClientErrorD2Ev:
.LFB89:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	ret
	.cfi_endproc
.LFE89:
	.size	_ZN11ClientErrorD2Ev, .-_ZN11ClientErrorD2Ev
	.weak	_ZN11ClientErrorD1Ev
	.set	_ZN11ClientErrorD1Ev,_ZN11ClientErrorD2Ev
	.section	.text._ZN11LoggedErrorD2Ev,"axG",@progbits,_ZN11LoggedErrorD5Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN11LoggedErrorD2Ev
	.type	_ZN11LoggedErrorD2Ev, @function
_ZN11LoggedErrorD2Ev:
.LFB95:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	ret
	.cfi_endproc
.LFE95:
	.size	_ZN11LoggedErrorD2Ev, .-_ZN11LoggedErrorD2Ev
	.weak	_ZN11LoggedErrorD1Ev
	.set	_ZN11LoggedErrorD1Ev,_ZN11LoggedErrorD2Ev
	.section	.text._ZN13IllegalParamsD2Ev,"axG",@progbits,_ZN13IllegalParamsD5Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN13IllegalParamsD2Ev
	.type	_ZN13IllegalParamsD2Ev, @function
_ZN13IllegalParamsD2Ev:
.LFB216:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	ret
	.cfi_endproc
.LFE216:
	.size	_ZN13IllegalParamsD2Ev, .-_ZN13IllegalParamsD2Ev
	.weak	_ZN13IllegalParamsD1Ev
	.set	_ZN13IllegalParamsD1Ev,_ZN13IllegalParamsD2Ev
	.section	.text._ZN6ObjectD0Ev,"axG",@progbits,_ZN6ObjectD0Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN6ObjectD0Ev
	.type	_ZN6ObjectD0Ev, @function
_ZN6ObjectD0Ev:
.LFB41:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	jmp	_ZdlPv
	.cfi_endproc
.LFE41:
	.size	_ZN6ObjectD0Ev, .-_ZN6ObjectD0Ev
	.section	.text._ZN9ExceptionD0Ev,"axG",@progbits,_ZN9ExceptionD0Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN9ExceptionD0Ev
	.type	_ZN9ExceptionD0Ev, @function
_ZN9ExceptionD0Ev:
.LFB85:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	jmp	_ZdlPv
	.cfi_endproc
.LFE85:
	.size	_ZN9ExceptionD0Ev, .-_ZN9ExceptionD0Ev
	.section	.text._ZN11ClientErrorD0Ev,"axG",@progbits,_ZN11ClientErrorD0Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN11ClientErrorD0Ev
	.type	_ZN11ClientErrorD0Ev, @function
_ZN11ClientErrorD0Ev:
.LFB91:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	jmp	_ZdlPv
	.cfi_endproc
.LFE91:
	.size	_ZN11ClientErrorD0Ev, .-_ZN11ClientErrorD0Ev
	.section	.text._ZN11LoggedErrorD0Ev,"axG",@progbits,_ZN11LoggedErrorD0Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN11LoggedErrorD0Ev
	.type	_ZN11LoggedErrorD0Ev, @function
_ZN11LoggedErrorD0Ev:
.LFB97:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	jmp	_ZdlPv
	.cfi_endproc
.LFE97:
	.size	_ZN11LoggedErrorD0Ev, .-_ZN11LoggedErrorD0Ev
	.section	.text._ZN13IllegalParamsD0Ev,"axG",@progbits,_ZN13IllegalParamsD0Ev,comdat
	.align 2
	.p2align 4,,15
	.weak	_ZN13IllegalParamsD0Ev
	.type	_ZN13IllegalParamsD0Ev, @function
_ZN13IllegalParamsD0Ev:
.LFB218:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_ZTV6Object+8, (%eax)
	jmp	_ZdlPv
	.cfi_endproc
.LFE218:
	.size	_ZN13IllegalParamsD0Ev, .-_ZN13IllegalParamsD0Ev
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"box/tuple.h"
	.section	.rodata.str1.4,"aMS",@progbits,1
	.align 4
.LC1:
	.string	"tuple_formats[format->id] == format"
	.section	.text.unlikely,"ax",@progbits
	.type	_ZL15tuple_format_idP12tuple_format.part.2, @function
_ZL15tuple_format_idP12tuple_format.part.2:
.LFB221:
	.cfi_startproc
	subl	$28, %esp
	.cfi_def_cfa_offset 32
	movl	$_ZZL15tuple_format_idP12tuple_formatE12__FUNCTION__, 12(%esp)
	movl	$102, 8(%esp)
	movl	$.LC0, 4(%esp)
	movl	$.LC1, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE221:
	.size	_ZL15tuple_format_idP12tuple_format.part.2, .-_ZL15tuple_format_idP12tuple_format.part.2
	.section	.rodata.str1.4
	.align 4
.LC2:
	.string	"tuple_format_id(format) == tuple->format_id"
	.section	.text.unlikely
	.type	_ZL12tuple_formatPK5tuple.part.3, @function
_ZL12tuple_formatPK5tuple.part.3:
.LFB222:
	.cfi_startproc
	subl	$28, %esp
	.cfi_def_cfa_offset 32
	movl	$_ZZL12tuple_formatPK5tupleE12__FUNCTION__, 12(%esp)
	movl	$196, 8(%esp)
	movl	$.LC0, 4(%esp)
	movl	$.LC2, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE222:
	.size	_ZL12tuple_formatPK5tuple.part.3, .-_ZL12tuple_formatPK5tuple.part.3
	.section	.rodata.str1.1
.LC3:
	.string	"../include/pickle.h"
.LC4:
	.string	"false"
	.section	.text.unlikely
	.type	mp_uint_load.part.6, @function
mp_uint_load.part.6:
.LFB225:
	.cfi_startproc
	subl	$28, %esp
	.cfi_def_cfa_offset 32
	movl	$_ZZ12mp_uint_loadE12__FUNCTION__, 12(%esp)
	movl	$516, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE225:
	.size	mp_uint_load.part.6, .-mp_uint_load.part.6
	.section	.rodata.str1.1
.LC5:
	.string	"len != NULL"
	.section	.text.unlikely
	.type	mp_str_load.part.7, @function
mp_str_load.part.7:
.LFB226:
	.cfi_startproc
	subl	$28, %esp
	.cfi_def_cfa_offset 32
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$749, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC5, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE226:
	.size	mp_str_load.part.7, .-mp_str_load.part.7
	.section	.rodata.str1.4
	.align 4
.LC6:
	.string	"pos <= tuple->data + tuple->bsize"
	.section	.text.unlikely
	.type	_ZL15tuple_field_oldPK12tuple_formatPK5tuplej.part.10, @function
_ZL15tuple_field_oldPK12tuple_formatPK5tuplej.part.10:
.LFB229:
	.cfi_startproc
	subl	$28, %esp
	.cfi_def_cfa_offset 32
	movl	$_ZZL15tuple_field_oldPK12tuple_formatPK5tuplejE12__FUNCTION__, 12(%esp)
	movl	$239, 8(%esp)
	movl	$.LC0, 4(%esp)
	movl	$.LC6, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE229:
	.size	_ZL15tuple_field_oldPK12tuple_formatPK5tuplej.part.10, .-_ZL15tuple_field_oldPK12tuple_formatPK5tuplej.part.10
	.section	.rodata.str1.1
.LC7:
	.string	"format->refs + count >= 0"
	.section	.text.unlikely
	.type	_ZL16tuple_format_refP12tuple_formati.part.11, @function
_ZL16tuple_format_refP12tuple_formati.part.11:
.LFB230:
	.cfi_startproc
	subl	$28, %esp
	.cfi_def_cfa_offset 32
	movl	$_ZZL16tuple_format_refP12tuple_formatiE12__FUNCTION__, 12(%esp)
	movl	$123, 8(%esp)
	movl	$.LC0, 4(%esp)
	movl	$.LC7, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE230:
	.size	_ZL16tuple_format_refP12tuple_formati.part.11, .-_ZL16tuple_format_refP12tuple_formati.part.11
	.section	.text.mp_load,"axG",@progbits,mp_load,comdat
	.p2align 4,,15
	.weak	mp_load
	.type	mp_load, @function
mp_load:
.LFB150:
	.cfi_startproc
	pushl	%edi
	.cfi_def_cfa_offset 8
	.cfi_offset 7, -8
	pushl	%esi
	.cfi_def_cfa_offset 12
	.cfi_offset 6, -12
	pushl	%ebx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	subl	$16, %esp
	.cfi_def_cfa_offset 32
	movl	32(%esp), %ebx
	movl	(%ebx), %ecx
	movzbl	(%ecx), %edx
	movl	%edx, %eax
	addb	$-128, %al
	js	.L24
	movzbl	%al, %eax
	jmp	*.L26(,%eax,4)
	.section	.rodata.mp_load,"aG",@progbits,mp_load,comdat
	.align 4
	.align 4
.L26:
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L25
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L27
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L29
	.long	.L30
	.long	.L31
	.long	.L31
	.long	.L32
	.long	.L32
	.long	.L32
	.long	.L30
	.long	.L30
	.long	.L30
	.long	.L33
	.long	.L34
	.long	.L24
	.long	.L24
	.long	.L24
	.long	.L24
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L30
	.long	.L30
	.long	.L30
	.long	.L30
	.long	.L30
	.long	.L28
	.long	.L28
	.long	.L28
	.long	.L27
	.long	.L27
	.long	.L25
	.long	.L25
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.long	.L35
	.section	.text.mp_load,"axG",@progbits,mp_load,comdat
	.p2align 4,,7
	.p2align 3
.L35:
	addl	$48, %edx
	leal	1(%ecx), %eax
	cmpb	$47, %dl
	movl	%eax, (%ebx)
	ja	.L41
	movzbl	%dl, %edx
	jmp	*.L43(,%edx,4)
	.section	.rodata.mp_load,"aG",@progbits,mp_load,comdat
	.align 4
	.align 4
.L43:
	.long	.L42
	.long	.L44
	.long	.L45
	.long	.L46
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L41
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.long	.L75
	.section	.text.mp_load,"axG",@progbits,mp_load,comdat
	.p2align 4,,7
	.p2align 3
.L25:
	leal	1(%ecx), %eax
	cmpb	$-34, %dl
	movl	%eax, (%ebx)
	je	.L48
	ja	.L49
	leal	-128(%edx), %eax
	movl	%edx, %edi
	andl	$15, %edi
	cmpb	$15, %al
	ja	.L47
.L52:
	xorl	%esi, %esi
	testl	%edi, %edi
	je	.L54
	.p2align 4,,7
	.p2align 3
.L76:
	movl	%ebx, (%esp)
	addl	$1, %esi
	call	mp_load
	movl	%ebx, (%esp)
	call	mp_load
	cmpl	%edi, %esi
	jne	.L76
.L54:
	movl	$2, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L27:
	leal	1(%ecx), %eax
	cmpb	$-36, %dl
	movl	%eax, (%ebx)
	je	.L57
	ja	.L58
	leal	112(%edx), %eax
	movl	%edx, %edi
	andl	$15, %edi
	cmpb	$15, %al
	ja	.L56
.L61:
	xorl	%esi, %esi
	testl	%edi, %edi
	je	.L63
	.p2align 4,,7
	.p2align 3
.L77:
	movl	%ebx, (%esp)
	addl	$1, %esi
	call	mp_load
	cmpl	%edi, %esi
	jne	.L77
.L63:
	movl	$1, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L28:
	leal	1(%ecx), %eax
	cmpb	$-39, %dl
	movl	%eax, (%ebx)
	je	.L66
	jbe	.L83
	cmpb	$-38, %dl
	je	.L69
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L65
	movl	1(%ecx), %eax
	bswap	%eax
	leal	5(%ecx,%eax), %eax
	movl	%eax, (%ebx)
	movl	$8, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L29:
	addl	$1, %ecx
	xorl	%eax, %eax
	movl	%ecx, (%ebx)
	.p2align 4,,7
	.p2align 3
.L36:
	addl	$16, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L30:
	.cfi_restore_state
	movl	$_ZZ7mp_loadE12__FUNCTION__, 12(%esp)
	movl	$1036, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L31:
	addl	$1, %ecx
	movl	$3, %eax
	movl	%ecx, (%ebx)
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L32:
	leal	1(%ecx), %eax
	cmpb	$-59, %dl
	movl	%eax, (%ebx)
	je	.L72
	cmpb	$-58, %dl
	jne	.L84
	movl	1(%ecx), %eax
	bswap	%eax
	leal	5(%ecx,%eax), %eax
	movl	%eax, (%ebx)
	movl	$9, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L33:
	addl	$5, %ecx
	movl	$6, %eax
	movl	%ecx, (%ebx)
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L34:
	addl	$9, %ecx
	movl	$7, %eax
	movl	%ecx, (%ebx)
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L24:
	leal	1(%ecx), %eax
	testb	%dl, %dl
	movl	%eax, (%ebx)
	movl	$4, %eax
	jns	.L36
	cmpb	$-52, %dl
	je	.L85
	cmpb	$-51, %dl
	je	.L86
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L87
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L40
	addl	$9, %ecx
	movl	%ecx, (%ebx)
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L58:
	cmpb	$-35, %dl
	jne	.L56
	movl	1(%ecx), %edi
	addl	$5, %ecx
	movl	%ecx, (%ebx)
	bswap	%edi
	jmp	.L61
	.p2align 4,,7
	.p2align 3
.L49:
	cmpb	$-33, %dl
	jne	.L47
	movl	1(%ecx), %edi
	addl	$5, %ecx
	movl	%ecx, (%ebx)
	bswap	%edi
	jmp	.L52
	.p2align 4,,7
	.p2align 3
.L84:
	movzbl	1(%ecx), %eax
	leal	2(%ecx,%eax), %eax
	movl	%eax, (%ebx)
	movl	$9, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L83:
	leal	96(%edx), %ecx
	cmpb	$31, %cl
	ja	.L65
	andl	$31, %edx
	addl	%edx, %eax
	movl	%eax, (%ebx)
	movl	$8, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L75:
	movl	$5, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L46:
	addl	$9, %ecx
	movl	$5, %eax
	movl	%ecx, (%ebx)
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L45:
	addl	$5, %ecx
	movl	$5, %eax
	movl	%ecx, (%ebx)
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L44:
	addl	$3, %ecx
	movl	$5, %eax
	movl	%ecx, (%ebx)
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L42:
	addl	$2, %ecx
	movl	$5, %eax
	movl	%ecx, (%ebx)
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L41:
	movl	$_ZZ11mp_int_loadE12__FUNCTION__, 12(%esp)
	movl	$572, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L56:
	movl	$_ZZ13mp_array_loadE12__FUNCTION__, 12(%esp)
	movl	$222, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L48:
	movzwl	1(%ecx), %edi
	addl	$3, %ecx
	movl	%ecx, (%ebx)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L52
	.p2align 4,,7
	.p2align 3
.L72:
	movzwl	1(%ecx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%ecx,%eax), %eax
	movl	%eax, (%ebx)
	movl	$9, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L47:
	movl	$_ZZ11mp_map_loadE12__FUNCTION__, 12(%esp)
	movl	$304, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L57:
	movzwl	1(%ecx), %edi
	addl	$3, %ecx
	movl	%ecx, (%ebx)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L61
	.p2align 4,,7
	.p2align 3
.L66:
	movzbl	1(%ecx), %eax
	leal	2(%ecx,%eax), %eax
	movl	%eax, (%ebx)
	movl	$8, %eax
	jmp	.L36
	.p2align 4,,7
	.p2align 3
.L65:
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$779, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L69:
	movzwl	1(%ecx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%ecx,%eax), %eax
	movl	%eax, (%ebx)
	movl	$8, %eax
	jmp	.L36
.L85:
	addl	$2, %ecx
	movl	%ecx, (%ebx)
	jmp	.L36
.L86:
	addl	$3, %ecx
	movl	%ecx, (%ebx)
	jmp	.L36
.L87:
	addl	$5, %ecx
	movl	%ecx, (%ebx)
	jmp	.L36
.L40:
	call	mp_uint_load.part.6
	.cfi_endproc
.LFE150:
	.size	mp_load, .-mp_load
	.section	.rodata.str1.1
.LC8:
	.string	"IllegalParams"
.LC9:
	.string	"%s at %s:%i"
.LC10:
	.string	"invalid MsgPack"
.LC11:
	.string	"invalid MsgPack uint"
.LC12:
	.string	"invalid MsgPack int"
.LC13:
	.string	"invalid MsgPack map"
.LC14:
	.string	"invalid MsgPack array 2"
.LC15:
	.string	"invalid MsgPack array 3"
.LC16:
	.string	"invalid MsgPack array 4"
.LC17:
	.string	"invalid MsgPack str"
.LC18:
	.string	"invalid MsgPack binary"
.LC19:
	.string	"unsupported MsgPack"
.LC20:
	.string	"invalid MsgPack float"
.LC21:
	.string	"invalid MsgPack double"
	.section	.text.mp_pick,"axG",@progbits,mp_pick,comdat
	.p2align 4,,15
	.weak	mp_pick
	.type	mp_pick, @function
mp_pick:
.LFB151:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA151
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$44, %esp
	.cfi_def_cfa_offset 64
	movl	64(%esp), %ebx
	movl	68(%esp), %esi
	movl	(%ebx), %eax
	cmpl	%esi, %eax
	jae	.L246
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L90
	movzbl	%cl, %ecx
	jmp	*.L92(,%ecx,4)
	.section	.rodata.mp_pick,"aG",@progbits,mp_pick,comdat
	.align 4
	.align 4
.L92:
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L91
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L93
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L95
	.long	.L96
	.long	.L97
	.long	.L97
	.long	.L98
	.long	.L98
	.long	.L98
	.long	.L96
	.long	.L96
	.long	.L96
	.long	.L99
	.long	.L100
	.long	.L90
	.long	.L90
	.long	.L90
	.long	.L90
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L96
	.long	.L96
	.long	.L96
	.long	.L96
	.long	.L96
	.long	.L94
	.long	.L94
	.long	.L94
	.long	.L93
	.long	.L93
	.long	.L91
	.long	.L91
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.long	.L101
	.section	.text.mp_pick,"axG",@progbits,mp_pick,comdat
	.p2align 4,,7
	.p2align 3
.L100:
	leal	8(%eax), %edx
	cmpl	%edx, %esi
	jae	.L247
	movl	$627, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$627, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB0:
	call	*_say
.LEHE0:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC21, 12(%esp)
	movl	$627, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB1:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE1:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L96:
	movl	$1098, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$1098, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB2:
	call	*_say
.LEHE2:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC19, 12(%esp)
	movl	$1098, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB3:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE3:
.L245:
	movl	$_ZN13IllegalParamsD1Ev, 8(%esp)
	movl	$_ZTI13IllegalParams, 4(%esp)
	movl	%ebx, (%esp)
.LEHB4:
	call	__cxa_throw
	.p2align 4,,7
	.p2align 3
.L99:
	leal	4(%eax), %edx
	cmpl	%edx, %esi
	ja	.L248
	movl	$614, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$614, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE4:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC20, 12(%esp)
	movl	$614, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB5:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE5:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L101:
	addl	$48, %edx
	leal	1(%eax), %ecx
	cmpb	$47, %dl
	movl	%ecx, (%ebx)
	ja	.L118
	movzbl	%dl, %edx
	jmp	*.L120(,%edx,4)
	.section	.rodata.mp_pick,"aG",@progbits,mp_pick,comdat
	.align 4
	.align 4
.L120:
	.long	.L119
	.long	.L121
	.long	.L122
	.long	.L123
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L118
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.long	.L200
	.section	.text.mp_pick,"axG",@progbits,mp_pick,comdat
	.p2align 4,,7
	.p2align 3
.L98:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, (%ebx)
	je	.L184
	cmpb	$-58, %dl
	je	.L185
	leal	2(%eax), %edx
	cmpl	%edx, %esi
	jb	.L249
	movzbl	1(%eax), %eax
	movl	%edx, (%ebx)
.L187:
	addl	%eax, %edx
	cmpl	%edx, %esi
	jb	.L250
	movl	%edx, (%ebx)
	movl	$9, %eax
	jmp	.L233
	.p2align 4,,7
	.p2align 3
.L95:
	addl	$1, %eax
	movl	%eax, (%ebx)
	xorl	%eax, %eax
	.p2align 4,,7
	.p2align 3
.L233:
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L91:
	.cfi_restore_state
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, (%ebx)
	je	.L134
	jbe	.L251
	cmpb	$-33, %dl
	jne	.L133
	leal	5(%eax), %edx
	cmpl	%edx, %esi
	.p2align 4,,3
	jb	.L252
	movl	1(%eax), %ebp
	movl	%edx, (%ebx)
	bswap	%ebp
	jmp	.L138
	.p2align 4,,7
	.p2align 3
.L93:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, (%ebx)
	je	.L148
	jbe	.L253
	cmpb	$-35, %dl
	jne	.L147
	leal	5(%eax), %edx
	cmpl	%edx, %esi
	.p2align 4,,3
	jb	.L254
	movl	1(%eax), %ebp
	movl	%edx, (%ebx)
	bswap	%ebp
	jmp	.L152
	.p2align 4,,7
	.p2align 3
.L94:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, (%ebx)
	je	.L162
	jbe	.L255
	cmpb	$-38, %dl
	je	.L165
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L161
	leal	5(%eax), %ecx
	cmpl	%ecx, %esi
	jb	.L256
	movl	1(%eax), %edx
	movl	%ecx, (%ebx)
	bswap	%edx
.L167:
	addl	%edx, %ecx
	cmpl	%ecx, %esi
	jb	.L257
	movl	%ecx, (%ebx)
	movl	$8, %eax
	jmp	.L233
	.p2align 4,,7
	.p2align 3
.L97:
	addl	$1, %eax
	movl	%eax, (%ebx)
	movl	$3, %eax
	jmp	.L233
	.p2align 4,,7
	.p2align 3
.L90:
	leal	1(%eax), %ecx
	cmpb	$-52, %dl
	movl	%ecx, (%ebx)
	je	.L103
	jbe	.L258
	cmpb	$-50, %dl
	je	.L106
	.p2align 4,,8
	jb	.L107
	cmpb	$-49, %dl
	.p2align 4,,5
	jne	.L102
	addl	$9, %eax
	cmpl	%eax, %esi
	.p2align 4,,3
	jb	.L259
.L112:
	movl	%eax, (%ebx)
	movl	$4, %eax
	jmp	.L233
	.p2align 4,,7
	.p2align 3
.L248:
	addl	$5, %eax
	movl	%eax, (%ebx)
	movl	$6, %eax
	jmp	.L233
	.p2align 4,,7
	.p2align 3
.L247:
	addl	$9, %eax
	movl	%eax, (%ebx)
	movl	$7, %eax
	jmp	.L233
	.p2align 4,,7
	.p2align 3
.L253:
	leal	112(%edx), %eax
	movl	%edx, %ebp
	andl	$15, %ebp
	cmpb	$15, %al
	ja	.L147
.L152:
	xorl	%edi, %edi
	testl	%ebp, %ebp
	je	.L159
	.p2align 4,,7
	.p2align 3
.L231:
	movl	%esi, 4(%esp)
	addl	$1, %edi
	movl	%ebx, (%esp)
.LEHB6:
	call	mp_pick
	cmpl	%ebp, %edi
	jne	.L231
.L159:
	movl	$1, %eax
	jmp	.L233
	.p2align 4,,7
	.p2align 3
.L251:
	leal	-128(%edx), %eax
	movl	%edx, %ebp
	andl	$15, %ebp
	cmpb	$15, %al
	ja	.L133
.L138:
	xorl	%edi, %edi
	testl	%ebp, %ebp
	je	.L145
	.p2align 4,,7
	.p2align 3
.L230:
	movl	%esi, 4(%esp)
	addl	$1, %edi
	movl	%ebx, (%esp)
	call	mp_pick
	movl	%esi, 4(%esp)
	movl	%ebx, (%esp)
	call	mp_pick
	cmpl	%ebp, %edi
	jne	.L230
.L145:
	movl	$2, %eax
	jmp	.L233
	.p2align 4,,7
	.p2align 3
.L185:
	leal	5(%eax), %edx
	cmpl	%edx, %esi
	jb	.L260
	movl	1(%eax), %eax
	movl	%edx, (%ebx)
	jmp	.L187
	.p2align 4,,7
	.p2align 3
.L255:
	leal	96(%edx), %eax
	andl	$31, %edx
	cmpb	$31, %al
	jbe	.L167
.L161:
	movl	$817, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$817, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE6:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$817, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB7:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE7:
	jmp	.L245
.L200:
	movl	$5, %eax
	jmp	.L233
.L123:
	addl	$9, %eax
	cmpl	%eax, %esi
	jb	.L261
.L127:
	movl	%eax, (%ebx)
	movl	$5, %eax
	jmp	.L233
.L122:
	addl	$5, %eax
	cmpl	%eax, %esi
	jae	.L127
	movl	$470, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$470, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB8:
	call	*_say
.LEHE8:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$470, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB9:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE9:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L121:
	addl	$3, %eax
	cmpl	%eax, %esi
	jae	.L127
	movl	$464, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$464, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB10:
	call	*_say
.LEHE10:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$464, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB11:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE11:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L119:
	addl	$2, %eax
	cmpl	%eax, %esi
	jae	.L127
	movl	$458, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$458, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB12:
	call	*_say
.LEHE12:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$458, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB13:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE13:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L106:
	addl	$5, %eax
	cmpl	%eax, %esi
	jae	.L112
	movl	$428, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$428, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB14:
	call	*_say
.LEHE14:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$428, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB15:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE15:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L118:
	movl	$481, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$481, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB16:
	call	*_say
.LEHE16:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$481, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB17:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE17:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L258:
	cmpb	$127, %dl
	movl	$4, %eax
	jbe	.L233
.L102:
	movl	$439, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$439, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB18:
	call	*_say
.LEHE18:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$439, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB19:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE19:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L147:
	movl	$199, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$199, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB20:
	call	*_say
.LEHE20:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC16, 12(%esp)
	movl	$199, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB21:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE21:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L133:
	movl	$281, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$281, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB22:
	call	*_say
.LEHE22:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC13, 12(%esp)
	movl	$281, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB23:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE23:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L184:
	leal	3(%eax), %edx
	cmpl	%edx, %esi
	jb	.L262
	movzwl	1(%eax), %eax
	movl	%edx, (%ebx)
	jmp	.L187
	.p2align 4,,7
	.p2align 3
.L148:
	leal	3(%eax), %edx
	cmpl	%edx, %esi
	jb	.L263
	movzwl	1(%eax), %ebp
	movl	%edx, (%ebx)
	rolw	$8, %bp
	movzwl	%bp, %ebp
	jmp	.L152
	.p2align 4,,7
	.p2align 3
.L134:
	leal	3(%eax), %edx
	cmpl	%edx, %esi
	jb	.L264
	movzwl	1(%eax), %ebp
	movl	%edx, (%ebx)
	rolw	$8, %bp
	movzwl	%bp, %ebp
	jmp	.L138
	.p2align 4,,7
	.p2align 3
.L162:
	leal	2(%eax), %ecx
	cmpl	%ecx, %esi
	jb	.L265
	movzbl	1(%eax), %edx
	movl	%ecx, (%ebx)
	jmp	.L167
	.p2align 4,,7
	.p2align 3
.L165:
	leal	3(%eax), %ecx
	cmpl	%ecx, %esi
	jb	.L266
	movzwl	1(%eax), %edx
	movl	%ecx, (%ebx)
	rolw	$8, %dx
	movzwl	%dx, %edx
	jmp	.L167
.L107:
	addl	$3, %eax
	cmpl	%eax, %esi
	jae	.L112
	movl	$422, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$422, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB24:
	call	*_say
.LEHE24:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$422, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB25:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE25:
	jmp	.L245
	.p2align 4,,7
	.p2align 3
.L103:
	addl	$2, %eax
	cmpl	%eax, %esi
	jae	.L112
	movl	$416, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$416, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB26:
	call	*_say
.LEHE26:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$416, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB27:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE27:
	jmp	.L245
.L246:
	movl	$1048, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$1048, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB28:
	call	*_say
.LEHE28:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC10, 12(%esp)
	movl	$1048, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB29:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE29:
	jmp	.L245
.L210:
.L244:
	movl	%eax, %esi
	movl	%ebx, (%esp)
	call	__cxa_free_exception
	movl	%esi, (%esp)
.LEHB30:
	call	_Unwind_Resume
.L205:
	jmp	.L244
.L264:
	movl	$270, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$270, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE30:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC13, 12(%esp)
	movl	$270, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB31:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE31:
	jmp	.L245
.L211:
	jmp	.L244
.L201:
	.p2align 4,,11
	jmp	.L244
.L215:
	.p2align 4,,11
	jmp	.L244
.L257:
	movl	$822, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$822, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB32:
	call	*_say
.LEHE32:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$822, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB33:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE33:
	jmp	.L245
.L256:
	movl	$812, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$812, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB34:
	call	*_say
.LEHE34:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$812, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB35:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE35:
	jmp	.L245
.L219:
	jmp	.L244
.L221:
	.p2align 4,,11
	jmp	.L244
.L252:
	movl	$276, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$276, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB36:
	call	*_say
.LEHE36:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC13, 12(%esp)
	movl	$276, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB37:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE37:
	jmp	.L245
.L265:
	movl	$800, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$800, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB38:
	call	*_say
.LEHE38:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$800, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB39:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE39:
	jmp	.L245
.L214:
	jmp	.L244
.L223:
	.p2align 4,,11
	jmp	.L244
.L259:
	movl	$434, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$434, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB40:
	call	*_say
.LEHE40:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$434, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB41:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE41:
	jmp	.L245
.L203:
	jmp	.L244
.L204:
	.p2align 4,,11
	jmp	.L244
.L261:
	movl	$476, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$476, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB42:
	call	*_say
.LEHE42:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$476, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB43:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE43:
	jmp	.L245
.L266:
	movl	$806, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$806, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB44:
	call	*_say
.LEHE44:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$806, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB45:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE45:
	jmp	.L245
.L209:
	jmp	.L244
.L222:
	.p2align 4,,11
	jmp	.L244
.L250:
	movl	$863, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$863, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB46:
	call	*_say
.LEHE46:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC18, 12(%esp)
	movl	$863, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB47:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE47:
	jmp	.L245
.L249:
	movl	$841, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$841, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB48:
	call	*_say
.LEHE48:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC18, 12(%esp)
	movl	$841, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB49:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE49:
	jmp	.L245
.L226:
	jmp	.L244
.L229:
	.p2align 4,,11
	jmp	.L244
.L220:
	.p2align 4,,11
	jmp	.L244
.L213:
	.p2align 4,,11
	jmp	.L244
.L254:
	movl	$194, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$194, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB50:
	call	*_say
.LEHE50:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC15, 12(%esp)
	movl	$194, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB51:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE51:
	jmp	.L245
.L262:
	movl	$847, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$847, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB52:
	call	*_say
.LEHE52:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC18, 12(%esp)
	movl	$847, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB53:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE53:
	jmp	.L245
.L217:
	jmp	.L244
.L228:
	.p2align 4,,11
	jmp	.L244
.L216:
	.p2align 4,,11
	jmp	.L244
.L263:
	movl	$188, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$188, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB54:
	call	*_say
.LEHE54:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC14, 12(%esp)
	movl	$188, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB55:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE55:
	jmp	.L245
.L212:
	jmp	.L244
.L202:
	.p2align 4,,11
	jmp	.L244
.L224:
	.p2align 4,,11
	jmp	.L244
.L225:
	.p2align 4,,11
	jmp	.L244
.L207:
	.p2align 4,,11
	jmp	.L244
.L260:
	movl	$853, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$853, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB56:
	call	*_say
.LEHE56:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC18, 12(%esp)
	movl	$853, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB57:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE57:
	jmp	.L245
.L206:
	jmp	.L244
.L227:
	.p2align 4,,11
	jmp	.L244
.L208:
	.p2align 4,,11
	jmp	.L244
.L218:
	.p2align 4,,11
	jmp	.L244
	.cfi_endproc
.LFE151:
	.globl	__gxx_personality_v0
	.section	.gcc_except_table.mp_pick,"aG",@progbits,mp_pick,comdat
.LLSDA151:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE151-.LLSDACSB151
.LLSDACSB151:
	.uleb128 .LEHB0-.LFB151
	.uleb128 .LEHE0-.LEHB0
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB1-.LFB151
	.uleb128 .LEHE1-.LEHB1
	.uleb128 .L225-.LFB151
	.uleb128 0
	.uleb128 .LEHB2-.LFB151
	.uleb128 .LEHE2-.LEHB2
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB3-.LFB151
	.uleb128 .LEHE3-.LEHB3
	.uleb128 .L202-.LFB151
	.uleb128 0
	.uleb128 .LEHB4-.LFB151
	.uleb128 .LEHE4-.LEHB4
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB5-.LFB151
	.uleb128 .LEHE5-.LEHB5
	.uleb128 .L224-.LFB151
	.uleb128 0
	.uleb128 .LEHB6-.LFB151
	.uleb128 .LEHE6-.LEHB6
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB7-.LFB151
	.uleb128 .LEHE7-.LEHB7
	.uleb128 .L220-.LFB151
	.uleb128 0
	.uleb128 .LEHB8-.LFB151
	.uleb128 .LEHE8-.LEHB8
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB9-.LFB151
	.uleb128 .LEHE9-.LEHB9
	.uleb128 .L210-.LFB151
	.uleb128 0
	.uleb128 .LEHB10-.LFB151
	.uleb128 .LEHE10-.LEHB10
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB11-.LFB151
	.uleb128 .LEHE11-.LEHB11
	.uleb128 .L211-.LFB151
	.uleb128 0
	.uleb128 .LEHB12-.LFB151
	.uleb128 .LEHE12-.LEHB12
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB13-.LFB151
	.uleb128 .LEHE13-.LEHB13
	.uleb128 .L212-.LFB151
	.uleb128 0
	.uleb128 .LEHB14-.LFB151
	.uleb128 .LEHE14-.LEHB14
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB15-.LFB151
	.uleb128 .LEHE15-.LEHB15
	.uleb128 .L205-.LFB151
	.uleb128 0
	.uleb128 .LEHB16-.LFB151
	.uleb128 .LEHE16-.LEHB16
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB17-.LFB151
	.uleb128 .LEHE17-.LEHB17
	.uleb128 .L208-.LFB151
	.uleb128 0
	.uleb128 .LEHB18-.LFB151
	.uleb128 .LEHE18-.LEHB18
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB19-.LFB151
	.uleb128 .LEHE19-.LEHB19
	.uleb128 .L203-.LFB151
	.uleb128 0
	.uleb128 .LEHB20-.LFB151
	.uleb128 .LEHE20-.LEHB20
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB21-.LFB151
	.uleb128 .LEHE21-.LEHB21
	.uleb128 .L216-.LFB151
	.uleb128 0
	.uleb128 .LEHB22-.LFB151
	.uleb128 .LEHE22-.LEHB22
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB23-.LFB151
	.uleb128 .LEHE23-.LEHB23
	.uleb128 .L213-.LFB151
	.uleb128 0
	.uleb128 .LEHB24-.LFB151
	.uleb128 .LEHE24-.LEHB24
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB25-.LFB151
	.uleb128 .LEHE25-.LEHB25
	.uleb128 .L206-.LFB151
	.uleb128 0
	.uleb128 .LEHB26-.LFB151
	.uleb128 .LEHE26-.LEHB26
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB27-.LFB151
	.uleb128 .LEHE27-.LEHB27
	.uleb128 .L207-.LFB151
	.uleb128 0
	.uleb128 .LEHB28-.LFB151
	.uleb128 .LEHE28-.LEHB28
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB29-.LFB151
	.uleb128 .LEHE29-.LEHB29
	.uleb128 .L201-.LFB151
	.uleb128 0
	.uleb128 .LEHB30-.LFB151
	.uleb128 .LEHE30-.LEHB30
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB31-.LFB151
	.uleb128 .LEHE31-.LEHB31
	.uleb128 .L215-.LFB151
	.uleb128 0
	.uleb128 .LEHB32-.LFB151
	.uleb128 .LEHE32-.LEHB32
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB33-.LFB151
	.uleb128 .LEHE33-.LEHB33
	.uleb128 .L219-.LFB151
	.uleb128 0
	.uleb128 .LEHB34-.LFB151
	.uleb128 .LEHE34-.LEHB34
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB35-.LFB151
	.uleb128 .LEHE35-.LEHB35
	.uleb128 .L221-.LFB151
	.uleb128 0
	.uleb128 .LEHB36-.LFB151
	.uleb128 .LEHE36-.LEHB36
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB37-.LFB151
	.uleb128 .LEHE37-.LEHB37
	.uleb128 .L214-.LFB151
	.uleb128 0
	.uleb128 .LEHB38-.LFB151
	.uleb128 .LEHE38-.LEHB38
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB39-.LFB151
	.uleb128 .LEHE39-.LEHB39
	.uleb128 .L223-.LFB151
	.uleb128 0
	.uleb128 .LEHB40-.LFB151
	.uleb128 .LEHE40-.LEHB40
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB41-.LFB151
	.uleb128 .LEHE41-.LEHB41
	.uleb128 .L204-.LFB151
	.uleb128 0
	.uleb128 .LEHB42-.LFB151
	.uleb128 .LEHE42-.LEHB42
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB43-.LFB151
	.uleb128 .LEHE43-.LEHB43
	.uleb128 .L209-.LFB151
	.uleb128 0
	.uleb128 .LEHB44-.LFB151
	.uleb128 .LEHE44-.LEHB44
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB45-.LFB151
	.uleb128 .LEHE45-.LEHB45
	.uleb128 .L222-.LFB151
	.uleb128 0
	.uleb128 .LEHB46-.LFB151
	.uleb128 .LEHE46-.LEHB46
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB47-.LFB151
	.uleb128 .LEHE47-.LEHB47
	.uleb128 .L226-.LFB151
	.uleb128 0
	.uleb128 .LEHB48-.LFB151
	.uleb128 .LEHE48-.LEHB48
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB49-.LFB151
	.uleb128 .LEHE49-.LEHB49
	.uleb128 .L229-.LFB151
	.uleb128 0
	.uleb128 .LEHB50-.LFB151
	.uleb128 .LEHE50-.LEHB50
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB51-.LFB151
	.uleb128 .LEHE51-.LEHB51
	.uleb128 .L217-.LFB151
	.uleb128 0
	.uleb128 .LEHB52-.LFB151
	.uleb128 .LEHE52-.LEHB52
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB53-.LFB151
	.uleb128 .LEHE53-.LEHB53
	.uleb128 .L228-.LFB151
	.uleb128 0
	.uleb128 .LEHB54-.LFB151
	.uleb128 .LEHE54-.LEHB54
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB55-.LFB151
	.uleb128 .LEHE55-.LEHB55
	.uleb128 .L218-.LFB151
	.uleb128 0
	.uleb128 .LEHB56-.LFB151
	.uleb128 .LEHE56-.LEHB56
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB57-.LFB151
	.uleb128 .LEHE57-.LEHB57
	.uleb128 .L227-.LFB151
	.uleb128 0
.LLSDACSE151:
	.section	.text.mp_pick,"axG",@progbits,mp_pick,comdat
	.size	mp_pick, .-mp_pick
	.section	.rodata.str1.1
.LC22:
	.string	"box/tuple.cc"
.LC23:
	.string	"ClientError"
	.text
	.p2align 4,,15
	.globl	_Z17field_type_createP10field_typejP5rlist
	.type	_Z17field_type_createP10field_typejP5rlist, @function
_Z17field_type_createP10field_typejP5rlist:
.LFB186:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA186
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$60, %esp
	.cfi_def_cfa_offset 80
	movl	84(%esp), %eax
	movl	80(%esp), %edi
	movl	$0, 4(%esp)
	sall	$2, %eax
	movl	%eax, 8(%esp)
	movl	%edi, (%esp)
	call	memset
	movl	88(%esp), %eax
	movl	4(%eax), %ebp
	cmpl	%eax, %ebp
	je	.L267
	.p2align 4,,7
	.p2align 3
.L279:
	leal	64(%ebp), %eax
	movl	%eax, %edx
	movl	%eax, 44(%esp)
	movl	52(%ebp), %eax
	movl	%edx, %ebx
	leal	(%edx,%eax,8), %ecx
	cmpl	%ecx, %edx
	jae	.L274
	.p2align 4,,7
	.p2align 3
.L280:
	movl	(%ebx), %eax
	movl	4(%ebx), %edx
	leal	(%edi,%eax,4), %esi
	movl	(%esi), %eax
	testl	%eax, %eax
	je	.L273
	cmpl	%edx, %eax
	jne	.L283
.L273:
	addl	$8, %ebx
	cmpl	%ebx, %ecx
	movl	%edx, (%esi)
	ja	.L280
.L274:
	movl	4(%ebp), %ebp
	cmpl	88(%esp), %ebp
	jne	.L279
.L267:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
.L283:
	.cfi_restore_state
	movl	$68, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC23, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$68, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
.LEHB58:
	call	*_say
.LEHE58:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	%eax, %edi
	movl	(%esi), %eax
	movl	field_type_strs(,%eax,4), %eax
	movl	%eax, 28(%esp)
	movl	4(%ebx), %eax
	subl	44(%esp), %ebx
	movl	field_type_strs(,%eax,4), %eax
	sarl	$3, %ebx
	movl	%ebx, 20(%esp)
	movl	%eax, 24(%esp)
	movl	8(%ebp), %eax
	movl	$46, 12(%esp)
	movl	$68, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, 16(%esp)
	movl	%edi, (%esp)
.LEHB59:
	call	_ZN11ClientErrorC1EPKcjjz
.LEHE59:
	movl	$_ZN11ClientErrorD1Ev, 8(%esp)
	movl	$_ZTI11ClientError, 4(%esp)
	movl	%edi, (%esp)
.LEHB60:
	call	__cxa_throw
.L278:
	movl	%eax, %ebx
	movl	%edi, (%esp)
	call	__cxa_free_exception
	movl	%ebx, (%esp)
	call	_Unwind_Resume
.LEHE60:
	.cfi_endproc
.LFE186:
	.section	.gcc_except_table,"a",@progbits
.LLSDA186:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE186-.LLSDACSB186
.LLSDACSB186:
	.uleb128 .LEHB58-.LFB186
	.uleb128 .LEHE58-.LEHB58
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB59-.LFB186
	.uleb128 .LEHE59-.LEHB59
	.uleb128 .L278-.LFB186
	.uleb128 0
	.uleb128 .LEHB60-.LFB186
	.uleb128 .LEHE60-.LEHB60
	.uleb128 0
	.uleb128 0
.LLSDACSE186:
	.text
	.size	_Z17field_type_createP10field_typejP5rlist, .-_Z17field_type_createP10field_typejP5rlist
	.section	.rodata.str1.1
.LC24:
	.string	"LoggedError"
.LC25:
	.string	"malloc"
.LC26:
	.string	"tuple_formats"
	.text
	.p2align 4,,15
	.globl	_Z21tuple_format_registerP12tuple_format
	.type	_Z21tuple_format_registerP12tuple_format, @function
_Z21tuple_format_registerP12tuple_format:
.LFB187:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA187
	pushl	%edi
	.cfi_def_cfa_offset 8
	.cfi_offset 7, -8
	pushl	%esi
	.cfi_def_cfa_offset 12
	.cfi_offset 6, -12
	pushl	%ebx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	subl	$32, %esp
	.cfi_def_cfa_offset 48
	movl	_ZL19recycled_format_ids, %eax
	movl	48(%esp), %ebx
	cmpl	$65535, %eax
	je	.L285
	movl	tuple_formats, %edx
	movw	%ax, (%ebx)
	movl	(%edx,%eax,4), %ecx
	movzwl	%ax, %eax
	movl	%ebx, (%edx,%eax,4)
	movl	%ecx, _ZL19recycled_format_ids
	addl	$32, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L285:
	.cfi_restore_state
	movl	_ZL12formats_size, %esi
	cmpl	_ZL16formats_capacity, %esi
	je	.L308
.L287:
	cmpl	$65535, %esi
	je	.L309
	movl	tuple_formats, %edx
	leal	1(%esi), %eax
	movl	%eax, _ZL12formats_size
	movl	%esi, %eax
	movzwl	%ax, %eax
	movw	%si, (%ebx)
	movl	%ebx, (%edx,%eax,4)
	addl	$32, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L308:
	.cfi_restore_state
	testl	%esi, %esi
	je	.L297
	leal	(%esi,%esi), %edi
	leal	0(,%esi,8), %eax
.L288:
	movl	%eax, 4(%esp)
	movl	tuple_formats, %eax
	movl	%eax, (%esp)
	call	realloc
	testl	%eax, %eax
	je	.L310
	movl	%edi, _ZL16formats_capacity
	movl	%eax, tuple_formats
	jmp	.L287
	.p2align 4,,7
	.p2align 3
.L297:
	movl	$64, %eax
	movl	$16, %edi
	jmp	.L288
.L309:
	movl	$100, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC24, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$100, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
.LEHB61:
	call	*_say
.LEHE61:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$28, 12(%esp)
	movl	$100, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, %ebx
	movl	_ZL16formats_capacity, %eax
	movl	%ebx, (%esp)
	movl	%eax, 16(%esp)
.LEHB62:
	call	_ZN11ClientErrorC2EPKcjjz
.LEHE62:
	movl	$_ZTV11LoggedError+8, (%ebx)
	movl	%ebx, (%esp)
.LEHB63:
	call	_ZNK11ClientError3logEv
.LEHE63:
.L303:
	movl	$_ZN11LoggedErrorD1Ev, 8(%esp)
	movl	$_ZTI11LoggedError, 4(%esp)
	movl	%ebx, (%esp)
.LEHB64:
	call	__cxa_throw
.L310:
	movl	$93, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC24, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$93, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE64:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC25, 24(%esp)
	movl	$.LC26, 20(%esp)
	movl	$24, 16(%esp)
	movl	$7, 12(%esp)
	movl	$93, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, %ebx
	movl	%eax, (%esp)
.LEHB65:
	call	_ZN11ClientErrorC2EPKcjjz
.LEHE65:
	movl	$_ZTV11LoggedError+8, (%ebx)
	movl	%ebx, (%esp)
.LEHB66:
	call	_ZNK11ClientError3logEv
.LEHE66:
	jmp	.L303
.L301:
.L307:
	movl	$_ZTV6Object+8, (%ebx)
	movl	%eax, %esi
.L296:
	movl	%ebx, (%esp)
	call	__cxa_free_exception
	movl	%esi, (%esp)
.LEHB67:
	call	_Unwind_Resume
.LEHE67:
.L299:
.L306:
	movl	%eax, %esi
	jmp	.L296
.L300:
	.p2align 4,,3
	jmp	.L307
.L298:
	.p2align 4,,9
	jmp	.L306
	.cfi_endproc
.LFE187:
	.section	.gcc_except_table
.LLSDA187:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE187-.LLSDACSB187
.LLSDACSB187:
	.uleb128 .LEHB61-.LFB187
	.uleb128 .LEHE61-.LEHB61
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB62-.LFB187
	.uleb128 .LEHE62-.LEHB62
	.uleb128 .L299-.LFB187
	.uleb128 0
	.uleb128 .LEHB63-.LFB187
	.uleb128 .LEHE63-.LEHB63
	.uleb128 .L301-.LFB187
	.uleb128 0
	.uleb128 .LEHB64-.LFB187
	.uleb128 .LEHE64-.LEHB64
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB65-.LFB187
	.uleb128 .LEHE65-.LEHB65
	.uleb128 .L298-.LFB187
	.uleb128 0
	.uleb128 .LEHB66-.LFB187
	.uleb128 .LEHE66-.LEHB66
	.uleb128 .L300-.LFB187
	.uleb128 0
	.uleb128 .LEHB67-.LFB187
	.uleb128 .LEHE67-.LEHB67
	.uleb128 0
	.uleb128 0
.LLSDACSE187:
	.text
	.size	_Z21tuple_format_registerP12tuple_format, .-_Z21tuple_format_registerP12tuple_format
	.p2align 4,,15
	.globl	_Z23tuple_format_deregisterP12tuple_format
	.type	_Z23tuple_format_deregisterP12tuple_format, @function
_Z23tuple_format_deregisterP12tuple_format:
.LFB188:
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	movl	8(%esp), %eax
	movzwl	(%eax), %edx
	cmpw	$-1, %dx
	je	.L311
	movl	tuple_formats, %ecx
	movl	_ZL19recycled_format_ids, %ebx
	movl	%edx, _ZL19recycled_format_ids
	movl	%ebx, (%ecx,%edx,4)
	movl	$-1, %edx
	movw	%dx, (%eax)
.L311:
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE188:
	.size	_Z23tuple_format_deregisterP12tuple_format, .-_Z23tuple_format_deregisterP12tuple_format
	.p2align 4,,15
	.globl	_Z19tuple_format_deleteP12tuple_format
	.type	_Z19tuple_format_deleteP12tuple_format, @function
_Z19tuple_format_deleteP12tuple_format:
.LFB190:
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	movl	8(%esp), %eax
	movzwl	(%eax), %edx
	cmpw	$-1, %dx
	je	.L318
	movl	tuple_formats, %ecx
	movl	_ZL19recycled_format_ids, %ebx
	movl	%edx, _ZL19recycled_format_ids
	movl	%ebx, (%ecx,%edx,4)
	movl	$-1, %ecx
	movw	%cx, (%eax)
.L318:
	movl	%eax, 8(%esp)
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	jmp	free
	.cfi_endproc
.LFE190:
	.size	_Z19tuple_format_deleteP12tuple_format, .-_Z19tuple_format_deleteP12tuple_format
	.section	.rodata.str1.1
.LC27:
	.string	"tuple format"
	.text
	.p2align 4,,15
	.globl	_Z16tuple_format_newP5rlist
	.type	_Z16tuple_format_newP5rlist, @function
_Z16tuple_format_newP5rlist:
.LFB191:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA191
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$44, %esp
	.cfi_def_cfa_offset 64
	movl	64(%esp), %esi
	movl	4(%esi), %edi
	cmpl	%edi, %esi
	je	.L343
	xorl	%ebx, %ebx
	xorl	%ebp, %ebp
	.p2align 4,,7
	.p2align 3
.L329:
	movl	52(%edi), %edx
	leal	64(%edi), %eax
	addl	$1, %ebp
	leal	(%eax,%edx,8), %ecx
	cmpl	%ecx, %eax
	jae	.L325
	.p2align 4,,7
	.p2align 3
.L327:
	movl	(%eax), %edx
	cmpl	%edx, %ebx
	jae	.L326
	movl	%edx, %ebx
.L326:
	addl	$8, %eax
	cmpl	%eax, %ecx
	ja	.L327
.L325:
	movl	4(%edi), %edi
	cmpl	%edi, %esi
	jne	.L329
	testl	%ebp, %ebp
	je	.L344
	leal	1(%ebx), %ebp
	leal	24(,%ebp,8), %eax
.L324:
	movl	%eax, (%esp)
	call	malloc
	testl	%eax, %eax
	movl	%eax, %edi
	je	.L359
	movl	$0, 4(%eax)
	movl	$-1, %eax
	movw	%ax, (%edi)
	leal	24(%edi,%ebp,4), %eax
	movl	%ebx, 8(%edi)
	movl	%ebp, 12(%edi)
	movl	%eax, 16(%edi)
	movl	%edi, (%esp)
.LEHB68:
	call	_Z21tuple_format_registerP12tuple_format
	movl	%esi, 8(%esp)
	movl	12(%edi), %eax
	movl	%eax, 4(%esp)
	movl	16(%edi), %eax
	movl	%eax, (%esp)
	call	_Z17field_type_createP10field_typejP5rlist
.LEHE68:
	movl	8(%edi), %ebx
	testl	%ebx, %ebx
	je	.L335
	movl	16(%edi), %esi
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	jmp	.L339
	.p2align 4,,7
	.p2align 3
.L361:
	movl	$-2147483648, 24(%edi,%edx,4)
	addl	$1, %edx
	cmpl	%ebx, %edx
	movl	%edx, %eax
	je	.L360
.L339:
	movl	4(%esi,%eax,4), %ebp
	testl	%ebp, %ebp
	je	.L361
	subl	$1, %ecx
	movl	%ecx, 24(%edi,%edx,4)
	addl	$1, %edx
	cmpl	%ebx, %edx
	movl	%edx, %eax
	jne	.L339
.L360:
	negl	%ecx
	leal	0(,%ecx,4), %ebx
.L335:
	movl	12(%edi), %eax
	testl	%eax, %eax
	je	.L340
	movl	$-2147483648, 20(%edi,%eax,4)
.L340:
	movl	%ebx, 20(%edi)
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%edi, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
.L344:
	.cfi_restore_state
	movl	$24, %eax
	xorl	%ebp, %ebp
	jmp	.L324
.L343:
	movl	$24, %eax
	xorl	%ebx, %ebx
	xorl	%ebp, %ebp
	jmp	.L324
.L359:
	movl	$143, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC24, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$143, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
.LEHB69:
	call	*_say
.LEHE69:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC25, 24(%esp)
	movl	$.LC27, 20(%esp)
	movl	$24, 16(%esp)
	movl	$7, 12(%esp)
	movl	$143, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, %ebx
	movl	%eax, (%esp)
.LEHB70:
	call	_ZN11ClientErrorC2EPKcjjz
.LEHE70:
	movl	$_ZTV11LoggedError+8, (%ebx)
	movl	%ebx, (%esp)
.LEHB71:
	call	_ZNK11ClientError3logEv
.LEHE71:
	movl	$_ZN11LoggedErrorD1Ev, 8(%esp)
	movl	$_ZTI11LoggedError, 4(%esp)
	movl	%ebx, (%esp)
.LEHB72:
	call	__cxa_throw
.LEHE72:
.L345:
	movl	%eax, (%esp)
	call	__cxa_begin_catch
	movl	%edi, (%esp)
	call	_Z19tuple_format_deleteP12tuple_format
.LEHB73:
	call	__cxa_rethrow
.LEHE73:
.L348:
	movl	$_ZTV6Object+8, (%ebx)
	movl	%eax, %esi
.L333:
	movl	%ebx, (%esp)
	call	__cxa_free_exception
	movl	%esi, (%esp)
.LEHB74:
	call	_Unwind_Resume
.LEHE74:
.L347:
	movl	%eax, %esi
	jmp	.L333
.L346:
	movl	%eax, %ebx
	call	__cxa_end_catch
	movl	%ebx, (%esp)
.LEHB75:
	call	_Unwind_Resume
.LEHE75:
	.cfi_endproc
.LFE191:
	.section	.gcc_except_table
	.align 4
.LLSDA191:
	.byte	0xff
	.byte	0
	.uleb128 .LLSDATT191-.LLSDATTD191
.LLSDATTD191:
	.byte	0x1
	.uleb128 .LLSDACSE191-.LLSDACSB191
.LLSDACSB191:
	.uleb128 .LEHB68-.LFB191
	.uleb128 .LEHE68-.LEHB68
	.uleb128 .L345-.LFB191
	.uleb128 0x1
	.uleb128 .LEHB69-.LFB191
	.uleb128 .LEHE69-.LEHB69
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB70-.LFB191
	.uleb128 .LEHE70-.LEHB70
	.uleb128 .L347-.LFB191
	.uleb128 0
	.uleb128 .LEHB71-.LFB191
	.uleb128 .LEHE71-.LEHB71
	.uleb128 .L348-.LFB191
	.uleb128 0
	.uleb128 .LEHB72-.LFB191
	.uleb128 .LEHE72-.LEHB72
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB73-.LFB191
	.uleb128 .LEHE73-.LEHB73
	.uleb128 .L346-.LFB191
	.uleb128 0
	.uleb128 .LEHB74-.LFB191
	.uleb128 .LEHE74-.LEHB74
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB75-.LFB191
	.uleb128 .LEHE75-.LEHB75
	.uleb128 0
	.uleb128 0
.LLSDACSE191:
	.byte	0x1
	.byte	0
	.align 4
	.long	0
.LLSDATT191:
	.text
	.size	_Z16tuple_format_newP5rlist, .-_Z16tuple_format_newP5rlist
	.p2align 4,,15
	.globl	_Z20tuple_init_field_mapP12tuple_formatP5tuplePj
	.type	_Z20tuple_init_field_mapP12tuple_formatP5tuplePj, @function
_Z20tuple_init_field_mapP12tuple_formatP5tuplePj:
.LFB192:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA192
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$92, %esp
	.cfi_def_cfa_offset 112
	movl	112(%esp), %ebx
	movl	12(%ebx), %edx
	testl	%edx, %edx
	jne	.L691
.L362:
	addl	$92, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L691:
	.cfi_restore_state
	movl	116(%esp), %eax
	movzbl	8(%eax), %ecx
	leal	9(%eax), %esi
	movl	%esi, 76(%esp)
	cmpb	$-36, %cl
	je	.L365
	ja	.L366
	leal	112(%ecx), %eax
	movl	%ecx, %edi
	andl	$15, %edi
	cmpb	$15, %al
	ja	.L594
.L369:
	cmpl	%edi, %edx
	ja	.L692
	movl	16(%ebx), %ebp
	leal	24(%ebx), %eax
	xorl	%esi, %esi
	movl	116(%esp), %ecx
	movl	%eax, 36(%esp)
	leal	0(%ebp,%edx,4), %eax
	leal	8(%ecx), %edi
	cmpl	%eax, %ebp
	movl	%eax, 32(%esp)
	movl	%edi, 40(%esp)
	jae	.L362
.L660:
	movl	76(%esp), %ebx
	movzbl	(%ebx), %eax
	movl	%eax, %edx
	addb	$-128, %dl
	js	.L373
	movzbl	%dl, %edx
	jmp	*.L375(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L375:
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L374
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L376
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L378
	.long	.L379
	.long	.L380
	.long	.L380
	.long	.L381
	.long	.L381
	.long	.L381
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L382
	.long	.L383
	.long	.L373
	.long	.L373
	.long	.L373
	.long	.L373
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L377
	.long	.L377
	.long	.L377
	.long	.L376
	.long	.L376
	.long	.L374
	.long	.L374
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.long	.L384
	.text
	.p2align 4,,7
	.p2align 3
.L366:
	cmpb	$-35, %cl
	jne	.L594
	movl	116(%esp), %eax
	movl	9(%eax), %edi
	leal	13(%eax), %esi
	movl	%esi, 76(%esp)
	bswap	%edi
	jmp	.L369
	.p2align 4,,7
	.p2align 3
.L379:
	movl	$_ZZ7mp_loadE12__FUNCTION__, 12(%esp)
	movl	$1036, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
.LEHB76:
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L384:
	addl	$48, %eax
	leal	1(%ebx), %edx
	cmpb	$47, %al
	movl	%edx, 76(%esp)
	ja	.L554
	movzbl	%al, %eax
	jmp	*.L392(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L392:
	.long	.L391
	.long	.L393
	.long	.L394
	.long	.L395
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.long	.L396
	.text
	.p2align 4,,7
	.p2align 3
.L383:
	leal	9(%ebx), %eax
	movl	%eax, 76(%esp)
	movl	$7, %eax
.L397:
	movl	0(%ebp), %edx
	cmpl	$1, %edx
	je	.L615
	cmpl	$3, %edx
	je	.L693
.L614:
	movl	36(%esp), %eax
	movl	(%eax,%esi,4), %eax
	leal	2147483647(%eax), %edx
	cmpl	$2147483646, %edx
	ja	.L616
	movl	120(%esp), %edi
	subl	40(%esp), %ebx
	movl	%ebx, (%edi,%eax,4)
.L616:
	addl	$4, %ebp
	addl	$1, %esi
	cmpl	%ebp, 32(%esp)
	ja	.L660
	jmp	.L362
	.p2align 4,,7
	.p2align 3
.L382:
	leal	5(%ebx), %eax
	movl	%eax, 76(%esp)
	movl	$6, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L381:
	leal	1(%ebx), %edx
	cmpb	$-59, %al
	movl	%edx, 76(%esp)
	je	.L610
	cmpb	$-58, %al
	jne	.L694
	movl	1(%ebx), %eax
	bswap	%eax
	leal	5(%ebx,%eax), %eax
	movl	%eax, 76(%esp)
	movl	$9, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L380:
	leal	1(%ebx), %eax
	movl	%eax, 76(%esp)
	movl	$3, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L378:
	leal	1(%ebx), %eax
	movl	%eax, 76(%esp)
	xorl	%eax, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L377:
	leal	1(%ebx), %edx
	cmpb	$-39, %al
	movl	%edx, 76(%esp)
	je	.L604
	jbe	.L695
	cmpb	$-38, %al
	je	.L607
	cmpb	$-37, %al
	.p2align 4,,7
	jne	.L603
	movl	1(%ebx), %eax
	bswap	%eax
	leal	5(%ebx,%eax), %eax
	movl	%eax, 76(%esp)
	movl	$8, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L376:
	leal	1(%ebx), %edx
	cmpb	$-36, %al
	movl	%edx, 76(%esp)
	je	.L595
	ja	.L596
	leal	112(%eax), %edx
	cmpb	$15, %dl
	ja	.L594
	andl	$15, %eax
	movl	%eax, %ecx
.L599:
	xorl	%edi, %edi
	testl	%ecx, %ecx
	je	.L601
	movl	%ebx, 44(%esp)
	movl	%edi, %ebx
	movl	%ecx, %edi
	.p2align 4,,7
	.p2align 3
.L649:
	leal	76(%esp), %eax
	addl	$1, %ebx
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L649
	movl	44(%esp), %ebx
.L601:
	movl	$1, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L374:
	leal	1(%ebx), %edx
	cmpb	$-34, %al
	movl	%edx, 76(%esp)
	je	.L399
	ja	.L400
	leal	-128(%eax), %edx
	cmpb	$15, %dl
	ja	.L560
	andl	$15, %eax
	movl	%eax, 44(%esp)
.L403:
	movl	44(%esp), %ecx
	testl	%ecx, %ecx
	je	.L404
	xorl	%eax, %eax
	movl	%ebx, 48(%esp)
	movl	%eax, %ebx
	movl	%esi, 52(%esp)
.L593:
	movl	76(%esp), %ecx
	movzbl	(%ecx), %edx
	movl	%edx, %eax
	addb	$-128, %al
	js	.L405
	movzbl	%al, %eax
	jmp	*.L407(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L407:
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L406
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L408
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L412
	.long	.L379
	.long	.L412
	.long	.L412
	.long	.L413
	.long	.L413
	.long	.L413
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L414
	.long	.L415
	.long	.L405
	.long	.L405
	.long	.L405
	.long	.L405
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L409
	.long	.L409
	.long	.L409
	.long	.L408
	.long	.L408
	.long	.L406
	.long	.L406
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.long	.L416
	.text
	.p2align 4,,7
	.p2align 3
.L373:
	leal	1(%ebx), %edx
	testb	%al, %al
	movl	%edx, 76(%esp)
	js	.L696
.L385:
	movl	0(%ebp), %eax
	cmpl	$1, %eax
	jne	.L612
	jmp	.L614
	.p2align 4,,7
	.p2align 3
.L396:
	movl	0(%ebp), %eax
	cmpl	$1, %eax
	je	.L615
.L612:
	cmpl	$3, %eax
	.p2align 4,,2
	jne	.L614
	.p2align 4,,7
	.p2align 3
.L615:
	movl	$232, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC23, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$232, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE76:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	%eax, %ebx
	movl	0(%ebp), %eax
	movl	%esi, 16(%esp)
	movl	$40, 12(%esp)
	movl	$232, 8(%esp)
	movl	field_type_strs(,%eax,4), %eax
	movl	$.LC22, 4(%esp)
	movl	%ebx, (%esp)
	movl	%eax, 20(%esp)
.LEHB77:
	call	_ZN11ClientErrorC1EPKcjjz
.LEHE77:
	movl	$_ZN11ClientErrorD1Ev, 8(%esp)
	movl	$_ZTI11ClientError, 4(%esp)
	movl	%ebx, (%esp)
.LEHB78:
	call	__cxa_throw
	.p2align 4,,7
	.p2align 3
.L693:
	cmpl	$8, %eax
	je	.L614
	jmp	.L615
	.p2align 4,,7
	.p2align 3
.L594:
	movl	$_ZZ13mp_array_loadE12__FUNCTION__, 12(%esp)
	movl	$222, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L365:
	movl	116(%esp), %eax
	movzwl	9(%eax), %ecx
	leal	11(%eax), %esi
	movl	%esi, 76(%esp)
	rolw	$8, %cx
	movzwl	%cx, %edi
	jmp	.L369
	.p2align 4,,7
	.p2align 3
.L696:
	cmpb	$-52, %al
	je	.L697
	cmpb	$-51, %al
	je	.L698
	cmpb	$-50, %al
	.p2align 4,,5
	je	.L699
	cmpb	$-49, %al
	.p2align 4,,5
	jne	.L389
	leal	9(%ebx), %eax
	movl	%eax, 76(%esp)
	jmp	.L385
	.p2align 4,,7
	.p2align 3
.L610:
	movzwl	1(%ebx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%ebx,%eax), %eax
	movl	%eax, 76(%esp)
	movl	$9, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L695:
	leal	96(%eax), %ecx
	cmpb	$31, %cl
	ja	.L603
	andl	$31, %eax
	addl	%eax, %edx
	movl	$8, %eax
	movl	%edx, 76(%esp)
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L399:
	movzwl	1(%ebx), %eax
	leal	3(%ebx), %edx
	movl	%edx, 76(%esp)
	rolw	$8, %ax
	movzwl	%ax, %eax
	movl	%eax, 44(%esp)
	jmp	.L403
	.p2align 4,,7
	.p2align 3
.L595:
	movzwl	1(%ebx), %edx
	leal	3(%ebx), %eax
	movl	%eax, 76(%esp)
	rolw	$8, %dx
	movzwl	%dx, %eax
	movl	%eax, %ecx
	jmp	.L599
	.p2align 4,,7
	.p2align 3
.L412:
	leal	1(%ecx), %eax
	movl	%eax, 76(%esp)
.L417:
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L501
	movzbl	%cl, %ecx
	jmp	*.L503(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L503:
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L502
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L504
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L508
	.long	.L379
	.long	.L508
	.long	.L508
	.long	.L509
	.long	.L509
	.long	.L509
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L510
	.long	.L511
	.long	.L501
	.long	.L501
	.long	.L501
	.long	.L501
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L505
	.long	.L505
	.long	.L505
	.long	.L504
	.long	.L504
	.long	.L502
	.long	.L502
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.long	.L512
	.text
	.p2align 4,,7
	.p2align 3
.L508:
	addl	$1, %eax
	movl	%eax, 76(%esp)
.L515:
	addl	$1, %ebx
	cmpl	44(%esp), %ebx
	jne	.L593
	movl	48(%esp), %ebx
	movl	52(%esp), %esi
.L404:
	movl	$2, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L394:
	leal	5(%ebx), %eax
	movl	%eax, 76(%esp)
	movl	$5, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L393:
	leal	3(%ebx), %eax
	movl	%eax, 76(%esp)
	movl	$5, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L391:
	leal	2(%ebx), %eax
	movl	%eax, 76(%esp)
	movl	$5, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L395:
	leal	9(%ebx), %eax
	movl	%eax, 76(%esp)
	movl	$5, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L415:
	leal	9(%ecx), %eax
	movl	%eax, 76(%esp)
	jmp	.L417
.L414:
	leal	5(%ecx), %eax
	movl	%eax, 76(%esp)
	jmp	.L417
.L416:
	addl	$48, %edx
	leal	1(%ecx), %eax
	cmpb	$47, %dl
	movl	%eax, 76(%esp)
	ja	.L554
	movzbl	%dl, %edx
	jmp	*.L423(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L423:
	.long	.L422
	.long	.L424
	.long	.L414
	.long	.L415
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.long	.L417
	.text
.L409:
	leal	1(%ecx), %eax
	cmpb	$-39, %dl
	movl	%eax, 76(%esp)
	je	.L688
	jbe	.L700
	cmpb	$-38, %dl
	je	.L499
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L603
.L500:
	movl	1(%ecx), %eax
	bswap	%eax
	leal	5(%ecx,%eax), %eax
	movl	%eax, 76(%esp)
	jmp	.L417
.L408:
	leal	1(%ecx), %eax
	cmpb	$-36, %dl
	movl	%eax, 76(%esp)
	je	.L437
	ja	.L438
	leal	112(%edx), %ecx
	cmpb	$15, %cl
	ja	.L594
	movl	%edx, %edi
	andl	$15, %edi
	movl	%edi, 56(%esp)
.L441:
	movl	56(%esp), %edx
	testl	%edx, %edx
	je	.L417
	xorl	%esi, %esi
	movl	%ebx, 60(%esp)
.L491:
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L442
	movzbl	%cl, %ecx
	jmp	*.L444(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L444:
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L443
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L445
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L449
	.long	.L379
	.long	.L449
	.long	.L449
	.long	.L450
	.long	.L450
	.long	.L450
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L451
	.long	.L452
	.long	.L442
	.long	.L442
	.long	.L442
	.long	.L442
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L446
	.long	.L446
	.long	.L446
	.long	.L445
	.long	.L445
	.long	.L443
	.long	.L443
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.long	.L453
	.text
.L406:
	leal	1(%ecx), %eax
	cmpb	$-34, %dl
	movl	%eax, 76(%esp)
	je	.L428
	ja	.L429
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L560
	movl	%edx, %edi
	andl	$15, %edi
.L432:
	xorl	%esi, %esi
	testl	%edi, %edi
	je	.L687
	.p2align 4,,7
	.p2align 3
.L646:
	leal	76(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%edi, %esi
	jne	.L646
.L687:
	movl	76(%esp), %eax
	jmp	.L417
.L413:
	leal	1(%ecx), %eax
	cmpb	$-59, %dl
	movl	%eax, 76(%esp)
	je	.L499
	cmpb	$-58, %dl
	je	.L500
.L688:
	movzbl	1(%ecx), %eax
	leal	2(%ecx,%eax), %eax
	movl	%eax, 76(%esp)
	jmp	.L417
.L501:
	leal	1(%eax), %ecx
	testb	%dl, %dl
	movl	%ecx, 76(%esp)
	jns	.L515
	cmpb	$-52, %dl
	je	.L519
	cmpb	$-51, %dl
	je	.L521
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L510
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L389
.L511:
	addl	$9, %eax
	movl	%eax, 76(%esp)
	jmp	.L515
.L510:
	addl	$5, %eax
	movl	%eax, 76(%esp)
	jmp	.L515
.L509:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, 76(%esp)
	je	.L591
	cmpb	$-58, %dl
	jne	.L690
.L592:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L515
.L502:
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, 76(%esp)
	je	.L525
	ja	.L526
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L560
	movl	%edx, %esi
	andl	$15, %esi
.L529:
	testl	%esi, %esi
	je	.L515
	xorl	%edi, %edi
	.p2align 4,,7
	.p2align 3
.L530:
	leal	76(%esp), %eax
	addl	$1, %edi
	movl	%eax, (%esp)
	call	mp_load
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%esi, %edi
	jne	.L530
	jmp	.L515
.L512:
	addl	$48, %edx
	leal	1(%eax), %ecx
	cmpb	$47, %dl
	movl	%ecx, 76(%esp)
	ja	.L554
	movzbl	%dl, %edx
	jmp	*.L520(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L520:
	.long	.L519
	.long	.L521
	.long	.L510
	.long	.L511
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.long	.L515
	.text
.L505:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, 76(%esp)
	je	.L690
	jbe	.L701
	cmpb	$-38, %dl
	je	.L591
	cmpb	$-37, %dl
	.p2align 4,,5
	je	.L592
	.p2align 4,,7
	.p2align 3
.L603:
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$779, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
.L504:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, 76(%esp)
	je	.L532
	ja	.L533
	leal	112(%edx), %eax
	cmpb	$15, %al
	ja	.L594
	movl	%edx, %eax
	andl	$15, %eax
	movl	%eax, 56(%esp)
.L536:
	movl	56(%esp), %eax
	testl	%eax, %eax
	je	.L515
	xorl	%esi, %esi
	movl	%ebx, 60(%esp)
.L583:
	movl	76(%esp), %eax
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L537
	movzbl	%cl, %ecx
	jmp	*.L539(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L539:
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L538
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L540
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L544
	.long	.L379
	.long	.L544
	.long	.L544
	.long	.L545
	.long	.L545
	.long	.L545
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L546
	.long	.L547
	.long	.L537
	.long	.L537
	.long	.L537
	.long	.L537
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L379
	.long	.L541
	.long	.L541
	.long	.L541
	.long	.L540
	.long	.L540
	.long	.L538
	.long	.L538
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.long	.L548
	.text
	.p2align 4,,7
	.p2align 3
.L554:
	movl	$_ZZ11mp_int_loadE12__FUNCTION__, 12(%esp)
	movl	$572, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
.L405:
	leal	1(%ecx), %eax
	testb	%dl, %dl
	movl	%eax, 76(%esp)
	jns	.L417
	cmpb	$-52, %dl
	je	.L422
	cmpb	$-51, %dl
	je	.L424
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L414
	cmpb	$-49, %dl
	.p2align 4,,2
	je	.L415
.L389:
	.p2align 4,,5
	call	mp_uint_load.part.6
	.p2align 4,,7
	.p2align 3
.L449:
	addl	$1, %eax
	movl	%eax, 76(%esp)
.L454:
	addl	$1, %esi
	cmpl	56(%esp), %esi
	jne	.L491
	movl	60(%esp), %ebx
	jmp	.L417
.L544:
	addl	$1, %eax
	movl	%eax, 76(%esp)
.L551:
	addl	$1, %esi
	cmpl	56(%esp), %esi
	jne	.L583
	movl	60(%esp), %ebx
	jmp	.L515
.L442:
	leal	1(%eax), %ecx
	testb	%dl, %dl
	movl	%ecx, 76(%esp)
	jns	.L623
	cmpb	$-52, %dl
	je	.L459
	cmpb	$-51, %dl
	je	.L461
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L451
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L389
.L452:
	addl	$9, %eax
	movl	%eax, 76(%esp)
	jmp	.L454
.L451:
	addl	$5, %eax
	movl	%eax, 76(%esp)
	jmp	.L454
.L450:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, 76(%esp)
	je	.L489
	cmpb	$-58, %dl
	jne	.L686
.L490:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L454
.L446:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, 76(%esp)
	je	.L686
	jbe	.L702
	cmpb	$-38, %dl
	je	.L489
	cmpb	$-37, %dl
	.p2align 4,,5
	je	.L490
	.p2align 4,,5
	jmp	.L603
.L445:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, 76(%esp)
	je	.L474
	ja	.L475
	leal	112(%edx), %eax
	cmpb	$15, %al
	ja	.L594
	movl	%edx, %edi
	andl	$15, %edi
.L478:
	xorl	%ebx, %ebx
	testl	%edi, %edi
	je	.L685
	.p2align 4,,7
	.p2align 3
.L648:
	leal	76(%esp), %eax
	addl	$1, %ebx
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L648
.L685:
	movl	76(%esp), %eax
	jmp	.L454
.L453:
	addl	$48, %edx
	leal	1(%eax), %ecx
	cmpb	$47, %dl
	movl	%ecx, 76(%esp)
	ja	.L554
	movzbl	%dl, %edx
	jmp	*.L460(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L460:
	.long	.L459
	.long	.L461
	.long	.L451
	.long	.L452
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.long	.L623
	.text
.L443:
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, 76(%esp)
	je	.L465
	ja	.L466
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L560
	movl	%edx, %edi
	andl	$15, %edi
.L469:
	xorl	%ebx, %ebx
	testl	%edi, %edi
	je	.L685
	.p2align 4,,7
	.p2align 3
.L647:
	leal	76(%esp), %eax
	addl	$1, %ebx
	movl	%eax, (%esp)
	call	mp_load
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L647
	jmp	.L685
.L422:
	leal	2(%ecx), %eax
	movl	%eax, 76(%esp)
	.p2align 4,,2
	jmp	.L417
.L424:
	leal	3(%ecx), %eax
	movl	%eax, 76(%esp)
	jmp	.L417
.L537:
	leal	1(%eax), %ecx
	testb	%dl, %dl
	movl	%ecx, 76(%esp)
	jns	.L551
	cmpb	$-52, %dl
	je	.L555
	cmpb	$-51, %dl
	je	.L557
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L546
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L389
.L547:
	addl	$9, %eax
	movl	%eax, 76(%esp)
	jmp	.L551
.L546:
	addl	$5, %eax
	movl	%eax, 76(%esp)
	jmp	.L551
.L545:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, 76(%esp)
	je	.L581
	cmpb	$-58, %dl
	jne	.L689
.L582:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L551
.L548:
	addl	$48, %edx
	leal	1(%eax), %ecx
	cmpb	$47, %dl
	movl	%ecx, 76(%esp)
	ja	.L554
	movzbl	%dl, %edx
	jmp	*.L556(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L556:
	.long	.L555
	.long	.L557
	.long	.L546
	.long	.L547
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L554
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.long	.L551
	.text
.L541:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, 76(%esp)
	je	.L689
	jbe	.L703
	cmpb	$-38, %dl
	je	.L581
	cmpb	$-37, %dl
	.p2align 4,,5
	je	.L582
	.p2align 4,,5
	jmp	.L603
	.p2align 4,,7
	.p2align 3
.L540:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, 76(%esp)
	je	.L568
	ja	.L569
	leal	112(%edx), %eax
	cmpb	$15, %al
	ja	.L594
	movl	%edx, %edi
	andl	$15, %edi
.L572:
	testl	%edi, %edi
	je	.L551
	xorl	%ebx, %ebx
.L573:
	leal	76(%esp), %eax
	addl	$1, %ebx
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L573
	jmp	.L551
.L538:
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, 76(%esp)
	je	.L561
	ja	.L562
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L560
	movl	%edx, %edi
	andl	$15, %edi
.L565:
	testl	%edi, %edi
	je	.L551
	xorl	%ebx, %ebx
.L566:
	leal	76(%esp), %eax
	addl	$1, %ebx
	movl	%eax, (%esp)
	call	mp_load
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L566
	jmp	.L551
.L519:
	addl	$2, %eax
	movl	%eax, 76(%esp)
	.p2align 4,,2
	jmp	.L515
.L521:
	addl	$3, %eax
	movl	%eax, 76(%esp)
	jmp	.L515
.L623:
	movl	%ecx, %eax
	jmp	.L454
.L461:
	addl	$3, %eax
	movl	%eax, 76(%esp)
	jmp	.L454
.L459:
	addl	$2, %eax
	movl	%eax, 76(%esp)
	jmp	.L454
.L557:
	addl	$3, %eax
	movl	%eax, 76(%esp)
	jmp	.L551
.L555:
	addl	$2, %eax
	movl	%eax, 76(%esp)
	jmp	.L551
	.p2align 4,,7
	.p2align 3
.L400:
	cmpb	$-33, %al
	jne	.L560
	movl	1(%ebx), %eax
	bswap	%eax
	movl	%eax, 44(%esp)
	leal	5(%ebx), %eax
	movl	%eax, 76(%esp)
	jmp	.L403
	.p2align 4,,7
	.p2align 3
.L596:
	cmpb	$-35, %al
	jne	.L594
	movl	1(%ebx), %eax
	bswap	%eax
	movl	%eax, %ecx
	leal	5(%ebx), %eax
	movl	%eax, 76(%esp)
	jmp	.L599
	.p2align 4,,7
	.p2align 3
.L694:
	movzbl	1(%ebx), %eax
	leal	2(%ebx,%eax), %eax
	movl	%eax, 76(%esp)
	movl	$9, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L560:
	movl	$_ZZ11mp_map_loadE12__FUNCTION__, 12(%esp)
	movl	$304, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L607:
	movzwl	1(%ebx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%ebx,%eax), %eax
	movl	%eax, 76(%esp)
	movl	$8, %eax
	jmp	.L397
	.p2align 4,,7
	.p2align 3
.L604:
	movzbl	1(%ebx), %eax
	leal	2(%ebx,%eax), %eax
	movl	%eax, 76(%esp)
	movl	$8, %eax
	jmp	.L397
.L697:
	leal	2(%ebx), %eax
	movl	%eax, 76(%esp)
	jmp	.L385
.L698:
	leal	3(%ebx), %eax
	movl	%eax, 76(%esp)
	jmp	.L385
.L499:
	movzwl	1(%ecx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%ecx,%eax), %eax
	movl	%eax, 76(%esp)
	jmp	.L417
.L699:
	leal	5(%ebx), %eax
	movl	%eax, 76(%esp)
	jmp	.L385
.L690:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L515
.L429:
	cmpb	$-33, %dl
	jne	.L560
	movl	1(%ecx), %edi
	addl	$5, %ecx
	movl	%ecx, 76(%esp)
	bswap	%edi
	jmp	.L432
.L438:
	cmpb	$-35, %dl
	jne	.L594
	movl	1(%ecx), %eax
	bswap	%eax
	movl	%eax, 56(%esp)
	leal	5(%ecx), %eax
	movl	%eax, 76(%esp)
	jmp	.L441
.L591:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L515
.L700:
	leal	96(%edx), %ecx
	cmpb	$31, %cl
	ja	.L603
	andl	$31, %edx
	addl	%edx, %eax
	movl	%eax, 76(%esp)
	jmp	.L417
.L526:
	cmpb	$-33, %dl
	jne	.L560
	movl	1(%eax), %esi
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%esi
	jmp	.L529
.L533:
	cmpb	$-35, %dl
	jne	.L594
	movl	1(%eax), %edi
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%edi
	movl	%edi, 56(%esp)
	jmp	.L536
.L437:
	movzwl	1(%ecx), %edx
	leal	3(%ecx), %eax
	movl	%eax, 76(%esp)
	rolw	$8, %dx
	movzwl	%dx, %ecx
	movl	%ecx, 56(%esp)
	jmp	.L441
.L428:
	movzwl	1(%ecx), %edi
	addl	$3, %ecx
	movl	%ecx, 76(%esp)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L432
.L701:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L603
	andl	$31, %edx
	addl	%edx, %ecx
	movl	%ecx, 76(%esp)
	jmp	.L515
.L532:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %dx
	movzwl	%dx, %eax
	movl	%eax, 56(%esp)
	jmp	.L536
.L525:
	movzwl	1(%eax), %edi
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %di
	movzwl	%di, %esi
	jmp	.L529
.L686:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L454
.L489:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L454
.L689:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L551
.L466:
	cmpb	$-33, %dl
	jne	.L560
	movl	1(%eax), %edi
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%edi
	jmp	.L469
.L475:
	cmpb	$-35, %dl
	jne	.L594
	movl	1(%eax), %edi
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%edi
	jmp	.L478
.L562:
	cmpb	$-33, %dl
	jne	.L560
	movl	1(%eax), %edi
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%edi
	jmp	.L565
.L569:
	cmpb	$-35, %dl
	jne	.L594
	movl	1(%eax), %edi
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%edi
	jmp	.L572
.L702:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L603
	movl	%edx, %eax
	andl	$31, %eax
	addl	%ecx, %eax
	movl	%eax, 76(%esp)
	jmp	.L454
.L581:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L551
.L465:
	movzwl	1(%eax), %edi
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L469
.L703:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L603
	andl	$31, %edx
	addl	%edx, %ecx
	movl	%ecx, 76(%esp)
	jmp	.L551
.L474:
	movzwl	1(%eax), %edi
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L478
.L568:
	movzwl	1(%eax), %edi
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L572
.L561:
	movzwl	1(%eax), %edi
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L565
.L692:
	movl	$218, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC23, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$218, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE78:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	%eax, %esi
	movl	12(%ebx), %eax
	movl	%edi, 16(%esp)
	movl	$32, 12(%esp)
	movl	$218, 8(%esp)
	movl	%eax, 20(%esp)
	movl	$.LC22, 4(%esp)
	movl	%esi, (%esp)
.LEHB79:
	call	_ZN11ClientErrorC1EPKcjjz
.LEHE79:
	movl	$_ZN11ClientErrorD1Ev, 8(%esp)
	movl	$_ZTI11ClientError, 4(%esp)
	movl	%esi, (%esp)
.LEHB80:
	call	__cxa_throw
.L625:
	movl	%eax, %esi
	movl	%ebx, (%esp)
	call	__cxa_free_exception
	movl	%esi, (%esp)
	call	_Unwind_Resume
.L624:
	movl	%eax, %ebx
	movl	%esi, (%esp)
	call	__cxa_free_exception
	movl	%ebx, (%esp)
	call	_Unwind_Resume
.LEHE80:
	.cfi_endproc
.LFE192:
	.section	.gcc_except_table
.LLSDA192:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE192-.LLSDACSB192
.LLSDACSB192:
	.uleb128 .LEHB76-.LFB192
	.uleb128 .LEHE76-.LEHB76
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB77-.LFB192
	.uleb128 .LEHE77-.LEHB77
	.uleb128 .L625-.LFB192
	.uleb128 0
	.uleb128 .LEHB78-.LFB192
	.uleb128 .LEHE78-.LEHB78
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB79-.LFB192
	.uleb128 .LEHE79-.LEHB79
	.uleb128 .L624-.LFB192
	.uleb128 0
	.uleb128 .LEHB80-.LFB192
	.uleb128 .LEHE80-.LEHB80
	.uleb128 0
	.uleb128 0
.LLSDACSE192:
	.text
	.size	_Z20tuple_init_field_mapP12tuple_formatP5tuplePj, .-_Z20tuple_init_field_mapP12tuple_formatP5tuplePj
	.section	.rodata.str1.1
.LC28:
	.string	"tuple"
.LC29:
	.string	"tuple_alloc(%zu) = %p"
	.text
	.p2align 4,,15
	.globl	_Z11tuple_allocP12tuple_formatj
	.type	_Z11tuple_allocP12tuple_formatj, @function
_Z11tuple_allocP12tuple_formatj:
.LFB193:
	.cfi_startproc
	pushl	%edi
	.cfi_def_cfa_offset 8
	.cfi_offset 7, -8
	pushl	%esi
	.cfi_def_cfa_offset 12
	.cfi_offset 6, -12
	pushl	%ebx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	subl	$32, %esp
	.cfi_def_cfa_offset 48
	movl	48(%esp), %esi
	movl	52(%esp), %edi
	movl	$.LC28, 4(%esp)
	movl	20(%esi), %eax
	leal	8(%edi,%eax), %eax
	movl	%eax, (%esp)
	call	_Z6sallocjPKc
	movl	20(%esi), %ebx
	movl	tuple_formats, %edx
	addl	%eax, %ebx
	xorl	%eax, %eax
	movw	%ax, (%ebx)
	movzwl	(%esi), %eax
	movl	%edi, 4(%ebx)
	movzwl	%ax, %ecx
	cmpl	(%edx,%ecx,4), %esi
	jne	.L709
	movw	%ax, 2(%ebx)
	movl	4(%esi), %eax
	addl	$1, %eax
	js	.L710
	movl	%eax, 4(%esi)
	jne	.L707
	movl	%esi, (%esp)
	call	_Z19tuple_format_deleteP12tuple_format
.L707:
	movl	%ebx, 24(%esp)
	movl	%edi, 20(%esp)
	movl	$.LC29, 16(%esp)
	movl	$0, 12(%esp)
	movl	$253, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
	addl	$32, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 12
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 8
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 4
	ret
.L710:
	.cfi_restore_state
	call	_ZL16tuple_format_refP12tuple_formati.part.11
.L709:
	call	_ZL15tuple_format_idP12tuple_format.part.2
	.cfi_endproc
.LFE193:
	.size	_Z11tuple_allocP12tuple_formatj, .-_Z11tuple_allocP12tuple_formatj
	.section	.rodata.str1.1
.LC30:
	.string	"tuple_delete(%p)"
.LC31:
	.string	"tuple->refs == 0"
	.text
	.p2align 4,,15
	.globl	_Z12tuple_deleteP5tuple
	.type	_Z12tuple_deleteP5tuple, @function
_Z12tuple_deleteP5tuple:
.LFB194:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	subl	$36, %esp
	.cfi_def_cfa_offset 48
	movl	48(%esp), %ebx
	movl	$.LC30, 16(%esp)
	movl	$0, 12(%esp)
	movl	$264, 8(%esp)
	movl	%ebx, 20(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
	cmpw	$0, (%ebx)
	jne	.L718
	movl	tuple_formats, %esi
	movzwl	2(%ebx), %ecx
	movl	(%esi,%ecx,4), %eax
	movzwl	(%eax), %edx
	cmpl	(%esi,%edx,4), %eax
	jne	.L719
	cmpl	%edx, %ecx
	jne	.L720
	movl	4(%eax), %edx
	subl	20(%eax), %ebx
	subl	$1, %edx
	js	.L721
	movl	%edx, 4(%eax)
	jne	.L716
	movl	%eax, (%esp)
	call	_Z19tuple_format_deleteP12tuple_format
.L716:
	movl	%ebx, 48(%esp)
	addl	$36, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 12
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	jmp	_Z5sfreePv
.L721:
	.cfi_restore_state
	call	_ZL16tuple_format_refP12tuple_formati.part.11
.L720:
	call	_ZL12tuple_formatPK5tuple.part.3
.L719:
	.p2align 4,,5
	call	_ZL15tuple_format_idP12tuple_format.part.2
.L718:
	movl	$_ZZ12tuple_deleteP5tupleE12__FUNCTION__, 12(%esp)
	movl	$265, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$.LC31, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE194:
	.size	_Z12tuple_deleteP5tuple, .-_Z12tuple_deleteP5tuple
	.section	.rodata.str1.1
.LC32:
	.string	"tuple->refs + count >= 0"
	.text
	.p2align 4,,15
	.globl	_Z9tuple_refP5tuplei
	.type	_Z9tuple_refP5tuplei, @function
_Z9tuple_refP5tuplei:
.LFB195:
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	subl	$24, %esp
	.cfi_def_cfa_offset 32
	movl	32(%esp), %eax
	movl	36(%esp), %edx
	movzwl	(%eax), %ecx
	movzwl	%cx, %ebx
	addl	%edx, %ebx
	js	.L726
	addl	%ecx, %edx
	testw	%dx, %dx
	movw	%dx, (%eax)
	je	.L727
	addl	$24, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L727:
	.cfi_restore_state
	movl	%eax, 32(%esp)
	addl	$24, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	jmp	_Z12tuple_deleteP5tuple
.L726:
	.cfi_restore_state
	movl	$_ZZ9tuple_refP5tupleiE12__FUNCTION__, 12(%esp)
	movl	$281, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$.LC32, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE195:
	.size	_Z9tuple_refP5tuplei, .-_Z9tuple_refP5tuplei
	.section	.rodata.str1.1
.LC33:
	.string	"it->pos <= tuple_end"
	.text
	.p2align 4,,15
	.globl	_Z10tuple_nextP14tuple_iterator
	.type	_Z10tuple_nextP14tuple_iterator, @function
_Z10tuple_nextP14tuple_iterator:
.LFB197:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$44, %esp
	.cfi_def_cfa_offset 64
	movl	64(%esp), %ebx
	movl	(%ebx), %edi
	movl	4(%ebx), %esi
	addl	4(%edi), %edi
	addl	$8, %edi
	cmpl	%esi, %edi
	jbe	.L827
	movzbl	(%esi), %eax
	leal	4(%ebx), %ebp
	movl	%eax, %edx
	addb	$-128, %dl
	js	.L730
	movzbl	%dl, %edx
	jmp	*.L732(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L732:
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L731
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L733
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L737
	.long	.L736
	.long	.L737
	.long	.L737
	.long	.L738
	.long	.L738
	.long	.L738
	.long	.L736
	.long	.L736
	.long	.L736
	.long	.L739
	.long	.L740
	.long	.L730
	.long	.L730
	.long	.L730
	.long	.L730
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L736
	.long	.L736
	.long	.L736
	.long	.L736
	.long	.L736
	.long	.L734
	.long	.L734
	.long	.L734
	.long	.L733
	.long	.L733
	.long	.L731
	.long	.L731
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.long	.L741
	.text
	.p2align 4,,7
	.p2align 3
.L827:
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	xorl	%esi, %esi
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	movl	%esi, %eax
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L737:
	.cfi_restore_state
	leal	1(%esi), %edx
	movl	%edx, 4(%ebx)
.L742:
	cmpl	%edx, %edi
	jb	.L849
	addl	$1, 8(%ebx)
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	movl	%esi, %eax
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L740:
	.cfi_restore_state
	leal	9(%esi), %edx
	movl	%edx, 4(%ebx)
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L739:
	leal	5(%esi), %edx
	movl	%edx, 4(%ebx)
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L736:
	movl	$_ZZ7mp_loadE12__FUNCTION__, 12(%esp)
	movl	$1036, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L741:
	addl	$48, %eax
	leal	1(%esi), %edx
	cmpb	$47, %al
	movl	%edx, 4(%ebx)
	ja	.L777
	movzbl	%al, %eax
	jmp	*.L749(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L749:
	.long	.L748
	.long	.L750
	.long	.L739
	.long	.L740
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.long	.L742
	.text
	.p2align 4,,7
	.p2align 3
.L731:
	leal	1(%esi), %edx
	cmpb	$-34, %al
	movl	%edx, 4(%ebx)
	je	.L754
	ja	.L755
	leal	-128(%eax), %edx
	cmpb	$15, %dl
	ja	.L783
	andl	$15, %eax
	movl	%eax, 20(%esp)
.L758:
	movl	20(%esp), %edx
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L847
	movl	%esi, 24(%esp)
	movl	%eax, %esi
	movl	%edi, 28(%esp)
.L832:
	movl	%ebp, (%esp)
	call	mp_load
	movl	4(%ebx), %edx
	movzbl	(%edx), %eax
	movl	%eax, %ecx
	addb	$-128, %cl
	js	.L760
	movzbl	%cl, %ecx
	jmp	*.L762(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L762:
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L761
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L763
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L767
	.long	.L736
	.long	.L767
	.long	.L767
	.long	.L768
	.long	.L768
	.long	.L768
	.long	.L736
	.long	.L736
	.long	.L736
	.long	.L769
	.long	.L770
	.long	.L760
	.long	.L760
	.long	.L760
	.long	.L760
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L736
	.long	.L736
	.long	.L736
	.long	.L736
	.long	.L736
	.long	.L764
	.long	.L764
	.long	.L764
	.long	.L763
	.long	.L763
	.long	.L761
	.long	.L761
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.long	.L771
	.text
	.p2align 4,,7
	.p2align 3
.L733:
	leal	1(%esi), %edx
	cmpb	$-36, %al
	movl	%edx, 4(%ebx)
	je	.L809
	ja	.L810
	leal	112(%eax), %edx
	andl	$15, %eax
	cmpb	$15, %dl
	movl	%eax, %ecx
	ja	.L808
.L813:
	xorl	%edx, %edx
	testl	%ecx, %ecx
	je	.L847
	movl	%esi, 20(%esp)
	movl	%ecx, %esi
	movl	%ebx, 64(%esp)
	movl	%edx, %ebx
	.p2align 4,,7
	.p2align 3
.L833:
	movl	%ebp, (%esp)
	addl	$1, %ebx
	call	mp_load
	cmpl	%esi, %ebx
	jne	.L833
	movl	64(%esp), %ebx
	movl	20(%esp), %esi
	movl	4(%ebx), %edx
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L734:
	leal	1(%esi), %edx
	cmpb	$-39, %al
	movl	%edx, 4(%ebx)
	je	.L848
	jbe	.L850
	cmpb	$-38, %al
	je	.L824
	cmpb	$-37, %al
	.p2align 4,,7
	je	.L825
.L817:
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$779, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L738:
	leal	1(%esi), %edx
	cmpb	$-59, %al
	movl	%edx, 4(%ebx)
	je	.L824
	cmpb	$-58, %al
	jne	.L848
.L825:
	movl	1(%esi), %eax
	bswap	%eax
	leal	5(%esi,%eax), %edx
	movl	%edx, 4(%ebx)
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L730:
	leal	1(%esi), %edx
	testb	%al, %al
	movl	%edx, 4(%ebx)
	jns	.L742
	cmpb	$-52, %al
	je	.L748
	cmpb	$-51, %al
	je	.L750
	cmpb	$-50, %al
	.p2align 4,,5
	je	.L739
	cmpb	$-49, %al
	.p2align 4,,5
	je	.L740
.L746:
	.p2align 4,,7
	call	mp_uint_load.part.6
	.p2align 4,,7
	.p2align 3
.L810:
	cmpb	$-35, %al
	jne	.L808
	movl	1(%esi), %eax
	bswap	%eax
	movl	%eax, %ecx
	leal	5(%esi), %eax
	movl	%eax, 4(%ebx)
	jmp	.L813
	.p2align 4,,7
	.p2align 3
.L767:
	addl	$1, %edx
	movl	%edx, 4(%ebx)
.L774:
	addl	$1, %esi
	cmpl	20(%esp), %esi
	jne	.L832
	movl	24(%esp), %esi
	movl	28(%esp), %edi
.L847:
	movl	4(%ebx), %edx
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L755:
	cmpb	$-33, %al
	jne	.L783
	movl	1(%esi), %eax
	bswap	%eax
	movl	%eax, 20(%esp)
	leal	5(%esi), %eax
	movl	%eax, 4(%ebx)
	jmp	.L758
	.p2align 4,,7
	.p2align 3
.L824:
	movzwl	1(%esi), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%esi,%eax), %edx
	movl	%edx, 4(%ebx)
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L850:
	leal	96(%eax), %ecx
	cmpb	$31, %cl
	ja	.L817
	andl	$31, %eax
	addl	%eax, %edx
	movl	%edx, 4(%ebx)
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L760:
	leal	1(%edx), %ecx
	testb	%al, %al
	movl	%ecx, 4(%ebx)
	jns	.L774
	cmpb	$-52, %al
	je	.L778
	cmpb	$-51, %al
	je	.L780
	cmpb	$-50, %al
	.p2align 4,,5
	je	.L769
	cmpb	$-49, %al
	.p2align 4,,5
	jne	.L746
	.p2align 4,,7
	.p2align 3
.L770:
	addl	$9, %edx
	movl	%edx, 4(%ebx)
	jmp	.L774
	.p2align 4,,7
	.p2align 3
.L769:
	addl	$5, %edx
	movl	%edx, 4(%ebx)
	jmp	.L774
	.p2align 4,,7
	.p2align 3
.L768:
	leal	1(%edx), %ecx
	cmpb	$-59, %al
	movl	%ecx, 4(%ebx)
	je	.L804
	cmpb	$-58, %al
	jne	.L846
.L805:
	movl	1(%edx), %eax
	bswap	%eax
	leal	5(%edx,%eax), %eax
	movl	%eax, 4(%ebx)
	jmp	.L774
	.p2align 4,,7
	.p2align 3
.L771:
	addl	$48, %eax
	leal	1(%edx), %ecx
	cmpb	$47, %al
	movl	%ecx, 4(%ebx)
	ja	.L777
	movzbl	%al, %eax
	jmp	*.L779(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L779:
	.long	.L778
	.long	.L780
	.long	.L769
	.long	.L770
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L777
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.long	.L774
	.text
	.p2align 4,,7
	.p2align 3
.L764:
	leal	1(%edx), %ecx
	cmpb	$-39, %al
	movl	%ecx, 4(%ebx)
	je	.L846
	jbe	.L851
	cmpb	$-38, %al
	je	.L804
	cmpb	$-37, %al
	.p2align 4,,7
	je	.L805
	.p2align 4,,7
	jmp	.L817
	.p2align 4,,7
	.p2align 3
.L763:
	leal	1(%edx), %ecx
	cmpb	$-36, %al
	movl	%ecx, 4(%ebx)
	je	.L791
	.p2align 4,,3
	ja	.L792
	leal	112(%eax), %edx
	cmpb	$15, %dl
	ja	.L808
	andl	$15, %eax
.L795:
	testl	%eax, %eax
	je	.L774
	xorl	%edi, %edi
	movl	%ebx, 64(%esp)
	movl	%edi, %ebx
	movl	%eax, %edi
	.p2align 4,,7
	.p2align 3
.L796:
	movl	%ebp, (%esp)
	addl	$1, %ebx
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L796
.L845:
	movl	64(%esp), %ebx
	jmp	.L774
	.p2align 4,,7
	.p2align 3
.L761:
	leal	1(%edx), %ecx
	cmpb	$-34, %al
	movl	%ecx, 4(%ebx)
	je	.L784
	ja	.L785
	leal	-128(%eax), %edx
	cmpb	$15, %dl
	ja	.L783
	andl	$15, %eax
.L788:
	testl	%eax, %eax
	je	.L774
	xorl	%edi, %edi
	movl	%ebx, 64(%esp)
	movl	%edi, %ebx
	movl	%eax, %edi
	.p2align 4,,7
	.p2align 3
.L789:
	movl	%ebp, (%esp)
	addl	$1, %ebx
	call	mp_load
	movl	%ebp, (%esp)
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L789
	.p2align 4,,3
	jmp	.L845
	.p2align 4,,7
	.p2align 3
.L748:
	leal	2(%esi), %edx
	movl	%edx, 4(%ebx)
	.p2align 4,,3
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L750:
	leal	3(%esi), %edx
	movl	%edx, 4(%ebx)
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L777:
	movl	$_ZZ11mp_int_loadE12__FUNCTION__, 12(%esp)
	movl	$572, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
.L778:
	addl	$2, %edx
	movl	%edx, 4(%ebx)
	jmp	.L774
.L780:
	addl	$3, %edx
	movl	%edx, 4(%ebx)
	jmp	.L774
	.p2align 4,,7
	.p2align 3
.L848:
	movzbl	1(%esi), %eax
	leal	2(%esi,%eax), %edx
	movl	%edx, 4(%ebx)
	jmp	.L742
	.p2align 4,,7
	.p2align 3
.L783:
	movl	$_ZZ11mp_map_loadE12__FUNCTION__, 12(%esp)
	movl	$304, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L808:
	movl	$_ZZ13mp_array_loadE12__FUNCTION__, 12(%esp)
	movl	$222, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L754:
	movzwl	1(%esi), %eax
	leal	3(%esi), %edx
	movl	%edx, 4(%ebx)
	rolw	$8, %ax
	movzwl	%ax, %eax
	movl	%eax, 20(%esp)
	jmp	.L758
	.p2align 4,,7
	.p2align 3
.L809:
	movzwl	1(%esi), %edx
	leal	3(%esi), %eax
	movl	%eax, 4(%ebx)
	rolw	$8, %dx
	movzwl	%dx, %eax
	movl	%eax, %ecx
	jmp	.L813
.L846:
	movzbl	1(%edx), %eax
	leal	2(%edx,%eax), %eax
	movl	%eax, 4(%ebx)
	jmp	.L774
.L804:
	movzwl	1(%edx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%edx,%eax), %eax
	movl	%eax, 4(%ebx)
	jmp	.L774
.L792:
	cmpb	$-35, %al
	jne	.L808
	movl	1(%edx), %eax
	addl	$5, %edx
	movl	%edx, 4(%ebx)
	bswap	%eax
	jmp	.L795
.L785:
	cmpb	$-33, %al
	jne	.L783
	movl	1(%edx), %eax
	addl	$5, %edx
	movl	%edx, 4(%ebx)
	bswap	%eax
	jmp	.L788
.L851:
	leal	96(%eax), %edx
	cmpb	$31, %dl
	ja	.L817
	andl	$31, %eax
	addl	%eax, %ecx
	movl	%ecx, 4(%ebx)
	jmp	.L774
.L791:
	movzwl	1(%edx), %edi
	addl	$3, %edx
	movl	%edx, 4(%ebx)
	rolw	$8, %di
	movzwl	%di, %eax
	jmp	.L795
.L784:
	movzwl	1(%edx), %edi
	addl	$3, %edx
	movl	%edx, 4(%ebx)
	rolw	$8, %di
	movzwl	%di, %eax
	jmp	.L788
.L849:
	movl	$_ZZ10tuple_nextP14tuple_iteratorE12__FUNCTION__, 12(%esp)
	movl	$310, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$.LC33, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE197:
	.size	_Z10tuple_nextP14tuple_iterator, .-_Z10tuple_nextP14tuple_iterator
	.p2align 4,,15
	.globl	_Z10tuple_seekP14tuple_iteratorj
	.type	_Z10tuple_seekP14tuple_iteratorj, @function
_Z10tuple_seekP14tuple_iteratorj:
.LFB196:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$76, %esp
	.cfi_def_cfa_offset 96
	movl	tuple_formats, %ebx
	movl	96(%esp), %eax
	movl	100(%esp), %esi
	movl	(%eax), %ebp
	movzwl	2(%ebp), %ecx
	movl	(%ebx,%ecx,4), %eax
	movzwl	(%eax), %edx
	cmpl	(%ebx,%edx,4), %eax
	jne	.L1290
	cmpl	%edx, %ecx
	jne	.L1291
	cmpl	8(%eax), %esi
	jae	.L855
	movl	24(%eax,%esi,4), %eax
	cmpl	$-2147483648, %eax
	je	.L855
	movl	0(%ebp,%eax,4), %edx
	addl	%ebp, %edx
	addl	$8, %edx
.L856:
	movl	96(%esp), %eax
	movl	%edx, 4(%eax)
	movl	%esi, 8(%eax)
	movl	%eax, (%esp)
	call	_Z10tuple_nextP14tuple_iterator
.L1203:
	addl	$76, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L855:
	.cfi_restore_state
	movzbl	8(%ebp), %eax
	leal	9(%ebp), %edx
	movl	%edx, 60(%esp)
	cmpb	$-36, %al
	je	.L858
	ja	.L859
	leal	112(%eax), %edx
	andl	$15, %eax
	cmpb	$15, %dl
	ja	.L1204
.L862:
	cmpl	%eax, %esi
	jae	.L1202
	xorl	%edi, %edi
	testl	%esi, %esi
	movl	60(%esp), %edx
	je	.L865
	movl	%ebp, 16(%esp)
	movl	%esi, %ebp
.L1242:
	movzbl	(%edx), %ebx
	movl	%ebx, %eax
	addb	$-128, %al
	js	.L866
	movzbl	%al, %eax
	jmp	*.L868(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L868:
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L867
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L869
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L873
	.long	.L872
	.long	.L873
	.long	.L873
	.long	.L874
	.long	.L874
	.long	.L874
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L875
	.long	.L876
	.long	.L866
	.long	.L866
	.long	.L866
	.long	.L866
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L870
	.long	.L870
	.long	.L870
	.long	.L869
	.long	.L869
	.long	.L867
	.long	.L867
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.long	.L877
	.text
	.p2align 4,,7
	.p2align 3
.L873:
	addl	$1, %edx
	movl	%edx, 60(%esp)
.L878:
	addl	$1, %edi
	cmpl	%ebp, %edi
	jne	.L1242
	movl	%ebp, %esi
	movl	16(%esp), %ebp
.L865:
	movl	4(%ebp), %eax
	addl	%ebp, %eax
	addl	$8, %eax
	cmpl	%eax, %edx
	ja	.L1292
	testl	%edx, %edx
	jne	.L856
	movl	96(%esp), %eax
	movl	(%eax), %ebp
.L1202:
	movl	4(%ebp), %eax
	movl	96(%esp), %edi
	addl	%ebp, %eax
	addl	$8, %eax
	movl	%eax, 4(%edi)
	movzbl	8(%ebp), %eax
	cmpb	$-36, %al
	je	.L1205
	ja	.L1206
	leal	112(%eax), %edx
	andl	$15, %eax
	cmpb	$15, %dl
	ja	.L1204
.L1209:
	movl	96(%esp), %edi
	movl	%eax, 8(%edi)
	xorl	%eax, %eax
	jmp	.L1203
	.p2align 4,,7
	.p2align 3
.L859:
	cmpb	$-35, %al
	jne	.L1204
	movl	9(%ebp), %eax
	leal	13(%ebp), %edx
	movl	%edx, 60(%esp)
	bswap	%eax
	jmp	.L862
	.p2align 4,,7
	.p2align 3
.L858:
	movzwl	9(%ebp), %eax
	leal	11(%ebp), %edx
	movl	%edx, 60(%esp)
	rolw	$8, %ax
	movzwl	%ax, %eax
	jmp	.L862
	.p2align 4,,7
	.p2align 3
.L876:
	addl	$9, %edx
	movl	%edx, 60(%esp)
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L872:
	movl	$_ZZ7mp_loadE12__FUNCTION__, 12(%esp)
	movl	$1036, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L875:
	addl	$5, %edx
	movl	%edx, 60(%esp)
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L874:
	leal	1(%edx), %eax
	cmpb	$-59, %bl
	movl	%eax, 60(%esp)
	je	.L1198
	cmpb	$-58, %bl
	jne	.L1289
.L1199:
	movl	1(%edx), %eax
	bswap	%eax
	leal	5(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L877:
	addl	$48, %ebx
	leal	1(%edx), %eax
	cmpb	$47, %bl
	movl	%eax, 60(%esp)
	ja	.L1138
	movzbl	%bl, %ebx
	jmp	*.L885(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L885:
	.long	.L884
	.long	.L886
	.long	.L875
	.long	.L876
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.long	.L1211
	.text
	.p2align 4,,7
	.p2align 3
.L870:
	leal	1(%edx), %eax
	cmpb	$-39, %bl
	movl	%eax, 60(%esp)
	je	.L1289
	jbe	.L1293
	cmpb	$-38, %bl
	je	.L1198
	cmpb	$-37, %bl
	.p2align 4,,5
	je	.L1199
.L1191:
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$779, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L869:
	leal	1(%edx), %eax
	cmpb	$-36, %bl
	movl	%eax, 60(%esp)
	je	.L1183
	ja	.L1184
	leal	112(%ebx), %eax
	cmpb	$15, %al
	ja	.L1204
	andl	$15, %ebx
.L1187:
	xorl	%esi, %esi
	testl	%ebx, %ebx
	je	.L1288
	.p2align 4,,7
	.p2align 3
.L1236:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %esi
	jne	.L1236
.L1288:
	movl	60(%esp), %edx
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L867:
	leal	1(%edx), %ecx
	cmpb	$-34, %bl
	movl	%ecx, 60(%esp)
	je	.L890
	ja	.L891
	leal	-128(%ebx), %eax
	cmpb	$15, %al
	ja	.L1144
	movl	%ebx, %eax
	andl	$15, %eax
	movl	%eax, 20(%esp)
.L894:
	movl	20(%esp), %eax
	testl	%eax, %eax
	je	.L1287
	xorl	%eax, %eax
	movl	%edi, 24(%esp)
	movl	%eax, %edi
	movl	%ebp, 100(%esp)
.L1181:
	movzbl	(%ecx), %ebx
	movl	%ebx, %eax
	addb	$-128, %al
	js	.L895
	movzbl	%al, %eax
	jmp	*.L897(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L897:
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L896
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L898
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L902
	.long	.L872
	.long	.L902
	.long	.L902
	.long	.L903
	.long	.L903
	.long	.L903
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L904
	.long	.L905
	.long	.L895
	.long	.L895
	.long	.L895
	.long	.L895
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L899
	.long	.L899
	.long	.L899
	.long	.L898
	.long	.L898
	.long	.L896
	.long	.L896
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.long	.L906
	.text
	.p2align 4,,7
	.p2align 3
.L1204:
	movl	$_ZZ13mp_array_loadE12__FUNCTION__, 12(%esp)
	movl	$222, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L866:
	leal	1(%edx), %eax
	testb	%bl, %bl
	movl	%eax, 60(%esp)
	js	.L1294
.L1211:
	movl	%eax, %edx
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L1289:
	movzbl	1(%edx), %eax
	leal	2(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L891:
	cmpb	$-33, %bl
	jne	.L1144
	movl	1(%edx), %eax
	leal	5(%edx), %ecx
	movl	%ecx, 60(%esp)
	bswap	%eax
	movl	%eax, 20(%esp)
	jmp	.L894
	.p2align 4,,7
	.p2align 3
.L1184:
	cmpb	$-35, %bl
	jne	.L1204
	movl	1(%edx), %ebx
	addl	$5, %edx
	movl	%edx, 60(%esp)
	bswap	%ebx
	jmp	.L1187
	.p2align 4,,7
	.p2align 3
.L1294:
	cmpb	$-52, %bl
	je	.L884
	cmpb	$-51, %bl
	je	.L886
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L875
	cmpb	$-49, %bl
	.p2align 4,,2
	je	.L876
.L882:
	.p2align 4,,5
	call	mp_uint_load.part.6
	.p2align 4,,7
	.p2align 3
.L902:
	leal	1(%ecx), %eax
	movl	%eax, 60(%esp)
.L907:
	movzbl	(%eax), %ebx
	movl	%ebx, %edx
	addb	$-128, %dl
	js	.L1085
	movzbl	%dl, %edx
	jmp	*.L1087(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L1087:
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1086
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1088
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1092
	.long	.L872
	.long	.L1092
	.long	.L1092
	.long	.L1093
	.long	.L1093
	.long	.L1093
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L1094
	.long	.L1095
	.long	.L1085
	.long	.L1085
	.long	.L1085
	.long	.L1085
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L1089
	.long	.L1089
	.long	.L1089
	.long	.L1088
	.long	.L1088
	.long	.L1086
	.long	.L1086
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.long	.L1096
	.text
	.p2align 4,,7
	.p2align 3
.L1198:
	movzwl	1(%edx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L1092:
	leal	1(%eax), %ecx
	movl	%ecx, 60(%esp)
.L1097:
	addl	$1, %edi
	cmpl	20(%esp), %edi
	jne	.L1181
	movl	24(%esp), %edi
	movl	100(%esp), %ebp
.L1287:
	movl	%ecx, %edx
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L884:
	addl	$2, %edx
	movl	%edx, 60(%esp)
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L886:
	addl	$3, %edx
	movl	%edx, 60(%esp)
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L895:
	leal	1(%ecx), %eax
	testb	%bl, %bl
	movl	%eax, 60(%esp)
	jns	.L907
	cmpb	$-52, %bl
	je	.L912
	cmpb	$-51, %bl
	je	.L914
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L904
	cmpb	$-49, %bl
	.p2align 4,,2
	jne	.L882
	.p2align 4,,7
	.p2align 3
.L905:
	leal	9(%ecx), %eax
	movl	%eax, 60(%esp)
	jmp	.L907
	.p2align 4,,7
	.p2align 3
.L904:
	leal	5(%ecx), %eax
	movl	%eax, 60(%esp)
	jmp	.L907
	.p2align 4,,7
	.p2align 3
.L903:
	leal	1(%ecx), %eax
	cmpb	$-59, %bl
	movl	%eax, 60(%esp)
	je	.L1083
	cmpb	$-58, %bl
	jne	.L1281
.L1084:
	movl	1(%ecx), %eax
	bswap	%eax
	leal	5(%ecx,%eax), %eax
	movl	%eax, 60(%esp)
	jmp	.L907
	.p2align 4,,7
	.p2align 3
.L906:
	addl	$48, %ebx
	leal	1(%ecx), %eax
	cmpb	$47, %bl
	movl	%eax, 60(%esp)
	ja	.L1138
	movzbl	%bl, %ebx
	jmp	*.L913(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L913:
	.long	.L912
	.long	.L914
	.long	.L904
	.long	.L905
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.long	.L907
	.text
	.p2align 4,,7
	.p2align 3
.L896:
	leal	1(%ecx), %eax
	cmpb	$-34, %bl
	movl	%eax, 60(%esp)
	je	.L918
	ja	.L919
	leal	-128(%ebx), %eax
	cmpb	$15, %al
	ja	.L1144
	andl	$15, %ebx
.L922:
	xorl	%esi, %esi
	testl	%ebx, %ebx
	je	.L1280
	.p2align 4,,7
	.p2align 3
.L1230:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %esi
	jne	.L1230
.L1280:
	movl	60(%esp), %eax
	jmp	.L907
	.p2align 4,,7
	.p2align 3
.L899:
	leal	1(%ecx), %eax
	cmpb	$-39, %bl
	movl	%eax, 60(%esp)
	je	.L1281
	jbe	.L1295
	cmpb	$-38, %bl
	je	.L1083
	cmpb	$-37, %bl
	.p2align 4,,5
	je	.L1084
	.p2align 4,,5
	jmp	.L1191
	.p2align 4,,7
	.p2align 3
.L898:
	leal	1(%ecx), %eax
	cmpb	$-36, %bl
	movl	%eax, 60(%esp)
	je	.L927
	ja	.L928
	leal	112(%ebx), %edx
	cmpb	$15, %dl
	ja	.L1204
	movl	%ebx, %ecx
	andl	$15, %ecx
	movl	%ecx, 28(%esp)
.L931:
	movl	28(%esp), %esi
	testl	%esi, %esi
	je	.L907
	xorl	%ebp, %ebp
	movl	%edi, 32(%esp)
.L1075:
	movzbl	(%eax), %ebx
	movl	%ebx, %edx
	addb	$-128, %dl
	js	.L932
	movzbl	%dl, %edx
	jmp	*.L934(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L934:
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L933
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L935
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L939
	.long	.L872
	.long	.L939
	.long	.L939
	.long	.L940
	.long	.L940
	.long	.L940
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L941
	.long	.L942
	.long	.L932
	.long	.L932
	.long	.L932
	.long	.L932
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L936
	.long	.L936
	.long	.L936
	.long	.L935
	.long	.L935
	.long	.L933
	.long	.L933
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.long	.L943
	.text
.L1085:
	leal	1(%eax), %ecx
	testb	%bl, %bl
	movl	%ecx, 60(%esp)
	jns	.L1097
	cmpb	$-52, %bl
	je	.L1102
	cmpb	$-51, %bl
	je	.L1104
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L1094
	cmpb	$-49, %bl
	.p2align 4,,2
	jne	.L882
	.p2align 4,,7
	.p2align 3
.L1095:
	leal	9(%eax), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1097
.L1094:
	leal	5(%eax), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1097
.L1093:
	leal	1(%eax), %edx
	cmpb	$-59, %bl
	movl	%edx, 60(%esp)
	je	.L1179
	cmpb	$-58, %bl
	jne	.L1286
.L1180:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1097
.L1089:
	leal	1(%eax), %edx
	cmpb	$-39, %bl
	movl	%edx, 60(%esp)
	je	.L1286
	jbe	.L1296
	cmpb	$-38, %bl
	je	.L1179
	cmpb	$-37, %bl
	.p2align 4,,5
	je	.L1180
	.p2align 4,,5
	jmp	.L1191
	.p2align 4,,7
	.p2align 3
.L1088:
	leal	1(%eax), %ecx
	cmpb	$-36, %bl
	movl	%ecx, 60(%esp)
	je	.L1117
	ja	.L1118
	leal	112(%ebx), %eax
	cmpb	$15, %al
	ja	.L1204
	movl	%ebx, %eax
	andl	$15, %eax
	movl	%eax, 28(%esp)
.L1121:
	movl	28(%esp), %ebx
	testl	%ebx, %ebx
	je	.L1097
	xorl	%ebx, %ebx
.L1171:
	movzbl	(%ecx), %eax
	movl	%eax, %edx
	addb	$-128, %dl
	js	.L1122
	movzbl	%dl, %edx
	jmp	*.L1124(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L1124:
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1123
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1125
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1129
	.long	.L872
	.long	.L1129
	.long	.L1129
	.long	.L1130
	.long	.L1130
	.long	.L1130
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L1131
	.long	.L1132
	.long	.L1122
	.long	.L1122
	.long	.L1122
	.long	.L1122
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L1126
	.long	.L1126
	.long	.L1126
	.long	.L1125
	.long	.L1125
	.long	.L1123
	.long	.L1123
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.long	.L1133
	.text
.L1096:
	addl	$48, %ebx
	leal	1(%eax), %ecx
	cmpb	$47, %bl
	movl	%ecx, 60(%esp)
	ja	.L1138
	movzbl	%bl, %ebx
	jmp	*.L1103(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L1103:
	.long	.L1102
	.long	.L1104
	.long	.L1094
	.long	.L1095
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.long	.L1097
	.text
.L1086:
	leal	1(%eax), %edx
	cmpb	$-34, %bl
	movl	%edx, 60(%esp)
	je	.L1108
	ja	.L1109
	leal	-128(%ebx), %eax
	cmpb	$15, %al
	ja	.L1144
	andl	$15, %ebx
.L1112:
	xorl	%esi, %esi
	testl	%ebx, %ebx
	je	.L1285
	.p2align 4,,7
	.p2align 3
.L1233:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %esi
	jne	.L1233
.L1285:
	movl	60(%esp), %ecx
	jmp	.L1097
.L1017:
	leal	1(%eax), %ecx
	cmpb	$-46, %dl
	movl	%ecx, 60(%esp)
	je	.L1015
	jbe	.L1297
	cmpb	$-45, %dl
	je	.L1016
	cmpb	$-32, %dl
	.p2align 4,,5
	jae	.L1020
	.p2align 4,,7
	.p2align 3
.L1138:
	movl	$_ZZ11mp_int_loadE12__FUNCTION__, 12(%esp)
	movl	$572, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
.L939:
	addl	$1, %eax
	movl	%eax, 60(%esp)
.L944:
	addl	$1, %ebp
	cmpl	28(%esp), %ebp
	jne	.L1075
	movl	32(%esp), %edi
	jmp	.L907
.L1129:
	addl	$1, %ecx
	movl	%ecx, 60(%esp)
.L1134:
	addl	$1, %ebx
	cmpl	28(%esp), %ebx
	jne	.L1171
	jmp	.L1097
.L932:
	leal	1(%eax), %edx
	testb	%bl, %bl
	movl	%edx, 60(%esp)
	jns	.L1214
	cmpb	$-52, %bl
	je	.L949
	cmpb	$-51, %bl
	je	.L951
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L941
	cmpb	$-49, %bl
	.p2align 4,,2
	jne	.L882
.L942:
	addl	$9, %eax
	movl	%eax, 60(%esp)
	jmp	.L944
.L941:
	addl	$5, %eax
	movl	%eax, 60(%esp)
	jmp	.L944
.L940:
	leal	1(%eax), %edx
	cmpb	$-59, %bl
	movl	%edx, 60(%esp)
	je	.L1073
	cmpb	$-58, %bl
	jne	.L1279
.L1074:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L944
.L943:
	addl	$48, %ebx
	leal	1(%eax), %edx
	cmpb	$47, %bl
	movl	%edx, 60(%esp)
	ja	.L1138
	movzbl	%bl, %ebx
	jmp	*.L950(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L950:
	.long	.L949
	.long	.L951
	.long	.L941
	.long	.L942
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.long	.L1214
	.text
.L933:
	leal	1(%eax), %edx
	cmpb	$-34, %bl
	movl	%edx, 60(%esp)
	je	.L955
	ja	.L956
	leal	-128(%ebx), %eax
	cmpb	$15, %al
	ja	.L1144
	andl	$15, %ebx
.L959:
	xorl	%esi, %esi
	testl	%ebx, %ebx
	je	.L1278
	.p2align 4,,7
	.p2align 3
.L1231:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %esi
	jne	.L1231
.L1278:
	movl	60(%esp), %eax
	jmp	.L944
.L936:
	leal	1(%eax), %edx
	cmpb	$-39, %bl
	movl	%edx, 60(%esp)
	je	.L1279
	jbe	.L1298
	cmpb	$-38, %bl
	je	.L1073
	cmpb	$-37, %bl
	.p2align 4,,5
	je	.L1074
	.p2align 4,,5
	jmp	.L1191
.L935:
	leal	1(%eax), %edx
	cmpb	$-36, %bl
	movl	%edx, 60(%esp)
	je	.L964
	ja	.L965
	leal	112(%ebx), %eax
	cmpb	$15, %al
	ja	.L1204
	movl	%ebx, %edi
	andl	$15, %edi
.L968:
	xorl	%eax, %eax
	testl	%edi, %edi
	je	.L1278
	movl	%ebp, 36(%esp)
	movl	%eax, %ebp
.L1232:
	movl	60(%esp), %eax
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L970
	movzbl	%cl, %ecx
	jmp	*.L972(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L972:
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L971
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L973
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L977
	.long	.L872
	.long	.L977
	.long	.L977
	.long	.L978
	.long	.L978
	.long	.L978
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L979
	.long	.L980
	.long	.L970
	.long	.L970
	.long	.L970
	.long	.L970
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L974
	.long	.L974
	.long	.L974
	.long	.L973
	.long	.L973
	.long	.L971
	.long	.L971
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.long	.L981
	.text
.L912:
	leal	2(%ecx), %eax
	movl	%eax, 60(%esp)
	jmp	.L907
.L914:
	leal	3(%ecx), %eax
	movl	%eax, 60(%esp)
	jmp	.L907
.L1122:
	leal	1(%ecx), %edx
	testb	%al, %al
	movl	%edx, 60(%esp)
	jns	.L1216
	cmpb	$-52, %al
	je	.L1139
	cmpb	$-51, %al
	je	.L1141
	cmpb	$-50, %al
	.p2align 4,,5
	je	.L1131
	cmpb	$-49, %al
	.p2align 4,,5
	jne	.L882
.L1132:
	addl	$9, %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1134
.L1131:
	addl	$5, %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1134
.L1130:
	leal	1(%ecx), %edx
	cmpb	$-59, %al
	movl	%edx, 60(%esp)
	je	.L1169
	cmpb	$-58, %al
	jne	.L1284
.L1170:
	movl	1(%ecx), %eax
	bswap	%eax
	leal	5(%ecx,%eax), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1134
.L1126:
	leal	1(%ecx), %edx
	cmpb	$-39, %al
	movl	%edx, 60(%esp)
	je	.L1284
	jbe	.L1299
	cmpb	$-38, %al
	je	.L1169
	cmpb	$-37, %al
	.p2align 4,,7
	je	.L1170
	.p2align 4,,7
	jmp	.L1191
.L1125:
	leal	1(%ecx), %edx
	cmpb	$-36, %al
	movl	%edx, 60(%esp)
	je	.L1154
	.p2align 4,,2
	ja	.L1155
	leal	112(%eax), %edx
	cmpb	$15, %dl
	ja	.L1204
	movl	%eax, %esi
	andl	$15, %esi
.L1158:
	xorl	%ebp, %ebp
	testl	%esi, %esi
	je	.L1283
	.p2align 4,,7
	.p2align 3
.L1235:
	leal	60(%esp), %eax
	addl	$1, %ebp
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%esi, %ebp
	jne	.L1235
.L1283:
	movl	60(%esp), %ecx
	jmp	.L1134
.L1133:
	addl	$48, %eax
	leal	1(%ecx), %edx
	cmpb	$47, %al
	movl	%edx, 60(%esp)
	ja	.L1138
	movzbl	%al, %eax
	jmp	*.L1140(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L1140:
	.long	.L1139
	.long	.L1141
	.long	.L1131
	.long	.L1132
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1138
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.long	.L1216
	.text
.L1123:
	leal	1(%ecx), %edx
	cmpb	$-34, %al
	movl	%edx, 60(%esp)
	je	.L1145
	ja	.L1146
	leal	-128(%eax), %edx
	cmpb	$15, %dl
	ja	.L1144
	movl	%eax, %esi
	andl	$15, %esi
.L1149:
	xorl	%ebp, %ebp
	testl	%esi, %esi
	je	.L1283
	.p2align 4,,7
	.p2align 3
.L1234:
	leal	60(%esp), %eax
	addl	$1, %ebp
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%esi, %ebp
	jne	.L1234
	jmp	.L1283
.L1102:
	leal	2(%eax), %ecx
	movl	%ecx, 60(%esp)
	.p2align 4,,2
	jmp	.L1097
.L1104:
	leal	3(%eax), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1097
.L1214:
	movl	%edx, %eax
	jmp	.L944
.L1216:
	movl	%edx, %ecx
	jmp	.L1134
.L977:
	addl	$1, %eax
	movl	%eax, 60(%esp)
.L984:
	addl	$1, %ebp
	cmpl	%edi, %ebp
	jne	.L1232
	movl	36(%esp), %ebp
	jmp	.L1278
.L970:
	leal	1(%eax), %ecx
	testb	%dl, %dl
	movl	%ecx, 60(%esp)
	jns	.L984
	cmpb	$-52, %dl
	je	.L990
	cmpb	$-51, %dl
	je	.L991
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L979
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L882
.L980:
	addl	$9, %eax
	movl	%eax, 60(%esp)
	jmp	.L984
.L979:
	addl	$5, %eax
	movl	%eax, 60(%esp)
	jmp	.L984
.L951:
	addl	$3, %eax
	movl	%eax, 60(%esp)
	jmp	.L944
.L949:
	addl	$2, %eax
	movl	%eax, 60(%esp)
	jmp	.L944
.L1141:
	addl	$3, %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1134
.L1139:
	addl	$2, %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1134
.L978:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, 60(%esp)
	je	.L1062
	cmpb	$-58, %dl
	je	.L1063
.L1276:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L984
.L974:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, 60(%esp)
	je	.L1276
	jbe	.L1300
	cmpb	$-38, %dl
	je	.L1062
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L1191
.L1063:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L984
.L973:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, 60(%esp)
	je	.L1001
	ja	.L1002
	leal	112(%edx), %eax
	cmpb	$15, %al
	ja	.L1204
	movl	%edx, %esi
	andl	$15, %esi
.L1005:
	testl	%esi, %esi
	je	.L984
	xorl	%ebx, %ebx
.L1054:
	movl	60(%esp), %eax
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L1006
	movzbl	%cl, %ecx
	jmp	*.L1008(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L1008:
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1007
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1009
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1013
	.long	.L872
	.long	.L1013
	.long	.L1013
	.long	.L1014
	.long	.L1014
	.long	.L1014
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L1015
	.long	.L1016
	.long	.L1006
	.long	.L1006
	.long	.L1006
	.long	.L1006
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L872
	.long	.L1010
	.long	.L1010
	.long	.L1010
	.long	.L1009
	.long	.L1009
	.long	.L1007
	.long	.L1007
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.long	.L1017
	.text
.L981:
	leal	1(%eax), %ecx
	cmpb	$-46, %dl
	movl	%ecx, 60(%esp)
	je	.L979
	ja	.L989
	cmpb	$-48, %dl
	je	.L990
	cmpb	$-47, %dl
	.p2align 4,,5
	jne	.L1138
.L991:
	addl	$3, %eax
	movl	%eax, 60(%esp)
	jmp	.L984
.L971:
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, 60(%esp)
	je	.L994
	ja	.L995
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L1144
	movl	%edx, %ebx
	andl	$15, %ebx
.L998:
	testl	%ebx, %ebx
	je	.L984
	xorl	%esi, %esi
.L999:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %esi
	jne	.L999
	jmp	.L984
.L1013:
	addl	$1, %eax
	movl	%eax, 60(%esp)
.L1020:
	addl	$1, %ebx
	cmpl	%esi, %ebx
	jne	.L1054
	jmp	.L984
.L1010:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, 60(%esp)
	je	.L1275
	jbe	.L1301
	cmpb	$-38, %dl
	je	.L1052
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L1191
.L1053:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1020
.L1006:
	leal	1(%eax), %ecx
	testb	%dl, %dl
	movl	%ecx, 60(%esp)
	jns	.L1020
	cmpb	$-52, %dl
	je	.L1026
	cmpb	$-51, %dl
	je	.L1027
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L1015
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L882
.L1016:
	addl	$9, %eax
	movl	%eax, 60(%esp)
	jmp	.L1020
.L1015:
	addl	$5, %eax
	movl	%eax, 60(%esp)
	jmp	.L1020
.L1014:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, 60(%esp)
	je	.L1052
	cmpb	$-58, %dl
	je	.L1053
.L1275:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1020
.L1007:
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, 60(%esp)
	je	.L1030
	ja	.L1031
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L1144
	andl	$15, %edx
.L1034:
	xorl	%ecx, %ecx
	jmp	.L1035
.L1036:
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	movl	%edx, 44(%esp)
	movl	%ecx, 40(%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	movl	40(%esp), %ecx
	movl	44(%esp), %edx
	addl	$1, %ecx
.L1035:
	cmpl	%edx, %ecx
	jne	.L1036
	jmp	.L1020
.L1009:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, 60(%esp)
	je	.L1038
	ja	.L1039
	leal	112(%edx), %eax
	cmpb	$15, %al
	ja	.L1204
	andl	$15, %edx
.L1042:
	xorl	%ecx, %ecx
	jmp	.L1043
.L1044:
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	movl	%edx, 44(%esp)
	movl	%ecx, 40(%esp)
	call	mp_load
	movl	40(%esp), %ecx
	movl	44(%esp), %edx
	addl	$1, %ecx
.L1043:
	cmpl	%edx, %ecx
	jne	.L1044
	jmp	.L1020
	.p2align 4,,7
	.p2align 3
.L1144:
	movl	$_ZZ11mp_map_loadE12__FUNCTION__, 12(%esp)
	movl	$304, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1293:
	leal	96(%ebx), %edx
	cmpb	$31, %dl
	ja	.L1191
	andl	$31, %ebx
	leal	(%eax,%ebx), %edx
	movl	%edx, 60(%esp)
	jmp	.L878
	.p2align 4,,7
	.p2align 3
.L890:
	movzwl	1(%edx), %eax
	leal	3(%edx), %ecx
	movl	%ecx, 60(%esp)
	rolw	$8, %ax
	movzwl	%ax, %eax
	movl	%eax, 20(%esp)
	jmp	.L894
	.p2align 4,,7
	.p2align 3
.L1183:
	movzwl	1(%edx), %ebx
	addl	$3, %edx
	movl	%edx, 60(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L1187
.L1281:
	movzbl	1(%ecx), %eax
	leal	2(%ecx,%eax), %eax
	movl	%eax, 60(%esp)
	jmp	.L907
.L1083:
	movzwl	1(%ecx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%ecx,%eax), %eax
	movl	%eax, 60(%esp)
	jmp	.L907
.L1286:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1097
.L919:
	cmpb	$-33, %bl
	jne	.L1144
	movl	1(%ecx), %ebx
	addl	$5, %ecx
	movl	%ecx, 60(%esp)
	bswap	%ebx
	jmp	.L922
.L928:
	cmpb	$-35, %bl
	jne	.L1204
	movl	1(%ecx), %eax
	bswap	%eax
	movl	%eax, 28(%esp)
	leal	5(%ecx), %eax
	movl	%eax, 60(%esp)
	jmp	.L931
.L1179:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1097
.L1295:
	leal	96(%ebx), %edx
	cmpb	$31, %dl
	ja	.L1191
	andl	$31, %ebx
	addl	%ebx, %eax
	movl	%eax, 60(%esp)
	jmp	.L907
.L1118:
	cmpb	$-35, %bl
	jne	.L1204
	movl	1(%eax), %ecx
	bswap	%ecx
	movl	%ecx, 28(%esp)
	leal	5(%eax), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1121
.L1109:
	cmpb	$-33, %bl
	jne	.L1144
	movl	1(%eax), %ebx
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%ebx
	jmp	.L1112
.L927:
	movzwl	1(%ecx), %edx
	leal	3(%ecx), %eax
	movl	%eax, 60(%esp)
	rolw	$8, %dx
	movzwl	%dx, %ecx
	movl	%ecx, 28(%esp)
	jmp	.L931
.L918:
	movzwl	1(%ecx), %ebx
	addl	$3, %ecx
	movl	%ecx, 60(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L922
.L1296:
	leal	96(%ebx), %eax
	cmpb	$31, %al
	ja	.L1191
	movl	%ebx, %ecx
	andl	$31, %ecx
	addl	%edx, %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1097
.L1108:
	movzwl	1(%eax), %ebx
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L1112
.L1117:
	movzwl	1(%eax), %edx
	leal	3(%eax), %ecx
	movl	%ecx, 60(%esp)
	rolw	$8, %dx
	movzwl	%dx, %eax
	movl	%eax, 28(%esp)
	jmp	.L1121
.L1279:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L944
.L1073:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L944
.L1284:
	movzbl	1(%ecx), %eax
	leal	2(%ecx,%eax), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1134
.L1169:
	movzwl	1(%ecx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%ecx,%eax), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1134
.L956:
	cmpb	$-33, %bl
	jne	.L1144
	movl	1(%eax), %ebx
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%ebx
	jmp	.L959
.L965:
	cmpb	$-35, %bl
	jne	.L1204
	movl	1(%eax), %edi
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%edi
	jmp	.L968
.L1155:
	cmpb	$-35, %al
	jne	.L1204
	movl	1(%ecx), %esi
	addl	$5, %ecx
	movl	%ecx, 60(%esp)
	bswap	%esi
	jmp	.L1158
.L1146:
	cmpb	$-33, %al
	jne	.L1144
	movl	1(%ecx), %esi
	addl	$5, %ecx
	movl	%ecx, 60(%esp)
	bswap	%esi
	jmp	.L1149
.L955:
	movzwl	1(%eax), %ebx
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L959
.L964:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %dx
	movzwl	%dx, %edi
	jmp	.L968
.L1298:
	leal	96(%ebx), %eax
	cmpb	$31, %al
	ja	.L1191
	movl	%ebx, %eax
	andl	$31, %eax
	addl	%edx, %eax
	movl	%eax, 60(%esp)
	jmp	.L944
.L1299:
	leal	96(%eax), %ecx
	cmpb	$31, %cl
	ja	.L1191
	andl	$31, %eax
	leal	(%edx,%eax), %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1134
.L1154:
	movzwl	1(%ecx), %esi
	addl	$3, %ecx
	movl	%ecx, 60(%esp)
	rolw	$8, %si
	movzwl	%si, %esi
	jmp	.L1158
.L1145:
	movzwl	1(%ecx), %esi
	addl	$3, %ecx
	movl	%ecx, 60(%esp)
	rolw	$8, %si
	movzwl	%si, %esi
	jmp	.L1149
.L1291:
	call	_ZL12tuple_formatPK5tuple.part.3
.L1290:
	call	_ZL15tuple_format_idP12tuple_format.part.2
.L1062:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L984
.L1039:
	cmpb	$-35, %dl
	jne	.L1204
	movl	1(%eax), %edx
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%edx
	jmp	.L1042
.L1300:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L1191
	andl	$31, %edx
	addl	%edx, %ecx
	movl	%ecx, 60(%esp)
	jmp	.L984
.L990:
	addl	$2, %eax
	movl	%eax, 60(%esp)
	jmp	.L984
.L989:
	cmpb	$-45, %dl
	je	.L980
	cmpb	$-32, %dl
	jae	.L984
	.p2align 4,,5
	jmp	.L1138
.L995:
	cmpb	$-33, %dl
	.p2align 4,,5
	jne	.L1144
	movl	1(%eax), %ebx
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%ebx
	jmp	.L998
.L994:
	movzwl	1(%eax), %ebx
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L998
.L1206:
	cmpb	$-35, %al
	jne	.L1204
	movl	9(%ebp), %eax
	bswap	%eax
	jmp	.L1209
.L1002:
	cmpb	$-35, %dl
	jne	.L1204
	movl	1(%eax), %esi
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%esi
	jmp	.L1005
.L1001:
	movzwl	1(%eax), %esi
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %si
	movzwl	%si, %esi
	jmp	.L1005
.L1297:
	cmpb	$-48, %dl
	je	.L1026
	cmpb	$-47, %dl
	jne	.L1138
.L1027:
	addl	$3, %eax
	movl	%eax, 60(%esp)
	jmp	.L1020
.L1031:
	cmpb	$-33, %dl
	jne	.L1144
	movl	1(%eax), %edx
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%edx
	jmp	.L1034
.L1030:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %dx
	movzwl	%dx, %edx
	jmp	.L1034
.L1026:
	addl	$2, %eax
	movl	%eax, 60(%esp)
	jmp	.L1020
.L1301:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L1191
	andl	$31, %edx
	addl	%edx, %ecx
	movl	%ecx, 60(%esp)
	jmp	.L1020
.L1052:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1020
.L1205:
	movzwl	9(%ebp), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	jmp	.L1209
.L1292:
	call	_ZL15tuple_field_oldPK12tuple_formatPK5tuplej.part.10
.L1038:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %dx
	movzwl	%dx, %edx
	jmp	.L1042
	.cfi_endproc
.LFE196:
	.size	_Z10tuple_seekP14tuple_iteratorj, .-_Z10tuple_seekP14tuple_iteratorj
	.p2align 4,,15
	.globl	_Z15tuple_next_cstrP14tuple_iterator
	.type	_Z15tuple_next_cstrP14tuple_iterator, @function
_Z15tuple_next_cstrP14tuple_iterator:
.LFB199:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA199
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	subl	$36, %esp
	.cfi_def_cfa_offset 48
	movl	48(%esp), %eax
	movl	8(%eax), %ebx
	movl	%eax, (%esp)
.LEHB81:
	call	_Z10tuple_nextP14tuple_iterator
	testl	%eax, %eax
	je	.L1327
	movzbl	(%eax), %edx
	cmpb	$-40, %dl
	ja	.L1305
	cmpb	$-64, %dl
	jae	.L1306
	cmpb	$-97, %dl
	ja	.L1307
.L1306:
	movl	$339, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC23, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$339, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE81:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	%ebx, 16(%esp)
	movl	$40, 12(%esp)
	movl	$339, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, %esi
	movl	field_type_strs+12, %eax
	movl	%esi, (%esp)
	movl	%eax, 20(%esp)
.LEHB82:
	call	_ZN11ClientErrorC1EPKcjjz
.LEHE82:
.L1323:
	movl	$_ZN11ClientErrorD1Ev, 8(%esp)
	movl	$_ZTI11ClientError, 4(%esp)
	movl	%esi, (%esp)
.LEHB83:
	call	__cxa_throw
	.p2align 4,,7
	.p2align 3
.L1305:
	cmpb	$-34, %dl
	ja	.L1308
	cmpb	$-36, %dl
	jae	.L1306
.L1307:
	cmpb	$-39, %dl
	leal	1(%eax), %ecx
	je	.L1311
	.p2align 4,,2
	jbe	.L1328
	cmpb	$-38, %dl
	.p2align 4,,2
	je	.L1313
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L1315
	movl	1(%eax), %ebx
	addl	$5, %eax
	bswap	%ebx
	jmp	.L1312
	.p2align 4,,7
	.p2align 3
.L1308:
	cmpb	$-32, %dl
	jae	.L1306
	movl	$_ZZ9mp_typeofE12__FUNCTION__, 12(%esp)
	movl	$140, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1313:
	movzwl	1(%eax), %ebx
	addl	$3, %eax
	rolw	$8, %bx
	movzwl	%bx, %ebx
.L1312:
	cmpl	$254, %ebx
	jbe	.L1310
	movl	$255, %ebx
.L1310:
	movl	%gs:0, %esi
	movl	%ebx, 8(%esp)
	movl	%eax, 4(%esp)
	addl	$_ZZL19tuple_field_to_cstrPKcjE3buf@ntpoff, %esi
	movl	%esi, (%esp)
	call	memcpy
	movl	%esi, %eax
	movb	$0, %gs:_ZZL19tuple_field_to_cstrPKcjE3buf@ntpoff(%ebx)
	addl	$36, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 12
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L1311:
	.cfi_restore_state
	movzbl	1(%eax), %ebx
	addl	$2, %eax
	jmp	.L1312
	.p2align 4,,7
	.p2align 3
.L1315:
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$779, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1328:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L1315
	movl	%edx, %ebx
	movl	%ecx, %eax
	andl	$31, %ebx
	jmp	.L1310
.L1327:
	movl	$336, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC23, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$336, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE83:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	%ebx, 16(%esp)
	movl	$54, 12(%esp)
	movl	$336, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %esi
.LEHB84:
	call	_ZN11ClientErrorC1EPKcjjz
.LEHE84:
	jmp	.L1323
.L1321:
.L1326:
	movl	%eax, %ebx
	movl	%esi, (%esp)
	call	__cxa_free_exception
	movl	%ebx, (%esp)
.LEHB85:
	call	_Unwind_Resume
.LEHE85:
.L1320:
	jmp	.L1326
	.cfi_endproc
.LFE199:
	.section	.gcc_except_table
.LLSDA199:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE199-.LLSDACSB199
.LLSDACSB199:
	.uleb128 .LEHB81-.LFB199
	.uleb128 .LEHE81-.LEHB81
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB82-.LFB199
	.uleb128 .LEHE82-.LEHB82
	.uleb128 .L1321-.LFB199
	.uleb128 0
	.uleb128 .LEHB83-.LFB199
	.uleb128 .LEHE83-.LEHB83
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB84-.LFB199
	.uleb128 .LEHE84-.LEHB84
	.uleb128 .L1320-.LFB199
	.uleb128 0
	.uleb128 .LEHB85-.LFB199
	.uleb128 .LEHE85-.LEHB85
	.uleb128 0
	.uleb128 0
.LLSDACSE199:
	.text
	.size	_Z15tuple_next_cstrP14tuple_iterator, .-_Z15tuple_next_cstrP14tuple_iterator
	.p2align 4,,15
	.globl	_Z16tuple_field_cstrP5tuplej
	.type	_Z16tuple_field_cstrP5tuplej, @function
_Z16tuple_field_cstrP5tuplej:
.LFB200:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA200
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$76, %esp
	.cfi_def_cfa_offset 96
	movl	tuple_formats, %ebx
	movl	96(%esp), %ebp
	movl	100(%esp), %edi
	movzwl	2(%ebp), %ecx
	movl	(%ebx,%ecx,4), %eax
	movzwl	(%eax), %edx
	cmpl	(%ebx,%edx,4), %eax
	jne	.L1671
	cmpl	%edx, %ecx
	jne	.L1672
	cmpl	8(%eax), %edi
	jae	.L1332
	movl	24(%eax,%edi,4), %eax
	cmpl	$-2147483648, %eax
	je	.L1332
	movl	0(%ebp,%eax,4), %edx
	addl	%ebp, %edx
	addl	$8, %edx
.L1333:
	movzbl	(%edx), %eax
	cmpb	$-40, %al
	ja	.L1586
	cmpb	$-64, %al
	jae	.L1587
	cmpb	$-97, %al
	ja	.L1588
.L1587:
	movl	$359, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC23, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$359, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
.LEHB86:
	call	*_say
.LEHE86:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	%edi, 16(%esp)
	movl	$40, 12(%esp)
	movl	$359, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, %ebx
	movl	field_type_strs+12, %eax
	movl	%ebx, (%esp)
	movl	%eax, 20(%esp)
.LEHB87:
	call	_ZN11ClientErrorC1EPKcjjz
.LEHE87:
.L1646:
	movl	$_ZN11ClientErrorD1Ev, 8(%esp)
	movl	$_ZTI11ClientError, 4(%esp)
	movl	%ebx, (%esp)
.LEHB88:
	call	__cxa_throw
	.p2align 4,,7
	.p2align 3
.L1332:
	movzbl	8(%ebp), %eax
	leal	9(%ebp), %edx
	movl	%edx, 60(%esp)
	cmpb	$-36, %al
	je	.L1335
	ja	.L1336
	leal	112(%eax), %edx
	andl	$15, %eax
	cmpb	$15, %dl
	ja	.L1565
.L1339:
	cmpl	%eax, %edi
	jae	.L1599
	xorl	%esi, %esi
	testl	%edi, %edi
	movl	60(%esp), %edx
	je	.L1342
	movl	%ebp, 96(%esp)
.L1628:
	movzbl	(%edx), %ebx
	movl	%ebx, %eax
	addb	$-128, %al
	js	.L1343
	movzbl	%al, %eax
	jmp	*.L1345(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L1345:
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1344
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1346
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1350
	.long	.L1349
	.long	.L1350
	.long	.L1350
	.long	.L1351
	.long	.L1351
	.long	.L1351
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1352
	.long	.L1353
	.long	.L1343
	.long	.L1343
	.long	.L1343
	.long	.L1343
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1347
	.long	.L1347
	.long	.L1347
	.long	.L1346
	.long	.L1346
	.long	.L1344
	.long	.L1344
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.long	.L1354
	.text
	.p2align 4,,7
	.p2align 3
.L1350:
	addl	$1, %edx
	movl	%edx, 60(%esp)
.L1355:
	addl	$1, %esi
	cmpl	%edi, %esi
	jne	.L1628
	movl	96(%esp), %ebp
.L1342:
	movl	4(%ebp), %eax
	addl	%ebp, %eax
	addl	$8, %eax
	cmpl	%eax, %edx
	ja	.L1673
	testl	%edx, %edx
	jne	.L1333
.L1599:
	movl	$356, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC23, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$356, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE88:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	%edi, 16(%esp)
	movl	$54, 12(%esp)
	movl	$356, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB89:
	call	_ZN11ClientErrorC1EPKcjjz
.LEHE89:
	jmp	.L1646
	.p2align 4,,7
	.p2align 3
.L1586:
	cmpb	$-34, %al
	ja	.L1589
	cmpb	$-36, %al
	.p2align 4,,7
	jae	.L1587
.L1588:
	cmpb	$-39, %al
	leal	1(%edx), %ecx
	.p2align 4,,2
	je	.L1592
	.p2align 4,,4
	jbe	.L1674
	cmpb	$-38, %al
	.p2align 4,,4
	je	.L1594
	cmpb	$-37, %al
	.p2align 4,,7
	jne	.L1596
	movl	1(%edx), %esi
	addl	$5, %edx
	bswap	%esi
	jmp	.L1593
	.p2align 4,,7
	.p2align 3
.L1336:
	cmpb	$-35, %al
	jne	.L1565
	movl	9(%ebp), %eax
	leal	13(%ebp), %edx
	movl	%edx, 60(%esp)
	bswap	%eax
	jmp	.L1339
	.p2align 4,,7
	.p2align 3
.L1335:
	movzwl	9(%ebp), %eax
	leal	11(%ebp), %edx
	movl	%edx, 60(%esp)
	rolw	$8, %ax
	movzwl	%ax, %eax
	jmp	.L1339
	.p2align 4,,7
	.p2align 3
.L1589:
	cmpb	$-32, %al
	jae	.L1587
	movl	$_ZZ9mp_typeofE12__FUNCTION__, 12(%esp)
	movl	$140, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
.LEHB90:
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1353:
	addl	$9, %edx
	movl	%edx, 60(%esp)
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1349:
	movl	$_ZZ7mp_loadE12__FUNCTION__, 12(%esp)
	movl	$1036, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1352:
	addl	$5, %edx
	movl	%edx, 60(%esp)
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1354:
	addl	$48, %ebx
	leal	1(%edx), %eax
	cmpb	$47, %bl
	movl	%eax, 60(%esp)
	ja	.L1521
	movzbl	%bl, %ebx
	jmp	*.L1362(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L1362:
	.long	.L1361
	.long	.L1363
	.long	.L1352
	.long	.L1353
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.long	.L1667
	.text
	.p2align 4,,7
	.p2align 3
.L1351:
	leal	1(%edx), %eax
	cmpb	$-59, %bl
	movl	%eax, 60(%esp)
	je	.L1581
	cmpb	$-58, %bl
	jne	.L1669
.L1582:
	movl	1(%edx), %eax
	bswap	%eax
	leal	5(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1347:
	leal	1(%edx), %eax
	cmpb	$-39, %bl
	movl	%eax, 60(%esp)
	je	.L1669
	jbe	.L1675
	cmpb	$-38, %bl
	je	.L1581
	cmpb	$-37, %bl
	.p2align 4,,5
	je	.L1582
.L1596:
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$779, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1344:
	leal	1(%edx), %eax
	cmpb	$-34, %bl
	movl	%eax, 60(%esp)
	je	.L1367
	ja	.L1368
	leal	-128(%ebx), %edx
	cmpb	$15, %dl
	ja	.L1527
	movl	%ebx, %ecx
	andl	$15, %ecx
	movl	%ecx, 32(%esp)
.L1371:
	movl	32(%esp), %ebx
	testl	%ebx, %ebx
	je	.L1667
	xorl	%ecx, %ecx
	movl	%esi, 36(%esp)
	movl	%ecx, %esi
.L1564:
	movzbl	(%eax), %ebx
	movl	%ebx, %edx
	addb	$-128, %dl
	js	.L1372
	movzbl	%dl, %edx
	jmp	*.L1374(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L1374:
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1373
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1375
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1379
	.long	.L1349
	.long	.L1379
	.long	.L1379
	.long	.L1380
	.long	.L1380
	.long	.L1380
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1381
	.long	.L1382
	.long	.L1372
	.long	.L1372
	.long	.L1372
	.long	.L1372
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1376
	.long	.L1376
	.long	.L1376
	.long	.L1375
	.long	.L1375
	.long	.L1373
	.long	.L1373
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.long	.L1383
	.text
	.p2align 4,,7
	.p2align 3
.L1346:
	leal	1(%edx), %eax
	cmpb	$-36, %bl
	movl	%eax, 60(%esp)
	je	.L1566
	ja	.L1567
	leal	112(%ebx), %eax
	cmpb	$15, %al
	ja	.L1565
	andl	$15, %ebx
.L1570:
	xorl	%ebp, %ebp
	testl	%ebx, %ebx
	je	.L1668
	.p2align 4,,7
	.p2align 3
.L1624:
	leal	60(%esp), %eax
	addl	$1, %ebp
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %ebp
	jne	.L1624
.L1668:
	movl	60(%esp), %edx
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1565:
	movl	$_ZZ13mp_array_loadE12__FUNCTION__, 12(%esp)
	movl	$222, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1343:
	leal	1(%edx), %eax
	testb	%bl, %bl
	movl	%eax, 60(%esp)
	js	.L1676
.L1667:
	movl	%eax, %edx
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1669:
	movzbl	1(%edx), %eax
	leal	2(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1592:
	movzbl	1(%edx), %esi
	addl	$2, %edx
.L1593:
	cmpl	$254, %esi
	jbe	.L1591
	movl	$255, %esi
.L1591:
	movl	%gs:0, %ebx
	movl	%esi, 8(%esp)
	movl	%edx, 4(%esp)
	addl	$_ZZL19tuple_field_to_cstrPKcjE3buf@ntpoff, %ebx
	movl	%ebx, (%esp)
	call	memcpy
	movl	%ebx, %eax
	movb	$0, %gs:_ZZL19tuple_field_to_cstrPKcjE3buf@ntpoff(%esi)
	addl	$76, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L1368:
	.cfi_restore_state
	cmpb	$-33, %bl
	jne	.L1527
	movl	1(%edx), %eax
	bswap	%eax
	movl	%eax, 32(%esp)
	leal	5(%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1371
	.p2align 4,,7
	.p2align 3
.L1567:
	cmpb	$-35, %bl
	jne	.L1565
	movl	1(%edx), %ebx
	addl	$5, %edx
	movl	%edx, 60(%esp)
	bswap	%ebx
	jmp	.L1570
	.p2align 4,,7
	.p2align 3
.L1676:
	cmpb	$-52, %bl
	je	.L1361
	cmpb	$-51, %bl
	je	.L1363
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L1352
	cmpb	$-49, %bl
	.p2align 4,,2
	je	.L1353
.L1359:
	.p2align 4,,5
	call	mp_uint_load.part.6
	.p2align 4,,7
	.p2align 3
.L1379:
	leal	1(%eax), %edx
	movl	%edx, 60(%esp)
.L1384:
	movzbl	(%edx), %ebx
	movl	%ebx, %eax
	addb	$-128, %al
	js	.L1468
	movzbl	%al, %eax
	jmp	*.L1470(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L1470:
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1469
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1471
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1475
	.long	.L1349
	.long	.L1475
	.long	.L1475
	.long	.L1476
	.long	.L1476
	.long	.L1476
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1477
	.long	.L1478
	.long	.L1468
	.long	.L1468
	.long	.L1468
	.long	.L1468
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1472
	.long	.L1472
	.long	.L1472
	.long	.L1471
	.long	.L1471
	.long	.L1469
	.long	.L1469
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.long	.L1479
	.text
	.p2align 4,,7
	.p2align 3
.L1581:
	movzwl	1(%edx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1475:
	leal	1(%edx), %eax
	movl	%eax, 60(%esp)
.L1480:
	addl	$1, %esi
	cmpl	32(%esp), %esi
	jne	.L1564
	movl	36(%esp), %esi
	movl	%eax, %edx
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1361:
	addl	$2, %edx
	movl	%edx, 60(%esp)
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1363:
	addl	$3, %edx
	movl	%edx, 60(%esp)
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1372:
	leal	1(%eax), %edx
	testb	%bl, %bl
	movl	%edx, 60(%esp)
	jns	.L1384
	cmpb	$-52, %bl
	je	.L1389
	cmpb	$-51, %bl
	je	.L1391
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L1381
	cmpb	$-49, %bl
	.p2align 4,,2
	jne	.L1359
	.p2align 4,,7
	.p2align 3
.L1382:
	leal	9(%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1384
	.p2align 4,,7
	.p2align 3
.L1381:
	leal	5(%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1384
	.p2align 4,,7
	.p2align 3
.L1380:
	leal	1(%eax), %edx
	cmpb	$-59, %bl
	movl	%edx, 60(%esp)
	je	.L1466
	cmpb	$-58, %bl
	jne	.L1661
.L1467:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %edx
	movl	%edx, 60(%esp)
	jmp	.L1384
	.p2align 4,,7
	.p2align 3
.L1383:
	addl	$48, %ebx
	leal	1(%eax), %edx
	cmpb	$47, %bl
	movl	%edx, 60(%esp)
	ja	.L1521
	movzbl	%bl, %ebx
	jmp	*.L1390(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L1390:
	.long	.L1389
	.long	.L1391
	.long	.L1381
	.long	.L1382
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.long	.L1384
	.text
	.p2align 4,,7
	.p2align 3
.L1376:
	leal	1(%eax), %edx
	cmpb	$-39, %bl
	movl	%edx, 60(%esp)
	je	.L1661
	jbe	.L1677
	cmpb	$-38, %bl
	je	.L1466
	cmpb	$-37, %bl
	.p2align 4,,5
	je	.L1467
	.p2align 4,,5
	jmp	.L1596
	.p2align 4,,7
	.p2align 3
.L1375:
	leal	1(%eax), %edx
	cmpb	$-36, %bl
	movl	%edx, 60(%esp)
	je	.L1404
	ja	.L1405
	leal	112(%ebx), %eax
	cmpb	$15, %al
	ja	.L1565
	movl	%ebx, %eax
	andl	$15, %eax
	movl	%eax, 40(%esp)
.L1408:
	movl	40(%esp), %ecx
	testl	%ecx, %ecx
	je	.L1384
	xorl	%ebx, %ebx
	movl	%esi, 44(%esp)
.L1458:
	movzbl	(%edx), %eax
	movl	%eax, %ecx
	addb	$-128, %cl
	js	.L1409
	movzbl	%cl, %ecx
	jmp	*.L1411(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L1411:
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1410
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1412
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1416
	.long	.L1349
	.long	.L1416
	.long	.L1416
	.long	.L1417
	.long	.L1417
	.long	.L1417
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1418
	.long	.L1419
	.long	.L1409
	.long	.L1409
	.long	.L1409
	.long	.L1409
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1413
	.long	.L1413
	.long	.L1413
	.long	.L1412
	.long	.L1412
	.long	.L1410
	.long	.L1410
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.long	.L1420
	.text
	.p2align 4,,7
	.p2align 3
.L1373:
	leal	1(%eax), %edx
	cmpb	$-34, %bl
	movl	%edx, 60(%esp)
	je	.L1395
	ja	.L1396
	leal	-128(%ebx), %eax
	cmpb	$15, %al
	ja	.L1527
	andl	$15, %ebx
.L1399:
	xorl	%ebp, %ebp
	testl	%ebx, %ebx
	je	.L1660
	.p2align 4,,7
	.p2align 3
.L1618:
	leal	60(%esp), %eax
	addl	$1, %ebp
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %ebp
	jne	.L1618
.L1660:
	movl	60(%esp), %edx
	jmp	.L1384
.L1468:
	leal	1(%edx), %eax
	testb	%bl, %bl
	movl	%eax, 60(%esp)
	jns	.L1480
	cmpb	$-52, %bl
	je	.L1485
	cmpb	$-51, %bl
	je	.L1487
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L1477
	cmpb	$-49, %bl
	.p2align 4,,2
	jne	.L1359
	.p2align 4,,7
	.p2align 3
.L1478:
	leal	9(%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1480
.L1477:
	leal	5(%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1480
.L1476:
	leal	1(%edx), %eax
	cmpb	$-59, %bl
	movl	%eax, 60(%esp)
	je	.L1562
	cmpb	$-58, %bl
	jne	.L1666
.L1563:
	movl	1(%edx), %eax
	bswap	%eax
	leal	5(%edx,%eax), %eax
	movl	%eax, 60(%esp)
	jmp	.L1480
.L1472:
	leal	1(%edx), %eax
	cmpb	$-39, %bl
	movl	%eax, 60(%esp)
	je	.L1666
	jbe	.L1678
	cmpb	$-38, %bl
	je	.L1562
	cmpb	$-37, %bl
	.p2align 4,,5
	je	.L1563
	.p2align 4,,5
	jmp	.L1596
	.p2align 4,,7
	.p2align 3
.L1471:
	leal	1(%edx), %eax
	cmpb	$-36, %bl
	movl	%eax, 60(%esp)
	je	.L1500
	ja	.L1501
	leal	112(%ebx), %edx
	cmpb	$15, %dl
	ja	.L1565
	movl	%ebx, %ecx
	andl	$15, %ecx
	movl	%ecx, 40(%esp)
.L1504:
	movl	40(%esp), %edx
	testl	%edx, %edx
	je	.L1480
	xorl	%ebx, %ebx
	movl	%esi, 44(%esp)
.L1554:
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L1505
	movzbl	%cl, %ecx
	jmp	*.L1507(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L1507:
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1506
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1508
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1512
	.long	.L1349
	.long	.L1512
	.long	.L1512
	.long	.L1513
	.long	.L1513
	.long	.L1513
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1514
	.long	.L1515
	.long	.L1505
	.long	.L1505
	.long	.L1505
	.long	.L1505
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1349
	.long	.L1509
	.long	.L1509
	.long	.L1509
	.long	.L1508
	.long	.L1508
	.long	.L1506
	.long	.L1506
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.long	.L1516
	.text
.L1479:
	addl	$48, %ebx
	leal	1(%edx), %eax
	cmpb	$47, %bl
	movl	%eax, 60(%esp)
	ja	.L1521
	movzbl	%bl, %ebx
	jmp	*.L1486(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L1486:
	.long	.L1485
	.long	.L1487
	.long	.L1477
	.long	.L1478
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.long	.L1480
	.text
.L1469:
	leal	1(%edx), %eax
	cmpb	$-34, %bl
	movl	%eax, 60(%esp)
	je	.L1491
	ja	.L1492
	leal	-128(%ebx), %eax
	cmpb	$15, %al
	ja	.L1527
	andl	$15, %ebx
.L1495:
	xorl	%ebp, %ebp
	testl	%ebx, %ebx
	je	.L1665
	.p2align 4,,7
	.p2align 3
.L1621:
	leal	60(%esp), %eax
	addl	$1, %ebp
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %ebp
	jne	.L1621
.L1665:
	movl	60(%esp), %eax
	jmp	.L1480
	.p2align 4,,7
	.p2align 3
.L1521:
	movl	$_ZZ11mp_int_loadE12__FUNCTION__, 12(%esp)
	movl	$572, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
.L1416:
	addl	$1, %edx
	movl	%edx, 60(%esp)
.L1421:
	addl	$1, %ebx
	cmpl	40(%esp), %ebx
	jne	.L1458
	movl	44(%esp), %esi
	jmp	.L1384
.L1512:
	addl	$1, %eax
	movl	%eax, 60(%esp)
.L1517:
	addl	$1, %ebx
	cmpl	40(%esp), %ebx
	jne	.L1554
	movl	44(%esp), %esi
	jmp	.L1480
.L1409:
	leal	1(%edx), %ecx
	testb	%al, %al
	movl	%ecx, 60(%esp)
	jns	.L1606
	cmpb	$-52, %al
	je	.L1426
	cmpb	$-51, %al
	je	.L1428
	cmpb	$-50, %al
	.p2align 4,,5
	je	.L1418
	cmpb	$-49, %al
	.p2align 4,,5
	jne	.L1359
.L1419:
	addl	$9, %edx
	movl	%edx, 60(%esp)
	jmp	.L1421
.L1418:
	addl	$5, %edx
	movl	%edx, 60(%esp)
	jmp	.L1421
.L1417:
	leal	1(%edx), %ecx
	cmpb	$-59, %al
	movl	%ecx, 60(%esp)
	je	.L1456
	cmpb	$-58, %al
	jne	.L1659
.L1457:
	movl	1(%edx), %eax
	bswap	%eax
	leal	5(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1421
.L1410:
	leal	1(%edx), %ecx
	cmpb	$-34, %al
	movl	%ecx, 60(%esp)
	je	.L1432
	ja	.L1433
	leal	-128(%eax), %edx
	cmpb	$15, %dl
	ja	.L1527
	movl	%eax, %ebp
	andl	$15, %ebp
.L1436:
	xorl	%esi, %esi
	testl	%ebp, %ebp
	je	.L1658
	.p2align 4,,7
	.p2align 3
.L1619:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebp, %esi
	jne	.L1619
.L1658:
	movl	60(%esp), %edx
	jmp	.L1421
.L1413:
	leal	1(%edx), %ecx
	cmpb	$-39, %al
	movl	%ecx, 60(%esp)
	je	.L1659
	jbe	.L1679
	cmpb	$-38, %al
	je	.L1456
	cmpb	$-37, %al
	.p2align 4,,7
	je	.L1457
	.p2align 4,,7
	jmp	.L1596
	.p2align 4,,7
	.p2align 3
.L1420:
	addl	$48, %eax
	leal	1(%edx), %ecx
	cmpb	$47, %al
	movl	%ecx, 60(%esp)
	ja	.L1521
	movzbl	%al, %eax
	jmp	*.L1427(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L1427:
	.long	.L1426
	.long	.L1428
	.long	.L1418
	.long	.L1419
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.long	.L1606
	.text
.L1412:
	leal	1(%edx), %ecx
	cmpb	$-36, %al
	movl	%ecx, 60(%esp)
	je	.L1441
	ja	.L1442
	leal	112(%eax), %edx
	cmpb	$15, %dl
	ja	.L1565
	movl	%eax, %ebp
	andl	$15, %ebp
.L1445:
	xorl	%esi, %esi
	testl	%ebp, %ebp
	je	.L1658
	.p2align 4,,7
	.p2align 3
.L1620:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebp, %esi
	jne	.L1620
	jmp	.L1658
.L1389:
	leal	2(%eax), %edx
	movl	%edx, 60(%esp)
	.p2align 4,,2
	jmp	.L1384
.L1391:
	leal	3(%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1384
.L1505:
	leal	1(%eax), %ecx
	testb	%dl, %dl
	movl	%ecx, 60(%esp)
	jns	.L1608
	cmpb	$-52, %dl
	je	.L1522
	cmpb	$-51, %dl
	je	.L1524
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L1514
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L1359
.L1515:
	addl	$9, %eax
	movl	%eax, 60(%esp)
	jmp	.L1517
.L1514:
	addl	$5, %eax
	movl	%eax, 60(%esp)
	jmp	.L1517
.L1513:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, 60(%esp)
	je	.L1552
	cmpb	$-58, %dl
	jne	.L1664
.L1553:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1517
.L1516:
	addl	$48, %edx
	leal	1(%eax), %ecx
	cmpb	$47, %dl
	movl	%ecx, 60(%esp)
	ja	.L1521
	movzbl	%dl, %edx
	jmp	*.L1523(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L1523:
	.long	.L1522
	.long	.L1524
	.long	.L1514
	.long	.L1515
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1521
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.long	.L1608
	.text
.L1509:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, 60(%esp)
	je	.L1664
	jbe	.L1680
	cmpb	$-38, %dl
	je	.L1552
	cmpb	$-37, %dl
	.p2align 4,,5
	je	.L1553
	.p2align 4,,5
	jmp	.L1596
.L1508:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, 60(%esp)
	je	.L1537
	ja	.L1538
	leal	112(%edx), %eax
	cmpb	$15, %al
	ja	.L1565
	movl	%edx, %ebp
	andl	$15, %ebp
.L1541:
	xorl	%esi, %esi
	testl	%ebp, %ebp
	je	.L1663
	.p2align 4,,7
	.p2align 3
.L1623:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebp, %esi
	jne	.L1623
.L1663:
	movl	60(%esp), %eax
	jmp	.L1517
.L1506:
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, 60(%esp)
	je	.L1528
	ja	.L1529
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L1527
	movl	%edx, %ebp
	andl	$15, %ebp
.L1532:
	xorl	%esi, %esi
	testl	%ebp, %ebp
	je	.L1663
	.p2align 4,,7
	.p2align 3
.L1622:
	leal	60(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	leal	60(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebp, %esi
	jne	.L1622
	jmp	.L1663
.L1485:
	leal	2(%edx), %eax
	movl	%eax, 60(%esp)
	.p2align 4,,2
	jmp	.L1480
.L1487:
	leal	3(%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1480
.L1606:
	movl	%ecx, %edx
	jmp	.L1421
.L1608:
	movl	%ecx, %eax
	jmp	.L1517
.L1426:
	addl	$2, %edx
	movl	%edx, 60(%esp)
	jmp	.L1421
.L1428:
	addl	$3, %edx
	movl	%edx, 60(%esp)
	jmp	.L1421
.L1524:
	addl	$3, %eax
	movl	%eax, 60(%esp)
	jmp	.L1517
.L1522:
	addl	$2, %eax
	movl	%eax, 60(%esp)
	jmp	.L1517
	.p2align 4,,7
	.p2align 3
.L1594:
	movzwl	1(%edx), %esi
	addl	$3, %edx
	rolw	$8, %si
	movzwl	%si, %esi
	jmp	.L1593
	.p2align 4,,7
	.p2align 3
.L1527:
	movl	$_ZZ11mp_map_loadE12__FUNCTION__, 12(%esp)
	movl	$304, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1675:
	leal	96(%ebx), %edx
	cmpb	$31, %dl
	ja	.L1596
	andl	$31, %ebx
	leal	(%eax,%ebx), %edx
	movl	%edx, 60(%esp)
	jmp	.L1355
	.p2align 4,,7
	.p2align 3
.L1566:
	movzwl	1(%edx), %ebx
	addl	$3, %edx
	movl	%edx, 60(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L1570
	.p2align 4,,7
	.p2align 3
.L1367:
	movzwl	1(%edx), %ecx
	leal	3(%edx), %eax
	movl	%eax, 60(%esp)
	rolw	$8, %cx
	movzwl	%cx, %ecx
	movl	%ecx, 32(%esp)
	jmp	.L1371
	.p2align 4,,7
	.p2align 3
.L1674:
	leal	96(%eax), %edx
	cmpb	$31, %dl
	ja	.L1596
	movl	%eax, %esi
	movl	%ecx, %edx
	andl	$31, %esi
	jmp	.L1591
.L1661:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %edx
	movl	%edx, 60(%esp)
	jmp	.L1384
.L1466:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %edx
	movl	%edx, 60(%esp)
	jmp	.L1384
.L1666:
	movzbl	1(%edx), %eax
	leal	2(%edx,%eax), %eax
	movl	%eax, 60(%esp)
	jmp	.L1480
.L1396:
	cmpb	$-33, %bl
	jne	.L1527
	movl	1(%eax), %ebx
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%ebx
	jmp	.L1399
.L1405:
	cmpb	$-35, %bl
	jne	.L1565
	movl	1(%eax), %ecx
	leal	5(%eax), %edx
	movl	%edx, 60(%esp)
	bswap	%ecx
	movl	%ecx, 40(%esp)
	jmp	.L1408
.L1562:
	movzwl	1(%edx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%edx,%eax), %eax
	movl	%eax, 60(%esp)
	jmp	.L1480
.L1677:
	leal	96(%ebx), %eax
	cmpb	$31, %al
	ja	.L1596
	andl	$31, %ebx
	addl	%ebx, %edx
	movl	%edx, 60(%esp)
	jmp	.L1384
.L1501:
	cmpb	$-35, %bl
	jne	.L1565
	movl	1(%edx), %eax
	bswap	%eax
	movl	%eax, 40(%esp)
	leal	5(%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1504
.L1492:
	cmpb	$-33, %bl
	jne	.L1527
	movl	1(%edx), %ebx
	addl	$5, %edx
	movl	%edx, 60(%esp)
	bswap	%ebx
	jmp	.L1495
.L1395:
	movzwl	1(%eax), %ebx
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L1399
.L1404:
	movzwl	1(%eax), %ecx
	leal	3(%eax), %edx
	movl	%edx, 60(%esp)
	rolw	$8, %cx
	movzwl	%cx, %eax
	movl	%eax, 40(%esp)
	jmp	.L1408
.L1678:
	leal	96(%ebx), %edx
	cmpb	$31, %dl
	ja	.L1596
	andl	$31, %ebx
	addl	%ebx, %eax
	movl	%eax, 60(%esp)
	jmp	.L1480
.L1500:
	movzwl	1(%edx), %ecx
	leal	3(%edx), %eax
	movl	%eax, 60(%esp)
	rolw	$8, %cx
	movzwl	%cx, %ecx
	movl	%ecx, 40(%esp)
	jmp	.L1504
.L1491:
	movzwl	1(%edx), %ebx
	addl	$3, %edx
	movl	%edx, 60(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L1495
.L1659:
	movzbl	1(%edx), %eax
	leal	2(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1421
.L1456:
	movzwl	1(%edx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%edx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1421
.L1442:
	cmpb	$-35, %al
	jne	.L1565
	movl	1(%edx), %ebp
	addl	$5, %edx
	movl	%edx, 60(%esp)
	bswap	%ebp
	jmp	.L1445
.L1664:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1517
.L1433:
	cmpb	$-33, %al
	jne	.L1527
	movl	1(%edx), %ebp
	addl	$5, %edx
	movl	%edx, 60(%esp)
	bswap	%ebp
	jmp	.L1436
.L1552:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1517
.L1538:
	cmpb	$-35, %dl
	jne	.L1565
	movl	1(%eax), %ebp
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%ebp
	jmp	.L1541
.L1679:
	leal	96(%eax), %edx
	cmpb	$31, %dl
	ja	.L1596
	andl	$31, %eax
	leal	(%ecx,%eax), %edx
	movl	%edx, 60(%esp)
	jmp	.L1421
.L1529:
	cmpb	$-33, %dl
	jne	.L1527
	movl	1(%eax), %ebp
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%ebp
	jmp	.L1532
.L1441:
	movzwl	1(%edx), %ebp
	addl	$3, %edx
	movl	%edx, 60(%esp)
	rolw	$8, %bp
	movzwl	%bp, %ebp
	jmp	.L1445
.L1432:
	movzwl	1(%edx), %ebp
	addl	$3, %edx
	movl	%edx, 60(%esp)
	rolw	$8, %bp
	movzwl	%bp, %ebp
	jmp	.L1436
.L1680:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L1596
	movl	%edx, %eax
	andl	$31, %eax
	addl	%ecx, %eax
	movl	%eax, 60(%esp)
	jmp	.L1517
.L1528:
	movzwl	1(%eax), %ebp
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %bp
	movzwl	%bp, %ebp
	jmp	.L1532
.L1537:
	movzwl	1(%eax), %ebp
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %bp
	movzwl	%bp, %ebp
	jmp	.L1541
.L1671:
	call	_ZL15tuple_format_idP12tuple_format.part.2
.L1672:
	call	_ZL12tuple_formatPK5tuple.part.3
.L1611:
.L1670:
	movl	%eax, %esi
	movl	%ebx, (%esp)
	call	__cxa_free_exception
	movl	%esi, (%esp)
	call	_Unwind_Resume
.L1610:
	jmp	.L1670
.L1673:
	.p2align 4,,5
	call	_ZL15tuple_field_oldPK12tuple_formatPK5tuplej.part.10
.LEHE90:
	.cfi_endproc
.LFE200:
	.section	.gcc_except_table
.LLSDA200:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE200-.LLSDACSB200
.LLSDACSB200:
	.uleb128 .LEHB86-.LFB200
	.uleb128 .LEHE86-.LEHB86
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB87-.LFB200
	.uleb128 .LEHE87-.LEHB87
	.uleb128 .L1611-.LFB200
	.uleb128 0
	.uleb128 .LEHB88-.LFB200
	.uleb128 .LEHE88-.LEHB88
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB89-.LFB200
	.uleb128 .LEHE89-.LEHB89
	.uleb128 .L1610-.LFB200
	.uleb128 0
	.uleb128 .LEHB90-.LFB200
	.uleb128 .LEHE90-.LEHB90
	.uleb128 0
	.uleb128 0
.LLSDACSE200:
	.text
	.size	_Z16tuple_field_cstrP5tuplej, .-_Z16tuple_field_cstrP5tuplej
	.section	.rodata.str1.4
	.align 4
.LC34:
	.ascii	"\n********************************************\n* Found a co"
	.ascii	"rr"
	.string	"upted tuple in the snapshot! *\n* This can be either due to a memory       *\n* corruption or a bug in the server.       *\n* The tuple can not be loaded.             *\n********************************************\nTuple data, BASE64 encoded:                 \n"
	.align 4
.LC35:
	.string	"tuple_new(): incorrect tuple format"
	.align 4
.LC36:
	.string	"tuple_new(): tuple must be MsgPack Array"
	.text
	.p2align 4,,15
	.globl	_Z9tuple_newP12tuple_formatPPKcS2_
	.type	_Z9tuple_newP12tuple_formatPPKcS2_, @function
_Z9tuple_newP12tuple_formatPPKcS2_:
.LFB202:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA202
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$60, %esp
	.cfi_def_cfa_offset 80
	movl	84(%esp), %esi
	movl	88(%esp), %ebx
	movl	(%esi), %edi
	cmpl	%edi, %ebx
	jbe	.L1851
	movzbl	(%edi), %eax
	movl	%eax, %ecx
	addb	$-128, %cl
	js	.L1683
	movzbl	%cl, %ecx
	jmp	*.L1685(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L1685:
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1684
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1686
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1690
	.long	.L1689
	.long	.L1690
	.long	.L1690
	.long	.L1691
	.long	.L1691
	.long	.L1691
	.long	.L1689
	.long	.L1689
	.long	.L1689
	.long	.L1692
	.long	.L1693
	.long	.L1683
	.long	.L1683
	.long	.L1683
	.long	.L1683
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1689
	.long	.L1689
	.long	.L1689
	.long	.L1689
	.long	.L1689
	.long	.L1687
	.long	.L1687
	.long	.L1687
	.long	.L1686
	.long	.L1686
	.long	.L1684
	.long	.L1684
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.long	.L1694
	.text
	.p2align 4,,7
	.p2align 3
.L1690:
	leal	1(%edi), %edx
	movl	%edx, (%esi)
.L1698:
	movl	$397, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$397, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
.LEHB91:
	call	*_say
.LEHE91:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC36, 12(%esp)
	movl	$397, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB92:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE92:
.L1850:
	movl	$_ZN13IllegalParamsD1Ev, 8(%esp)
	movl	$_ZTI13IllegalParams, 4(%esp)
	movl	%ebx, (%esp)
.LEHB93:
	call	__cxa_throw
	.p2align 4,,7
	.p2align 3
.L1692:
	leal	4(%edi), %eax
	cmpl	%eax, %ebx
	ja	.L1852
	movl	$614, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$614, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE93:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC20, 12(%esp)
	movl	$614, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB94:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE94:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1693:
	leal	8(%edi), %eax
	cmpl	%eax, %ebx
	jae	.L1853
	movl	$627, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$627, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB95:
	call	*_say
.LEHE95:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC21, 12(%esp)
	movl	$627, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB96:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE96:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1689:
	movl	$1098, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$1098, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB97:
	call	*_say
.LEHE97:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC19, 12(%esp)
	movl	$1098, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB98:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE98:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1691:
	leal	1(%edi), %ecx
	cmpb	$-59, %al
	movl	%ecx, (%esi)
	je	.L1777
	cmpb	$-58, %al
	.p2align 4,,2
	je	.L1778
	leal	2(%edi), %eax
	cmpl	%eax, %ebx
	jb	.L1854
	movzbl	1(%edi), %edx
	movl	%eax, (%esi)
.L1780:
	addl	%edx, %eax
	cmpl	%eax, %ebx
	jb	.L1855
	movl	%eax, (%esi)
	jmp	.L1698
	.p2align 4,,7
	.p2align 3
.L1684:
	leal	1(%edi), %ecx
	cmpb	$-34, %al
	movl	%ecx, (%esi)
	je	.L1727
	.p2align 4,,2
	jbe	.L1856
	cmpb	$-33, %al
	.p2align 4,,2
	jne	.L1726
	leal	5(%edi), %eax
	cmpl	%eax, %ebx
	.p2align 4,,4
	jb	.L1857
	movl	1(%edi), %ebp
	movl	%eax, (%esi)
	bswap	%ebp
	jmp	.L1731
	.p2align 4,,7
	.p2align 3
.L1686:
	leal	1(%edi), %ecx
	cmpb	$-36, %al
	movl	%ecx, (%esi)
	je	.L1741
	ja	.L1742
	leal	112(%eax), %ecx
	cmpb	$15, %cl
	ja	.L1740
	andl	$15, %eax
	movl	%eax, 44(%esp)
.L1745:
	movl	44(%esp), %eax
	xorl	%ebp, %ebp
	testl	%eax, %eax
	je	.L1749
	.p2align 4,,7
	.p2align 3
.L1833:
	movl	%ebx, 4(%esp)
	addl	$1, %ebp
	movl	%esi, (%esp)
.LEHB99:
	call	mp_pick
	cmpl	44(%esp), %ebp
	jne	.L1833
.L1749:
	movl	%ebx, %ebp
	subl	%edi, %ebp
	cmpl	%ebx, (%esi)
	jne	.L1858
	movl	80(%esp), %eax
	subl	%ebp, %ebx
	movl	%ebp, 4(%esp)
	movl	%eax, (%esp)
	call	_Z11tuple_allocP12tuple_formatj
.LEHE99:
	movl	%ebp, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%eax, %esi
	leal	8(%eax), %eax
	movl	%eax, (%esp)
	call	memcpy
	movl	80(%esp), %eax
	movl	%esi, 8(%esp)
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
.LEHB100:
	call	_Z20tuple_init_field_mapP12tuple_formatP5tuplePj
.LEHE100:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%esi, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L1687:
	.cfi_restore_state
	leal	1(%edi), %ecx
	cmpb	$-39, %al
	movl	%ecx, (%esi)
	je	.L1755
	jbe	.L1859
	cmpb	$-38, %al
	.p2align 4,,2
	je	.L1758
	cmpb	$-37, %al
	.p2align 4,,7
	jne	.L1754
	leal	5(%edi), %ecx
	cmpl	%ecx, %ebx
	.p2align 4,,2
	jb	.L1860
	movl	1(%edi), %eax
	movl	%ecx, (%esi)
	bswap	%eax
.L1760:
	addl	%eax, %ecx
	cmpl	%ecx, %ebx
	jb	.L1861
	movl	%ecx, (%esi)
	jmp	.L1698
	.p2align 4,,7
	.p2align 3
.L1694:
	addl	$48, %eax
	leal	1(%edi), %ecx
	cmpb	$47, %al
	movl	%ecx, (%esi)
	ja	.L1711
	movzbl	%al, %eax
	jmp	*.L1713(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L1713:
	.long	.L1712
	.long	.L1714
	.long	.L1715
	.long	.L1716
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1711
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.long	.L1698
	.text
	.p2align 4,,7
	.p2align 3
.L1683:
	leal	1(%edi), %ecx
	cmpb	$-52, %al
	movl	%ecx, (%esi)
	je	.L1696
	jbe	.L1862
	cmpb	$-50, %al
	.p2align 4,,2
	je	.L1699
	.p2align 4,,9
	jb	.L1700
	cmpb	$-49, %al
	.p2align 4,,7
	jne	.L1695
	leal	9(%edi), %edx
	cmpl	%edx, %ebx
	.p2align 4,,4
	jb	.L1863
	.p2align 4,,7
	.p2align 3
.L1845:
	movl	%edx, (%esi)
	jmp	.L1698
	.p2align 4,,7
	.p2align 3
.L1853:
	leal	9(%edi), %edx
	movl	%edx, (%esi)
	jmp	.L1698
	.p2align 4,,7
	.p2align 3
.L1852:
	leal	5(%edi), %edx
	movl	%edx, (%esi)
	jmp	.L1698
	.p2align 4,,7
	.p2align 3
.L1856:
	leal	-128(%eax), %edx
	movl	%eax, %ebp
	andl	$15, %ebp
	cmpb	$15, %dl
	ja	.L1726
.L1731:
	xorl	%edi, %edi
	testl	%ebp, %ebp
	je	.L1698
	.p2align 4,,7
	.p2align 3
.L1832:
	movl	%ebx, 4(%esp)
	addl	$1, %edi
	movl	%esi, (%esp)
.LEHB101:
	call	mp_pick
	movl	%ebx, 4(%esp)
	movl	%esi, (%esp)
	call	mp_pick
	cmpl	%ebp, %edi
	jne	.L1832
	jmp	.L1698
	.p2align 4,,7
	.p2align 3
.L1742:
	cmpb	$-35, %al
	.p2align 4,,7
	jne	.L1740
	leal	5(%edi), %eax
	cmpl	%eax, %ebx
	.p2align 4,,4
	jb	.L1864
	movl	1(%edi), %edx
	movl	%eax, (%esi)
	bswap	%edx
	movl	%edx, 44(%esp)
	jmp	.L1745
	.p2align 4,,7
	.p2align 3
.L1778:
	leal	5(%edi), %eax
	cmpl	%eax, %ebx
	jb	.L1865
	movl	1(%edi), %edx
	movl	%eax, (%esi)
	jmp	.L1780
	.p2align 4,,7
	.p2align 3
.L1859:
	leal	96(%eax), %edx
	andl	$31, %eax
	cmpb	$31, %dl
	jbe	.L1760
.L1754:
	movl	$817, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$817, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE101:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$817, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB102:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE102:
	jmp	.L1850
.L1716:
	leal	9(%edi), %edx
	cmpl	%edx, %ebx
	jae	.L1845
	movl	$476, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$476, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB103:
	call	*_say
.LEHE103:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$476, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB104:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE104:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1715:
	leal	5(%edi), %edx
	cmpl	%edx, %ebx
	jae	.L1845
	movl	$470, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$470, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB105:
	call	*_say
.LEHE105:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$470, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB106:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE106:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1699:
	leal	5(%edi), %edx
	cmpl	%edx, %ebx
	jae	.L1845
	movl	$428, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$428, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB107:
	call	*_say
.LEHE107:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$428, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB108:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE108:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1714:
	leal	3(%edi), %edx
	cmpl	%edx, %ebx
	jae	.L1845
	movl	$464, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$464, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB109:
	call	*_say
.LEHE109:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$464, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB110:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE110:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1712:
	leal	2(%edi), %edx
	cmpl	%edx, %ebx
	jae	.L1845
	movl	$458, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$458, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB111:
	call	*_say
.LEHE111:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$458, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB112:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE112:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1711:
	movl	$481, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$481, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB113:
	call	*_say
.LEHE113:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC12, 12(%esp)
	movl	$481, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB114:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE114:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1741:
	leal	3(%edi), %eax
	cmpl	%eax, %ebx
	jb	.L1866
	movzwl	1(%edi), %ebp
	movl	%eax, (%esi)
	rolw	$8, %bp
	movzwl	%bp, %eax
	movl	%eax, 44(%esp)
	jmp	.L1745
	.p2align 4,,7
	.p2align 3
.L1862:
	cmpb	$127, %al
	jbe	.L1698
.L1695:
	movl	$439, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$439, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB115:
	call	*_say
.LEHE115:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$439, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB116:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE116:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1727:
	leal	3(%edi), %eax
	cmpl	%eax, %ebx
	jb	.L1867
	movzwl	1(%edi), %ebp
	movl	%eax, (%esi)
	rolw	$8, %bp
	movzwl	%bp, %ebp
	jmp	.L1731
	.p2align 4,,7
	.p2align 3
.L1777:
	leal	3(%edi), %eax
	cmpl	%eax, %ebx
	jb	.L1868
	movzwl	1(%edi), %edx
	movl	%eax, (%esi)
	jmp	.L1780
	.p2align 4,,7
	.p2align 3
.L1740:
	movl	$199, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$199, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB117:
	call	*_say
.LEHE117:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC16, 12(%esp)
	movl	$199, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB118:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE118:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1726:
	movl	$281, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$281, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB119:
	call	*_say
.LEHE119:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC13, 12(%esp)
	movl	$281, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB120:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE120:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1755:
	leal	2(%edi), %ecx
	cmpl	%ecx, %ebx
	jb	.L1869
	movzbl	1(%edi), %eax
	movl	%ecx, (%esi)
	jmp	.L1760
	.p2align 4,,7
	.p2align 3
.L1758:
	leal	3(%edi), %ecx
	cmpl	%ecx, %ebx
	jb	.L1870
	movzwl	1(%edi), %eax
	movl	%ecx, (%esi)
	rolw	$8, %ax
	movzwl	%ax, %eax
	jmp	.L1760
.L1700:
	leal	3(%edi), %edx
	cmpl	%edx, %ebx
	jae	.L1845
	movl	$422, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$422, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB121:
	call	*_say
.LEHE121:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$422, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB122:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE122:
	jmp	.L1850
	.p2align 4,,7
	.p2align 3
.L1696:
	leal	2(%edi), %edx
	cmpl	%edx, %ebx
	jae	.L1845
	movl	$416, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$416, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB123:
	call	*_say
.LEHE123:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$416, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB124:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE124:
	jmp	.L1850
.L1851:
	movl	$1048, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$1048, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB125:
	call	*_say
.LEHE125:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC10, 12(%esp)
	movl	$1048, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB126:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE126:
	jmp	.L1850
.L1858:
	movl	$.LC34, 16(%esp)
	movl	$3, %esi
	subl	%ebp, %ebx
	movl	$0, 12(%esp)
	movl	$407, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$1, (%esp)
.LEHB127:
	call	*_say
	leal	0(,%ebp,4), %eax
	cltd
	idivl	%esi
	movw	$72, %si
	movl	%eax, %ecx
	leal	75(%eax), %eax
	cltd
	idivl	%esi
	leal	4(%ecx,%eax), %edi
	movl	%edi, (%esp)
	call	malloc
	movl	%ebx, (%esp)
	movl	%edi, 12(%esp)
	movl	%ebp, 4(%esp)
	movl	%eax, 8(%esp)
	movl	%eax, %esi
	call	base64_encode
	movl	%esi, 4(%esp)
	movl	$2, (%esp)
	movl	%eax, 8(%esp)
	call	write
	movl	%esi, (%esp)
	call	free
	movl	$415, 28(%esp)
	movl	$.LC22, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$415, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE127:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC35, 12(%esp)
	movl	$415, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB128:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE128:
	jmp	.L1850
.L1870:
	movl	$806, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$806, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB129:
	call	*_say
.LEHE129:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$806, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB130:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE130:
	jmp	.L1850
.L1800:
.L1849:
	movl	%eax, %esi
	movl	%ebx, (%esp)
	call	__cxa_free_exception
	movl	%esi, (%esp)
.LEHB131:
	call	_Unwind_Resume
.L1824:
	jmp	.L1849
.L1863:
	movl	$434, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$434, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
	call	*_say
.LEHE131:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC11, 12(%esp)
	movl	$434, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB132:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE132:
	jmp	.L1850
.L1810:
	jmp	.L1849
.L1806:
	.p2align 4,,11
	jmp	.L1849
.L1855:
	movl	$863, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$863, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB133:
	call	*_say
.LEHE133:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC18, 12(%esp)
	movl	$863, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB134:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE134:
	jmp	.L1850
.L1854:
	movl	$841, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$841, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB135:
	call	*_say
.LEHE135:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC18, 12(%esp)
	movl	$841, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB136:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE136:
	jmp	.L1850
.L1828:
	jmp	.L1849
.L1831:
	.p2align 4,,11
	jmp	.L1849
.L1804:
	.p2align 4,,11
	jmp	.L1849
.L1867:
	movl	$270, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$270, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB137:
	call	*_say
.LEHE137:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC13, 12(%esp)
	movl	$270, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB138:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE138:
	jmp	.L1850
.L1812:
	jmp	.L1849
.L1822:
	.p2align 4,,11
	jmp	.L1849
.L1815:
	.p2align 4,,11
	jmp	.L1849
.L1799:
	.p2align 4,,11
	jmp	.L1849
.L1809:
	.p2align 4,,11
	jmp	.L1849
.L1805:
	.p2align 4,,11
	jmp	.L1849
.L1818:
	.p2align 4,,11
	jmp	.L1849
.L1868:
	movl	$847, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$847, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB139:
	call	*_say
.LEHE139:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC18, 12(%esp)
	movl	$847, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB140:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE140:
	jmp	.L1850
.L1817:
	jmp	.L1849
.L1830:
	.p2align 4,,11
	jmp	.L1849
.L1807:
	.p2align 4,,11
	jmp	.L1849
.L1813:
	.p2align 4,,11
	jmp	.L1849
.L1865:
	movl	$853, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$853, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB141:
	call	*_say
.LEHE141:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC18, 12(%esp)
	movl	$853, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB142:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE142:
	jmp	.L1850
.L1814:
	jmp	.L1849
.L1829:
	.p2align 4,,11
	jmp	.L1849
.L1811:
	.p2align 4,,11
	jmp	.L1849
.L1869:
	movl	$800, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$800, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB143:
	call	*_say
.LEHE143:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$800, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB144:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE144:
	jmp	.L1850
.L1866:
	movl	$188, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$188, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB145:
	call	*_say
.LEHE145:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC14, 12(%esp)
	movl	$188, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB146:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE146:
	jmp	.L1850
.L1808:
	jmp	.L1849
.L1825:
	.p2align 4,,11
	jmp	.L1849
.L1820:
	.p2align 4,,11
	jmp	.L1849
.L1857:
	movl	$276, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$276, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB147:
	call	*_say
.LEHE147:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC13, 12(%esp)
	movl	$276, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB148:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE148:
	jmp	.L1850
.L1864:
	movl	$194, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$194, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB149:
	call	*_say
.LEHE149:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC15, 12(%esp)
	movl	$194, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB150:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE150:
	jmp	.L1850
.L1816:
	jmp	.L1849
.L1819:
	.p2align 4,,11
	jmp	.L1849
.L1861:
	movl	$822, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$822, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB151:
	call	*_say
.LEHE151:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$822, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB152:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE152:
	jmp	.L1850
.L1860:
	movl	$812, 28(%esp)
	movl	$.LC3, 24(%esp)
	movl	$.LC8, 20(%esp)
	movl	$.LC9, 16(%esp)
	movl	$0, 12(%esp)
	movl	$812, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$5, (%esp)
.LEHB153:
	call	*_say
.LEHE153:
	movl	$528, (%esp)
	call	__cxa_allocate_exception
	movl	$.LC17, 12(%esp)
	movl	$812, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	%eax, (%esp)
	movl	%eax, %ebx
.LEHB154:
	call	_ZN13IllegalParamsC1EPKcjS1_
.LEHE154:
	jmp	.L1850
.L1821:
	jmp	.L1849
.L1823:
	.p2align 4,,11
	jmp	.L1849
.L1827:
	.p2align 4,,11
	jmp	.L1849
.L1826:
	.p2align 4,,11
	jmp	.L1849
.L1801:
	movl	%eax, (%esp)
	.p2align 4,,8
	call	__cxa_begin_catch
	movl	%esi, (%esp)
.LEHB155:
	call	_Z12tuple_deleteP5tuple
	call	__cxa_rethrow
.LEHE155:
.L1803:
	.p2align 4,,2
	jmp	.L1849
.L1802:
	movl	%eax, %ebx
	.p2align 4,,6
	call	__cxa_end_catch
	movl	%ebx, (%esp)
.LEHB156:
	call	_Unwind_Resume
.LEHE156:
	.cfi_endproc
.LFE202:
	.section	.gcc_except_table
	.align 4
.LLSDA202:
	.byte	0xff
	.byte	0
	.uleb128 .LLSDATT202-.LLSDATTD202
.LLSDATTD202:
	.byte	0x1
	.uleb128 .LLSDACSE202-.LLSDACSB202
.LLSDACSB202:
	.uleb128 .LEHB91-.LFB202
	.uleb128 .LEHE91-.LEHB91
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB92-.LFB202
	.uleb128 .LEHE92-.LEHB92
	.uleb128 .L1799-.LFB202
	.uleb128 0
	.uleb128 .LEHB93-.LFB202
	.uleb128 .LEHE93-.LEHB93
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB94-.LFB202
	.uleb128 .LEHE94-.LEHB94
	.uleb128 .L1826-.LFB202
	.uleb128 0
	.uleb128 .LEHB95-.LFB202
	.uleb128 .LEHE95-.LEHB95
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB96-.LFB202
	.uleb128 .LEHE96-.LEHB96
	.uleb128 .L1827-.LFB202
	.uleb128 0
	.uleb128 .LEHB97-.LFB202
	.uleb128 .LEHE97-.LEHB97
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB98-.LFB202
	.uleb128 .LEHE98-.LEHB98
	.uleb128 .L1804-.LFB202
	.uleb128 0
	.uleb128 .LEHB99-.LFB202
	.uleb128 .LEHE99-.LEHB99
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB100-.LFB202
	.uleb128 .LEHE100-.LEHB100
	.uleb128 .L1801-.LFB202
	.uleb128 0x1
	.uleb128 .LEHB101-.LFB202
	.uleb128 .LEHE101-.LEHB101
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB102-.LFB202
	.uleb128 .LEHE102-.LEHB102
	.uleb128 .L1822-.LFB202
	.uleb128 0
	.uleb128 .LEHB103-.LFB202
	.uleb128 .LEHE103-.LEHB103
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB104-.LFB202
	.uleb128 .LEHE104-.LEHB104
	.uleb128 .L1811-.LFB202
	.uleb128 0
	.uleb128 .LEHB105-.LFB202
	.uleb128 .LEHE105-.LEHB105
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB106-.LFB202
	.uleb128 .LEHE106-.LEHB106
	.uleb128 .L1812-.LFB202
	.uleb128 0
	.uleb128 .LEHB107-.LFB202
	.uleb128 .LEHE107-.LEHB107
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB108-.LFB202
	.uleb128 .LEHE108-.LEHB108
	.uleb128 .L1807-.LFB202
	.uleb128 0
	.uleb128 .LEHB109-.LFB202
	.uleb128 .LEHE109-.LEHB109
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB110-.LFB202
	.uleb128 .LEHE110-.LEHB110
	.uleb128 .L1813-.LFB202
	.uleb128 0
	.uleb128 .LEHB111-.LFB202
	.uleb128 .LEHE111-.LEHB111
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB112-.LFB202
	.uleb128 .LEHE112-.LEHB112
	.uleb128 .L1814-.LFB202
	.uleb128 0
	.uleb128 .LEHB113-.LFB202
	.uleb128 .LEHE113-.LEHB113
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB114-.LFB202
	.uleb128 .LEHE114-.LEHB114
	.uleb128 .L1810-.LFB202
	.uleb128 0
	.uleb128 .LEHB115-.LFB202
	.uleb128 .LEHE115-.LEHB115
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB116-.LFB202
	.uleb128 .LEHE116-.LEHB116
	.uleb128 .L1805-.LFB202
	.uleb128 0
	.uleb128 .LEHB117-.LFB202
	.uleb128 .LEHE117-.LEHB117
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB118-.LFB202
	.uleb128 .LEHE118-.LEHB118
	.uleb128 .L1818-.LFB202
	.uleb128 0
	.uleb128 .LEHB119-.LFB202
	.uleb128 .LEHE119-.LEHB119
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB120-.LFB202
	.uleb128 .LEHE120-.LEHB120
	.uleb128 .L1815-.LFB202
	.uleb128 0
	.uleb128 .LEHB121-.LFB202
	.uleb128 .LEHE121-.LEHB121
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB122-.LFB202
	.uleb128 .LEHE122-.LEHB122
	.uleb128 .L1808-.LFB202
	.uleb128 0
	.uleb128 .LEHB123-.LFB202
	.uleb128 .LEHE123-.LEHB123
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB124-.LFB202
	.uleb128 .LEHE124-.LEHB124
	.uleb128 .L1809-.LFB202
	.uleb128 0
	.uleb128 .LEHB125-.LFB202
	.uleb128 .LEHE125-.LEHB125
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB126-.LFB202
	.uleb128 .LEHE126-.LEHB126
	.uleb128 .L1803-.LFB202
	.uleb128 0
	.uleb128 .LEHB127-.LFB202
	.uleb128 .LEHE127-.LEHB127
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB128-.LFB202
	.uleb128 .LEHE128-.LEHB128
	.uleb128 .L1800-.LFB202
	.uleb128 0
	.uleb128 .LEHB129-.LFB202
	.uleb128 .LEHE129-.LEHB129
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB130-.LFB202
	.uleb128 .LEHE130-.LEHB130
	.uleb128 .L1824-.LFB202
	.uleb128 0
	.uleb128 .LEHB131-.LFB202
	.uleb128 .LEHE131-.LEHB131
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB132-.LFB202
	.uleb128 .LEHE132-.LEHB132
	.uleb128 .L1806-.LFB202
	.uleb128 0
	.uleb128 .LEHB133-.LFB202
	.uleb128 .LEHE133-.LEHB133
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB134-.LFB202
	.uleb128 .LEHE134-.LEHB134
	.uleb128 .L1828-.LFB202
	.uleb128 0
	.uleb128 .LEHB135-.LFB202
	.uleb128 .LEHE135-.LEHB135
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB136-.LFB202
	.uleb128 .LEHE136-.LEHB136
	.uleb128 .L1831-.LFB202
	.uleb128 0
	.uleb128 .LEHB137-.LFB202
	.uleb128 .LEHE137-.LEHB137
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB138-.LFB202
	.uleb128 .LEHE138-.LEHB138
	.uleb128 .L1817-.LFB202
	.uleb128 0
	.uleb128 .LEHB139-.LFB202
	.uleb128 .LEHE139-.LEHB139
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB140-.LFB202
	.uleb128 .LEHE140-.LEHB140
	.uleb128 .L1830-.LFB202
	.uleb128 0
	.uleb128 .LEHB141-.LFB202
	.uleb128 .LEHE141-.LEHB141
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB142-.LFB202
	.uleb128 .LEHE142-.LEHB142
	.uleb128 .L1829-.LFB202
	.uleb128 0
	.uleb128 .LEHB143-.LFB202
	.uleb128 .LEHE143-.LEHB143
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB144-.LFB202
	.uleb128 .LEHE144-.LEHB144
	.uleb128 .L1825-.LFB202
	.uleb128 0
	.uleb128 .LEHB145-.LFB202
	.uleb128 .LEHE145-.LEHB145
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB146-.LFB202
	.uleb128 .LEHE146-.LEHB146
	.uleb128 .L1820-.LFB202
	.uleb128 0
	.uleb128 .LEHB147-.LFB202
	.uleb128 .LEHE147-.LEHB147
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB148-.LFB202
	.uleb128 .LEHE148-.LEHB148
	.uleb128 .L1816-.LFB202
	.uleb128 0
	.uleb128 .LEHB149-.LFB202
	.uleb128 .LEHE149-.LEHB149
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB150-.LFB202
	.uleb128 .LEHE150-.LEHB150
	.uleb128 .L1819-.LFB202
	.uleb128 0
	.uleb128 .LEHB151-.LFB202
	.uleb128 .LEHE151-.LEHB151
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB152-.LFB202
	.uleb128 .LEHE152-.LEHB152
	.uleb128 .L1821-.LFB202
	.uleb128 0
	.uleb128 .LEHB153-.LFB202
	.uleb128 .LEHE153-.LEHB153
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB154-.LFB202
	.uleb128 .LEHE154-.LEHB154
	.uleb128 .L1823-.LFB202
	.uleb128 0
	.uleb128 .LEHB155-.LFB202
	.uleb128 .LEHE155-.LEHB155
	.uleb128 .L1802-.LFB202
	.uleb128 0
	.uleb128 .LEHB156-.LFB202
	.uleb128 .LEHE156-.LEHB156
	.uleb128 0
	.uleb128 0
.LLSDACSE202:
	.byte	0x1
	.byte	0
	.align 4
	.long	0
.LLSDATT202:
	.text
	.size	_Z9tuple_newP12tuple_formatPPKcS2_, .-_Z9tuple_newP12tuple_formatPPKcS2_
	.p2align 4,,15
	.globl	_Z12tuple_updateP12tuple_formatPFPvS1_jES1_PK5tuplePKcS8_
	.type	_Z12tuple_updateP12tuple_formatPFPvS1_jES1_PK5tuplePKcS8_, @function
_Z12tuple_updateP12tuple_formatPFPvS1_jES1_PK5tuplePKcS8_:
.LFB201:
	.cfi_startproc
	.cfi_personality 0,__gxx_personality_v0
	.cfi_lsda 0,.LLSDA201
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	subl	$52, %esp
	.cfi_def_cfa_offset 64
	movl	76(%esp), %eax
	leal	40(%esp), %edx
	movl	%edx, 24(%esp)
	movl	64(%esp), %esi
	movl	$0, 40(%esp)
	movl	4(%eax), %edx
	addl	%eax, %edx
	addl	$8, %eax
	movl	%eax, 16(%esp)
	movl	84(%esp), %eax
	addl	$8, %edx
	movl	%edx, 20(%esp)
	movl	%eax, 12(%esp)
	movl	80(%esp), %eax
	movl	%eax, 8(%esp)
	movl	72(%esp), %eax
	movl	%eax, 4(%esp)
	movl	68(%esp), %eax
	movl	%eax, (%esp)
.LEHB157:
	call	_Z20tuple_update_executePFPvS_jES_PKcS3_S3_S3_Pj
	movl	%esi, (%esp)
	movl	%eax, 44(%esp)
	addl	40(%esp), %eax
	movl	%eax, 8(%esp)
	leal	44(%esp), %eax
	movl	%eax, 4(%esp)
	call	_Z9tuple_newP12tuple_formatPPKcS2_
.LEHE157:
	movl	%esi, (%esp)
	movl	%eax, 8(%esp)
	movl	%eax, %ebx
	movl	%eax, 4(%esp)
.LEHB158:
	call	_Z20tuple_init_field_mapP12tuple_formatP5tuplePj
.LEHE158:
	addl	$52, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 12
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
.L1876:
	.cfi_restore_state
	subl	$1, %edx
	movl	%eax, (%esp)
	je	.L1875
.LEHB159:
	call	_Unwind_Resume
.LEHE159:
.L1875:
	call	__cxa_begin_catch
	movl	%ebx, (%esp)
.LEHB160:
	call	_Z12tuple_deleteP5tuple
	call	__cxa_rethrow
.LEHE160:
.L1877:
	movl	%eax, %ebx
	call	__cxa_end_catch
	movl	%ebx, (%esp)
.LEHB161:
	call	_Unwind_Resume
.LEHE161:
	.cfi_endproc
.LFE201:
	.section	.gcc_except_table
	.align 4
.LLSDA201:
	.byte	0xff
	.byte	0
	.uleb128 .LLSDATT201-.LLSDATTD201
.LLSDATTD201:
	.byte	0x1
	.uleb128 .LLSDACSE201-.LLSDACSB201
.LLSDACSB201:
	.uleb128 .LEHB157-.LFB201
	.uleb128 .LEHE157-.LEHB157
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB158-.LFB201
	.uleb128 .LEHE158-.LEHB158
	.uleb128 .L1876-.LFB201
	.uleb128 0x1
	.uleb128 .LEHB159-.LFB201
	.uleb128 .LEHE159-.LEHB159
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB160-.LFB201
	.uleb128 .LEHE160-.LEHB160
	.uleb128 .L1877-.LFB201
	.uleb128 0
	.uleb128 .LEHB161-.LFB201
	.uleb128 .LEHE161-.LEHB161
	.uleb128 0
	.uleb128 0
.LLSDACSE201:
	.byte	0x1
	.byte	0
	.align 4
	.long	_ZTI9Exception
.LLSDATT201:
	.text
	.size	_Z12tuple_updateP12tuple_formatPFPvS1_jES1_PK5tuplePKcS8_, .-_Z12tuple_updateP12tuple_formatPFPvS1_jES1_PK5tuplePKcS8_
	.section	.rodata.str1.4
	.align 4
.LC37:
	.string	"field_a != NULL && field_b != NULL"
	.text
	.p2align 4,,15
	.globl	_Z13tuple_comparePK5tupleS1_PK7key_def
	.type	_Z13tuple_comparePK5tupleS1_PK7key_def, @function
_Z13tuple_comparePK5tupleS1_PK7key_def:
.LFB204:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$76, %esp
	.cfi_def_cfa_offset 96
	movl	104(%esp), %eax
	movl	96(%esp), %edi
	leal	64(%eax), %ecx
	movl	52(%eax), %eax
	movl	%ecx, 20(%esp)
	leal	(%ecx,%eax,8), %eax
	movzwl	2(%edi), %ecx
	movl	%eax, 24(%esp)
	movl	tuple_formats, %eax
	movl	(%eax,%ecx,4), %edi
	movzwl	(%edi), %edx
	movl	%edi, 28(%esp)
	cmpl	(%eax,%edx,4), %edi
	jne	.L1883
	cmpl	%edx, %ecx
	jne	.L1884
	movl	100(%esp), %ebx
	movzwl	2(%ebx), %ecx
	movl	(%eax,%ecx,4), %esi
	movzwl	(%esi), %edx
	movl	%esi, 32(%esp)
	cmpl	(%eax,%edx,4), %esi
	jne	.L1883
	cmpl	%edx, %ecx
	jne	.L1884
	movl	96(%esp), %eax
	addl	$9, %eax
	movl	%eax, 36(%esp)
	movl	24(%esp), %eax
	cmpl	%eax, 20(%esp)
	jae	.L2045
.L2067:
	movl	20(%esp), %eax
	movl	(%eax), %ebp
	movl	28(%esp), %eax
	cmpl	8(%eax), %ebp
	jae	.L1887
	movl	24(%eax,%ebp,4), %eax
	cmpl	$-2147483648, %eax
	je	.L1887
	movl	96(%esp), %edi
	movl	%ebp, %esi
	movl	(%edi,%eax,4), %ebx
	addl	%edi, %ebx
	addl	$8, %ebx
.L1888:
	movl	32(%esp), %eax
	cmpl	8(%eax), %esi
	jae	.L1949
	movl	24(%eax,%esi,4), %eax
	cmpl	$-2147483648, %eax
	je	.L1949
	movl	100(%esp), %ecx
	movl	(%ecx,%eax,4), %esi
	addl	%ecx, %esi
	movl	%esi, %eax
	addl	$8, %eax
.L1950:
	testl	%eax, %eax
	je	.L2047
	testl	%ebx, %ebx
	je	.L2047
	movl	20(%esp), %edi
	movl	4(%edi), %edx
	cmpl	$1, %edx
	je	.L2013
	cmpl	$3, %edx
	jne	.L2095
	movzbl	(%ebx), %edx
	cmpb	$-39, %dl
	je	.L2030
	.p2align 4,,2
	jbe	.L2096
	cmpb	$-38, %dl
	.p2align 4,,2
	je	.L2033
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L2036
	movl	1(%ebx), %esi
	addl	$5, %ebx
	bswap	%esi
.L2035:
	movzbl	(%eax), %edx
	cmpb	$-39, %dl
	je	.L2037
	jbe	.L2097
	cmpb	$-38, %dl
	je	.L2040
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L2036
	movl	1(%eax), %edi
	addl	$5, %eax
	bswap	%edi
.L2042:
	cmpl	%esi, %edi
	movl	%edi, %edx
	jbe	.L2043
	movl	%esi, %edx
.L2043:
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	%ebx, (%esp)
	call	memcmp
	testl	%eax, %eax
	jne	.L1886
	cmpl	%esi, %edi
	ja	.L2053
	setb	%al
	movzbl	%al, %eax
.L2028:
	testl	%eax, %eax
	jne	.L1886
	addl	$8, 20(%esp)
	movl	20(%esp), %eax
	cmpl	%eax, 24(%esp)
	ja	.L2067
	.p2align 4,,7
	.p2align 3
.L2045:
	xorl	%eax, %eax
	jmp	.L1886
	.p2align 4,,7
	.p2align 3
.L1887:
	movl	96(%esp), %eax
	movl	36(%esp), %edi
	movzbl	8(%eax), %eax
	movl	%edi, 56(%esp)
	cmpb	$-36, %al
	je	.L1890
	ja	.L1891
	leal	112(%eax), %edx
	cmpb	$15, %dl
	ja	.L1991
	andl	$15, %eax
	.p2align 4,,2
	jmp	.L1894
	.p2align 4,,7
	.p2align 3
.L1949:
	movl	100(%esp), %eax
	movl	100(%esp), %edi
	movzbl	8(%eax), %eax
	leal	9(%edi), %ecx
	movl	%ecx, 60(%esp)
	cmpb	$-36, %al
	je	.L1952
	ja	.L1953
	leal	112(%eax), %ecx
	cmpb	$15, %cl
	ja	.L1991
	andl	$15, %eax
.L1956:
	cmpl	%eax, %esi
	jae	.L2047
	xorl	%ecx, %ecx
	testl	%esi, %esi
	movl	60(%esp), %eax
	leal	60(%esp), %edi
	je	.L1959
	movl	%ebx, 40(%esp)
	movl	%ecx, %ebx
.L2068:
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L1960
	movzbl	%cl, %ecx
	jmp	*.L1962(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L1962:
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1961
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1963
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1967
	.long	.L1966
	.long	.L1967
	.long	.L1967
	.long	.L1968
	.long	.L1968
	.long	.L1968
	.long	.L1966
	.long	.L1966
	.long	.L1966
	.long	.L1969
	.long	.L1970
	.long	.L1960
	.long	.L1960
	.long	.L1960
	.long	.L1960
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1966
	.long	.L1966
	.long	.L1966
	.long	.L1966
	.long	.L1966
	.long	.L1964
	.long	.L1964
	.long	.L1964
	.long	.L1963
	.long	.L1963
	.long	.L1961
	.long	.L1961
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.long	.L1971
	.text
	.p2align 4,,7
	.p2align 3
.L1900:
	leal	1(%ebx), %edx
	cmpb	$-36, %al
	movl	%edx, 56(%esp)
	je	.L1930
	ja	.L1931
	leal	112(%eax), %edx
	cmpb	$15, %dl
	jbe	.L2071
	.p2align 4,,7
	.p2align 3
.L1991:
	movl	$_ZZ13mp_array_loadE12__FUNCTION__, 12(%esp)
	movl	$222, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1891:
	cmpb	$-35, %al
	jne	.L1991
	movl	96(%esp), %eax
	movl	96(%esp), %ebx
	movl	9(%eax), %eax
	leal	13(%ebx), %edx
	movl	%edx, 56(%esp)
	bswap	%eax
.L1894:
	cmpl	%eax, %ebp
	jae	.L2048
	xorl	%esi, %esi
	testl	%ebp, %ebp
	movl	56(%esp), %ebx
	je	.L1896
.L2066:
	movzbl	(%ebx), %eax
	movl	%eax, %edx
	addb	$-128, %dl
	js	.L1897
	movzbl	%dl, %edx
	jmp	*.L1899(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L1899:
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1898
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1900
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1904
	.long	.L1966
	.long	.L1904
	.long	.L1904
	.long	.L1905
	.long	.L1905
	.long	.L1905
	.long	.L1966
	.long	.L1966
	.long	.L1966
	.long	.L1906
	.long	.L1907
	.long	.L1897
	.long	.L1897
	.long	.L1897
	.long	.L1897
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1966
	.long	.L1966
	.long	.L1966
	.long	.L1966
	.long	.L1966
	.long	.L1901
	.long	.L1901
	.long	.L1901
	.long	.L1900
	.long	.L1900
	.long	.L1898
	.long	.L1898
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.long	.L1908
	.text
	.p2align 4,,7
	.p2align 3
.L1904:
	addl	$1, %ebx
	movl	%ebx, 56(%esp)
.L1909:
	addl	$1, %esi
	cmpl	%ebp, %esi
	jne	.L2066
.L1896:
	movl	96(%esp), %esi
	movl	4(%esi), %eax
	addl	%esi, %eax
	addl	$8, %eax
	cmpl	%eax, %ebx
	ja	.L1948
	movl	20(%esp), %eax
	movl	(%eax), %esi
	jmp	.L1888
	.p2align 4,,7
	.p2align 3
.L1890:
	movl	96(%esp), %eax
	movl	96(%esp), %esi
	movzwl	9(%eax), %eax
	leal	11(%esi), %edx
	movl	%edx, 56(%esp)
	rolw	$8, %ax
	movzwl	%ax, %eax
	jmp	.L1894
	.p2align 4,,7
	.p2align 3
.L1967:
	addl	$1, %eax
	movl	%eax, 60(%esp)
.L1972:
	addl	$1, %ebx
	cmpl	%esi, %ebx
	jne	.L2068
	movl	40(%esp), %ebx
.L1959:
	movl	100(%esp), %esi
	movl	4(%esi), %edx
	addl	%esi, %edx
	addl	$8, %edx
	cmpl	%edx, %eax
	jbe	.L1950
.L1948:
	call	_ZL15tuple_field_oldPK12tuple_formatPK5tuplej.part.10
	.p2align 4,,7
	.p2align 3
.L1953:
	cmpb	$-35, %al
	jne	.L1991
	movl	100(%esp), %eax
	movl	100(%esp), %edi
	movl	9(%eax), %eax
	leal	13(%edi), %ecx
	movl	%ecx, 60(%esp)
	bswap	%eax
	jmp	.L1956
	.p2align 4,,7
	.p2align 3
.L1966:
	movl	$_ZZ7mp_loadE12__FUNCTION__, 12(%esp)
	movl	$1036, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1907:
	addl	$9, %ebx
	movl	%ebx, 56(%esp)
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L1906:
	addl	$5, %ebx
	movl	%ebx, 56(%esp)
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L1905:
	leal	1(%ebx), %edx
	cmpb	$-59, %al
	movl	%edx, 56(%esp)
	je	.L1945
	cmpb	$-58, %al
	jne	.L2089
.L1946:
	movl	1(%ebx), %eax
	bswap	%eax
	leal	5(%ebx,%eax), %ebx
	movl	%ebx, 56(%esp)
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L1908:
	addl	$48, %eax
	leal	1(%ebx), %edx
	cmpb	$47, %al
	movl	%edx, 56(%esp)
	ja	.L1976
	movzbl	%al, %eax
	jmp	*.L1916(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L1916:
	.long	.L1915
	.long	.L1917
	.long	.L1906
	.long	.L1907
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.long	.L2050
	.text
	.p2align 4,,7
	.p2align 3
.L1901:
	leal	1(%ebx), %edx
	cmpb	$-39, %al
	movl	%edx, 56(%esp)
	je	.L2089
	jbe	.L2098
	cmpb	$-38, %al
	je	.L1945
	cmpb	$-37, %al
	.p2align 4,,7
	je	.L1946
	.p2align 4,,7
	.p2align 3
.L2036:
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$779, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1898:
	leal	1(%ebx), %edx
	cmpb	$-34, %al
	movl	%edx, 56(%esp)
	je	.L1921
	ja	.L1922
	leal	-128(%eax), %edx
	cmpb	$15, %dl
	ja	.L1982
	movl	%eax, %edi
	andl	$15, %edi
	jmp	.L1925
	.p2align 4,,7
	.p2align 3
.L2095:
	movl	$_ZZL19tuple_compare_fieldPPKcS1_10field_typeE12__FUNCTION__, 12(%esp)
	movl	$459, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L1960:
	leal	1(%eax), %ecx
	testb	%dl, %dl
	movl	%ecx, 60(%esp)
	jns	.L2052
	cmpb	$-52, %dl
	je	.L1977
	cmpb	$-51, %dl
	je	.L1979
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L1969
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L1913
	.p2align 4,,7
	.p2align 3
.L1970:
	addl	$9, %eax
	movl	%eax, 60(%esp)
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1969:
	addl	$5, %eax
	movl	%eax, 60(%esp)
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1968:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, 60(%esp)
	je	.L2007
	cmpb	$-58, %dl
	je	.L2008
.L2093:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1971:
	addl	$48, %edx
	leal	1(%eax), %ecx
	cmpb	$47, %dl
	movl	%ecx, 60(%esp)
	ja	.L1976
	movzbl	%dl, %edx
	jmp	*.L1978(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L1978:
	.long	.L1977
	.long	.L1979
	.long	.L1969
	.long	.L1970
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L1976
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.long	.L2052
	.text
	.p2align 4,,7
	.p2align 3
.L1964:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, 60(%esp)
	je	.L2093
	jbe	.L2099
	cmpb	$-38, %dl
	je	.L2007
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L2036
.L2008:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1963:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, 60(%esp)
	je	.L1992
	ja	.L1993
	leal	112(%edx), %eax
	cmpb	$15, %al
	ja	.L1991
	movl	%edx, %eax
	andl	$15, %eax
	movl	%eax, %ecx
.L1996:
	xorl	%ebp, %ebp
	testl	%ecx, %ecx
	je	.L2092
	movl	%ebx, 44(%esp)
	movl	%ebp, %ebx
	movl	%ecx, %ebp
	.p2align 4,,7
	.p2align 3
.L2063:
	movl	%edi, (%esp)
	addl	$1, %ebx
	call	mp_load
	cmpl	%ebp, %ebx
	jne	.L2063
.L2090:
	movl	44(%esp), %ebx
.L2092:
	movl	60(%esp), %eax
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1961:
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, 60(%esp)
	je	.L1983
	ja	.L1984
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L1982
	movl	%edx, %eax
	andl	$15, %eax
	movl	%eax, %ecx
.L1987:
	xorl	%ebp, %ebp
	testl	%ecx, %ecx
	je	.L2092
	movl	%ebx, 44(%esp)
	movl	%ebp, %ebx
	movl	%ecx, %ebp
	.p2align 4,,7
	.p2align 3
.L2062:
	movl	%edi, (%esp)
	addl	$1, %ebx
	call	mp_load
	movl	%edi, (%esp)
	call	mp_load
	cmpl	%ebp, %ebx
	jne	.L2062
	.p2align 4,,3
	jmp	.L2090
	.p2align 4,,7
	.p2align 3
.L1897:
	leal	1(%ebx), %edx
	testb	%al, %al
	movl	%edx, 56(%esp)
	js	.L2100
.L2050:
	movl	%edx, %ebx
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L2100:
	cmpb	$-52, %al
	je	.L1915
	cmpb	$-51, %al
	.p2align 4,,5
	je	.L1917
	cmpb	$-50, %al
	.p2align 4,,5
	je	.L1906
	cmpb	$-49, %al
	.p2align 4,,5
	je	.L1907
.L1913:
	.p2align 4,,7
	call	mp_uint_load.part.6
	.p2align 4,,7
	.p2align 3
.L2089:
	movzbl	1(%ebx), %eax
	leal	2(%ebx,%eax), %ebx
	movl	%ebx, 56(%esp)
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L2052:
	movl	%ecx, %eax
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1945:
	movzwl	1(%ebx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%ebx,%eax), %ebx
	movl	%ebx, 56(%esp)
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L1922:
	cmpb	$-33, %al
	je	.L1924
.L1982:
	movl	$_ZZ11mp_map_loadE12__FUNCTION__, 12(%esp)
	movl	$304, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L2013:
	movzbl	(%ebx), %ecx
	testb	%cl, %cl
	js	.L2015
.L2094:
	xorl	%ebx, %ebx
.L2016:
	movzbl	(%eax), %edx
	testb	%dl, %dl
	js	.L2020
	movzbl	%dl, %esi
	xorl	%edi, %edi
.L2021:
	cmpl	%edi, %ebx
	jb	.L2053
	jbe	.L2101
.L2055:
	cmpl	%edi, %ebx
	movl	$1, %eax
	ja	.L2028
	.p2align 4,,4
	jb	.L2027
	cmpl	%esi, %ecx
	.p2align 4,,2
	ja	.L2028
.L2027:
	xorl	%eax, %eax
	.p2align 4,,7
	jmp	.L2028
	.p2align 4,,7
	.p2align 3
.L1952:
	movl	100(%esp), %eax
	movl	100(%esp), %edi
	movzwl	9(%eax), %eax
	leal	11(%edi), %ecx
	movl	%ecx, 60(%esp)
	rolw	$8, %ax
	movzwl	%ax, %eax
	jmp	.L1956
	.p2align 4,,7
	.p2align 3
.L2101:
	cmpl	%esi, %ecx
	jae	.L2055
	.p2align 4,,7
	.p2align 3
.L2053:
	movl	$-1, %eax
.L1886:
	addl	$76, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L1931:
	.cfi_restore_state
	cmpb	$-35, %al
	jne	.L1991
	movl	1(%ebx), %edi
	addl	$5, %ebx
	movl	%ebx, 56(%esp)
	bswap	%edi
.L1934:
	xorl	%ebx, %ebx
	testl	%edi, %edi
	je	.L2088
	.p2align 4,,7
	.p2align 3
.L2061:
	leal	56(%esp), %eax
	addl	$1, %ebx
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L2061
.L2088:
	movl	56(%esp), %ebx
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L2015:
	cmpb	$-52, %cl
	je	.L2102
	cmpb	$-51, %cl
	je	.L2103
	cmpb	$-50, %cl
	.p2align 4,,2
	je	.L2104
	cmpb	$-49, %cl
	.p2align 4,,2
	jne	.L1913
	movl	1(%ebx), %edx
	movl	5(%ebx), %esi
	bswap	%edx
	movl	%edx, %ebx
	bswap	%esi
	movl	%esi, %ecx
	jmp	.L2016
	.p2align 4,,7
	.p2align 3
.L1924:
	movl	1(%ebx), %edi
	addl	$5, %ebx
	movl	%ebx, 56(%esp)
	bswap	%edi
.L1925:
	xorl	%ebx, %ebx
	testl	%edi, %edi
	je	.L2088
	.p2align 4,,7
	.p2align 3
.L2060:
	leal	56(%esp), %eax
	addl	$1, %ebx
	movl	%eax, (%esp)
	call	mp_load
	leal	56(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%edi, %ebx
	jne	.L2060
	jmp	.L2088
	.p2align 4,,7
	.p2align 3
.L2071:
	movl	%eax, %edi
	andl	$15, %edi
	.p2align 4,,4
	jmp	.L1934
	.p2align 4,,7
	.p2align 3
.L1984:
	cmpb	$-33, %dl
	jne	.L1982
	movl	1(%eax), %ecx
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%ecx
	jmp	.L1987
	.p2align 4,,7
	.p2align 3
.L1993:
	cmpb	$-35, %dl
	jne	.L1991
	movl	1(%eax), %ecx
	addl	$5, %eax
	movl	%eax, 60(%esp)
	bswap	%ecx
	jmp	.L1996
	.p2align 4,,7
	.p2align 3
.L2033:
	movzwl	1(%ebx), %esi
	addl	$3, %ebx
	rolw	$8, %si
	movzwl	%si, %esi
	jmp	.L2035
	.p2align 4,,7
	.p2align 3
.L2099:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L2036
	movl	%edx, %eax
	andl	$31, %eax
	addl	%ecx, %eax
	movl	%eax, 60(%esp)
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1915:
	addl	$2, %ebx
	movl	%ebx, 56(%esp)
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L1917:
	addl	$3, %ebx
	movl	%ebx, 56(%esp)
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L1977:
	addl	$2, %eax
	movl	%eax, 60(%esp)
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1979:
	addl	$3, %eax
	movl	%eax, 60(%esp)
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1976:
	movl	$_ZZ11mp_int_loadE12__FUNCTION__, 12(%esp)
	movl	$572, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L2020:
	cmpb	$-52, %dl
	je	.L2105
	cmpb	$-51, %dl
	je	.L2106
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L2107
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L1913
	movl	1(%eax), %edx
	movl	5(%eax), %eax
	bswap	%edx
	movl	%edx, %edi
	bswap	%eax
	movl	%eax, %esi
	jmp	.L2021
	.p2align 4,,7
	.p2align 3
.L2098:
	leal	96(%eax), %ecx
	cmpb	$31, %cl
	ja	.L2036
	andl	$31, %eax
	leal	(%edx,%eax), %ebx
	movl	%ebx, 56(%esp)
	jmp	.L1909
	.p2align 4,,7
	.p2align 3
.L2096:
	leal	96(%edx), %ecx
	cmpb	$31, %cl
	ja	.L2036
	movl	%edx, %esi
	addl	$1, %ebx
	andl	$31, %esi
	jmp	.L2035
	.p2align 4,,7
	.p2align 3
.L2007:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 60(%esp)
	jmp	.L1972
	.p2align 4,,7
	.p2align 3
.L1921:
	movzwl	1(%ebx), %edi
	addl	$3, %ebx
	movl	%ebx, 56(%esp)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L1925
	.p2align 4,,7
	.p2align 3
.L1930:
	movzwl	1(%ebx), %edi
	addl	$3, %ebx
	movl	%ebx, 56(%esp)
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L1934
	.p2align 4,,7
	.p2align 3
.L2097:
	leal	96(%edx), %ecx
	cmpb	$31, %cl
	ja	.L2036
	movl	%edx, %edi
	addl	$1, %eax
	andl	$31, %edi
	jmp	.L2042
	.p2align 4,,7
	.p2align 3
.L2030:
	movzbl	1(%ebx), %esi
	addl	$2, %ebx
	jmp	.L2035
	.p2align 4,,7
	.p2align 3
.L2037:
	movzbl	1(%eax), %edi
	addl	$2, %eax
	jmp	.L2042
	.p2align 4,,7
	.p2align 3
.L2040:
	movzwl	1(%eax), %edi
	addl	$3, %eax
	rolw	$8, %di
	movzwl	%di, %edi
	jmp	.L2042
	.p2align 4,,7
	.p2align 3
.L1983:
	movzwl	1(%eax), %ebp
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %bp
	movzwl	%bp, %eax
	movl	%eax, %ecx
	jmp	.L1987
	.p2align 4,,7
	.p2align 3
.L1992:
	movzwl	1(%eax), %ebp
	addl	$3, %eax
	movl	%eax, 60(%esp)
	rolw	$8, %bp
	movzwl	%bp, %eax
	movl	%eax, %ecx
	jmp	.L1996
.L2105:
	movzbl	1(%eax), %esi
	xorl	%edi, %edi
	jmp	.L2021
.L2102:
	movzbl	1(%ebx), %ecx
	jmp	.L2094
.L2106:
	movzwl	1(%eax), %esi
	xorl	%edi, %edi
	rolw	$8, %si
	movzwl	%si, %esi
	jmp	.L2021
.L2103:
	movzwl	1(%ebx), %ecx
	xorl	%ebx, %ebx
	rolw	$8, %cx
	movzwl	%cx, %ecx
	jmp	.L2016
.L2104:
	movl	1(%ebx), %ecx
	xorl	%ebx, %ebx
	bswap	%ecx
	jmp	.L2016
.L2107:
	movl	1(%eax), %esi
	xorl	%edi, %edi
	bswap	%esi
	jmp	.L2021
.L1884:
	call	_ZL12tuple_formatPK5tuple.part.3
.L1883:
	call	_ZL15tuple_format_idP12tuple_format.part.2
.L2048:
	movl	%ebp, %esi
	xorl	%ebx, %ebx
	jmp	.L1888
.L2047:
	movl	$_ZZ13tuple_comparePK5tupleS1_PK7key_defE12__FUNCTION__, 12(%esp)
	movl	$486, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$.LC37, (%esp)
	call	assert_fail
	.cfi_endproc
.LFE204:
	.size	_Z13tuple_comparePK5tupleS1_PK7key_def, .-_Z13tuple_comparePK5tupleS1_PK7key_def
	.p2align 4,,15
	.globl	_Z17tuple_compare_dupPK5tupleS1_PK7key_def
	.type	_Z17tuple_compare_dupPK5tupleS1_PK7key_def, @function
_Z17tuple_compare_dupPK5tupleS1_PK7key_def:
.LFB205:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	subl	$20, %esp
	.cfi_def_cfa_offset 32
	movl	32(%esp), %esi
	movl	36(%esp), %ebx
	movl	40(%esp), %eax
	movl	%esi, (%esp)
	movl	%ebx, 4(%esp)
	movl	%eax, 8(%esp)
	call	_Z13tuple_comparePK5tupleS1_PK7key_def
	testl	%eax, %eax
	jne	.L2109
	xorl	%eax, %eax
	cmpl	%ebx, %esi
	seta	%al
	sbbl	%edx, %edx
	orl	%edx, %eax
.L2109:
	addl	$20, %esp
	.cfi_def_cfa_offset 12
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE205:
	.size	_Z17tuple_compare_dupPK5tupleS1_PK7key_def, .-_Z17tuple_compare_dupPK5tupleS1_PK7key_def
	.p2align 4,,15
	.globl	_Z22tuple_compare_with_keyPK5tuplePKcPK7key_def
	.type	_Z22tuple_compare_with_keyPK5tuplePKcPK7key_def, @function
_Z22tuple_compare_with_keyPK5tuplePKcPK7key_def:
.LFB206:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$92, %esp
	.cfi_def_cfa_offset 112
	movl	116(%esp), %eax
	movl	120(%esp), %ecx
	testl	%eax, %eax
	je	.L2126
	movzbl	(%eax), %edx
	cmpb	$-36, %dl
	je	.L2116
	jbe	.L2418
	cmpb	$-35, %dl
	.p2align 4,,2
	jne	.L2307
	movl	1(%eax), %edx
	addl	$5, %eax
	movl	%eax, 24(%esp)
	bswap	%edx
.L2120:
	leal	64(%ecx), %ebp
	movl	52(%ecx), %ecx
	leal	0(,%edx,8), %eax
	cmpl	%edx, %ecx
	ja	.L2122
	leal	0(,%ecx,8), %eax
.L2122:
	addl	%ebp, %eax
	movl	tuple_formats, %ecx
	movl	%eax, 20(%esp)
	movl	112(%esp), %eax
	movzwl	2(%eax), %edx
	movl	(%ecx,%edx,4), %edi
	movzwl	(%edi), %eax
	cmpl	(%ecx,%eax,4), %edi
	jne	.L2419
	cmpl	%eax, %edx
	jne	.L2124
	movl	112(%esp), %eax
	addl	$9, %eax
	cmpl	20(%esp), %ebp
	movl	%eax, 28(%esp)
	jae	.L2126
.L2390:
	movl	0(%ebp), %esi
	cmpl	8(%edi), %esi
	jae	.L2127
	movl	24(%edi,%esi,4), %eax
	cmpl	$-2147483648, %eax
	je	.L2127
	movl	112(%esp), %ebx
	movl	(%ebx,%eax,4), %esi
	addl	%ebx, %esi
	movl	%esi, %eax
	addl	$8, %eax
.L2128:
	movl	4(%ebp), %edx
	cmpl	$1, %edx
	je	.L2327
	cmpl	$3, %edx
	jne	.L2420
	movzbl	(%eax), %edx
	cmpb	$-39, %dl
	je	.L2344
	.p2align 4,,2
	jbe	.L2421
	cmpb	$-38, %dl
	.p2align 4,,2
	je	.L2347
	cmpb	$-37, %dl
	.p2align 4,,5
	jne	.L2350
	movl	1(%eax), %esi
	addl	$5, %eax
	bswap	%esi
.L2349:
	movl	24(%esp), %ecx
	movzbl	(%ecx), %ebx
	cmpb	$-39, %bl
	je	.L2351
	jbe	.L2422
	cmpb	$-38, %bl
	je	.L2354
	cmpb	$-37, %bl
	.p2align 4,,5
	jne	.L2350
	movl	24(%esp), %ecx
	movl	1(%ecx), %ebx
	addl	$5, %ecx
	bswap	%ebx
	leal	(%ecx,%ebx), %edx
	movl	%edx, 24(%esp)
.L2356:
	cmpl	%esi, %ebx
	movl	%ebx, %edx
	jbe	.L2357
	movl	%esi, %edx
.L2357:
	movl	%edx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	memcmp
	testl	%eax, %eax
	jne	.L2342
	xorl	%eax, %eax
	cmpl	%esi, %ebx
	setb	%al
	cmpl	%ebx, %esi
	sbbl	%edx, %edx
	orl	%edx, %eax
	jmp	.L2342
	.p2align 4,,7
	.p2align 3
.L2418:
	leal	112(%edx), %ebx
	cmpb	$15, %bl
	ja	.L2307
	addl	$1, %eax
	andl	$15, %edx
	movl	%eax, 24(%esp)
	jmp	.L2120
	.p2align 4,,7
	.p2align 3
.L2307:
	movl	$_ZZ13mp_array_loadE12__FUNCTION__, 12(%esp)
	movl	$222, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L2425:
	ja	.L2365
	cmpl	%eax, %ebx
	jb	.L2363
.L2365:
	cmpl	%edx, %esi
	movl	$1, %ecx
	.p2align 4,,2
	ja	.L2340
	.p2align 4,,2
	jb	.L2341
	cmpl	%eax, %ebx
	.p2align 4,,2
	ja	.L2340
.L2341:
	xorl	%ecx, %ecx
.L2340:
	movl	%ecx, %eax
.L2342:
	testl	%eax, %eax
	.p2align 4,,3
	jne	.L2114
	addl	$8, %ebp
	cmpl	%ebp, 20(%esp)
	ja	.L2390
	.p2align 4,,7
	.p2align 3
.L2126:
	xorl	%eax, %eax
.L2114:
	addl	$92, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,7
	.p2align 3
.L2127:
	.cfi_restore_state
	movl	112(%esp), %eax
	movl	28(%esp), %ecx
	movzbl	8(%eax), %eax
	movl	%ecx, 76(%esp)
	cmpb	$-36, %al
	je	.L2130
	ja	.L2131
	leal	112(%eax), %edx
	cmpb	$15, %dl
	ja	.L2307
	andl	$15, %eax
.L2134:
	cmpl	%eax, %esi
	jae	.L2360
	xorl	%ebx, %ebx
	testl	%esi, %esi
	movl	76(%esp), %eax
	je	.L2136
	movl	%ebp, 32(%esp)
	movl	%esi, %ebp
	movl	%edi, 36(%esp)
	movl	%ebx, %edi
.L2389:
	movzbl	(%eax), %ebx
	movl	%ebx, %edx
	addb	$-128, %dl
	js	.L2137
	movzbl	%dl, %edx
	jmp	*.L2139(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L2139:
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2138
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2140
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2144
	.long	.L2143
	.long	.L2144
	.long	.L2144
	.long	.L2145
	.long	.L2145
	.long	.L2145
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2146
	.long	.L2147
	.long	.L2137
	.long	.L2137
	.long	.L2137
	.long	.L2137
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2141
	.long	.L2141
	.long	.L2141
	.long	.L2140
	.long	.L2140
	.long	.L2138
	.long	.L2138
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.long	.L2148
	.text
	.p2align 4,,7
	.p2align 3
.L2144:
	addl	$1, %eax
	movl	%eax, 76(%esp)
.L2149:
	addl	$1, %edi
	cmpl	%ebp, %edi
	jne	.L2389
	movl	32(%esp), %ebp
	movl	36(%esp), %edi
.L2136:
	movl	112(%esp), %esi
	movl	4(%esi), %edx
	addl	%esi, %edx
	addl	$8, %edx
	cmpl	%edx, %eax
	jbe	.L2128
	call	_ZL15tuple_field_oldPK12tuple_formatPK5tuplej.part.10
	.p2align 4,,7
	.p2align 3
.L2147:
	addl	$9, %eax
	movl	%eax, 76(%esp)
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2143:
	movl	$_ZZ7mp_loadE12__FUNCTION__, 12(%esp)
	movl	$1036, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L2146:
	addl	$5, %eax
	movl	%eax, 76(%esp)
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2145:
	leal	1(%eax), %edx
	cmpb	$-59, %bl
	movl	%edx, 76(%esp)
	je	.L2323
	cmpb	$-58, %bl
	je	.L2324
.L2417:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2140:
	leal	1(%eax), %edx
	cmpb	$-36, %bl
	movl	%edx, 76(%esp)
	je	.L2308
	ja	.L2309
	leal	112(%ebx), %eax
	cmpb	$15, %al
	ja	.L2307
	andl	$15, %ebx
.L2312:
	xorl	%esi, %esi
	testl	%ebx, %ebx
	je	.L2416
	.p2align 4,,7
	.p2align 3
.L2381:
	leal	76(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %esi
	jne	.L2381
.L2416:
	movl	76(%esp), %eax
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2138:
	leal	1(%eax), %edx
	cmpb	$-34, %bl
	movl	%edx, 76(%esp)
	je	.L2161
	ja	.L2162
	leal	-128(%ebx), %eax
	cmpb	$15, %al
	ja	.L2262
	movl	%ebx, %eax
	andl	$15, %eax
	movl	%eax, 40(%esp)
.L2165:
	movl	40(%esp), %eax
	xorl	%esi, %esi
	testl	%eax, %eax
	je	.L2416
	movl	%ebp, 44(%esp)
.L2380:
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	movl	76(%esp), %eax
	movzbl	(%eax), %ebx
	movl	%ebx, %edx
	addb	$-128, %dl
	js	.L2167
	movzbl	%dl, %edx
	jmp	*.L2169(,%edx,4)
	.section	.rodata
	.align 4
	.align 4
.L2169:
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2168
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2170
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2174
	.long	.L2143
	.long	.L2174
	.long	.L2174
	.long	.L2175
	.long	.L2175
	.long	.L2175
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2176
	.long	.L2177
	.long	.L2167
	.long	.L2167
	.long	.L2167
	.long	.L2167
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2171
	.long	.L2171
	.long	.L2171
	.long	.L2170
	.long	.L2170
	.long	.L2168
	.long	.L2168
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.long	.L2178
	.text
	.p2align 4,,7
	.p2align 3
.L2148:
	addl	$48, %ebx
	leal	1(%eax), %edx
	cmpb	$47, %bl
	movl	%edx, 76(%esp)
	ja	.L2256
	movzbl	%bl, %ebx
	jmp	*.L2156(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L2156:
	.long	.L2155
	.long	.L2157
	.long	.L2146
	.long	.L2147
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.long	.L2362
	.text
	.p2align 4,,7
	.p2align 3
.L2141:
	leal	1(%eax), %edx
	cmpb	$-39, %bl
	movl	%edx, 76(%esp)
	je	.L2417
	jbe	.L2423
	cmpb	$-38, %bl
	je	.L2323
	cmpb	$-37, %bl
	.p2align 4,,5
	jne	.L2350
.L2324:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2137:
	leal	1(%eax), %edx
	testb	%bl, %bl
	movl	%edx, 76(%esp)
	js	.L2424
.L2362:
	movl	%edx, %eax
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2116:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 24(%esp)
	rolw	$8, %dx
	movzwl	%dx, %edx
	jmp	.L2120
	.p2align 4,,7
	.p2align 3
.L2131:
	cmpb	$-35, %al
	jne	.L2307
	movl	112(%esp), %eax
	movl	112(%esp), %ecx
	movl	9(%eax), %eax
	leal	13(%ecx), %edx
	movl	%edx, 76(%esp)
	bswap	%eax
	jmp	.L2134
	.p2align 4,,7
	.p2align 3
.L2327:
	movzbl	(%eax), %edx
	testb	%dl, %dl
	js	.L2329
	movzbl	%dl, %esi
	movl	%esi, %ebx
	xorl	%esi, %esi
.L2330:
	movl	24(%esp), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	js	.L2334
	addl	$1, 24(%esp)
	xorl	%edx, %edx
.L2335:
	cmpl	%edx, %esi
	jae	.L2425
.L2363:
	movl	$-1, %eax
	jmp	.L2114
	.p2align 4,,7
	.p2align 3
.L2420:
	movl	$_ZZL19tuple_compare_fieldPPKcS1_10field_typeE12__FUNCTION__, 12(%esp)
	movl	$459, 8(%esp)
	movl	$.LC22, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L2130:
	movl	112(%esp), %eax
	movl	112(%esp), %ecx
	movzwl	9(%eax), %eax
	leal	11(%ecx), %edx
	movl	%edx, 76(%esp)
	rolw	$8, %ax
	movzwl	%ax, %eax
	jmp	.L2134
	.p2align 4,,7
	.p2align 3
.L2334:
	cmpb	$-52, %al
	je	.L2426
	cmpb	$-51, %al
	je	.L2427
	cmpb	$-50, %al
	.p2align 4,,5
	je	.L2428
	cmpb	$-49, %al
	.p2align 4,,5
	jne	.L2153
	movl	24(%esp), %eax
	addl	$9, 24(%esp)
	movl	1(%eax), %ecx
	movl	5(%eax), %eax
	movl	%ecx, 32(%esp)
	movl	%eax, %ecx
	bswap	%ecx
	movl	%ecx, %eax
	movl	32(%esp), %ecx
	bswap	%ecx
	movl	%ecx, %edx
	jmp	.L2335
	.p2align 4,,7
	.p2align 3
.L2329:
	cmpb	$-52, %dl
	je	.L2429
	cmpb	$-51, %dl
	je	.L2430
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L2431
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L2153
	movl	1(%eax), %edx
	movl	5(%eax), %eax
	bswap	%edx
	movl	%edx, %esi
	bswap	%eax
	movl	%eax, %ebx
	jmp	.L2330
	.p2align 4,,7
	.p2align 3
.L2162:
	cmpb	$-33, %bl
	jne	.L2262
	movl	1(%eax), %esi
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%esi
	movl	%esi, 40(%esp)
	jmp	.L2165
	.p2align 4,,7
	.p2align 3
.L2309:
	cmpb	$-35, %bl
	jne	.L2307
	movl	1(%eax), %ebx
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%ebx
	jmp	.L2312
	.p2align 4,,7
	.p2align 3
.L2174:
	addl	$1, %eax
	movl	%eax, 76(%esp)
.L2181:
	addl	$1, %esi
	cmpl	40(%esp), %esi
	jne	.L2380
	movl	44(%esp), %ebp
	jmp	.L2416
	.p2align 4,,7
	.p2align 3
.L2424:
	cmpb	$-52, %bl
	je	.L2155
	cmpb	$-51, %bl
	je	.L2157
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L2146
	cmpb	$-49, %bl
	.p2align 4,,2
	je	.L2147
.L2153:
	.p2align 4,,5
	call	mp_uint_load.part.6
	.p2align 4,,7
	.p2align 3
.L2347:
	movzwl	1(%eax), %esi
	addl	$3, %eax
	rolw	$8, %si
	movzwl	%si, %esi
	jmp	.L2349
	.p2align 4,,7
	.p2align 3
.L2423:
	leal	96(%ebx), %eax
	cmpb	$31, %al
	ja	.L2350
	movl	%ebx, %eax
	andl	$31, %eax
	addl	%edx, %eax
	movl	%eax, 76(%esp)
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2167:
	leal	1(%eax), %edx
	testb	%bl, %bl
	movl	%edx, 76(%esp)
	jns	.L2181
	cmpb	$-52, %bl
	je	.L2185
	cmpb	$-51, %bl
	je	.L2187
	cmpb	$-50, %bl
	.p2align 4,,2
	je	.L2176
	cmpb	$-49, %bl
	.p2align 4,,2
	jne	.L2153
	.p2align 4,,7
	.p2align 3
.L2177:
	addl	$9, %eax
	movl	%eax, 76(%esp)
	jmp	.L2181
	.p2align 4,,7
	.p2align 3
.L2176:
	addl	$5, %eax
	movl	%eax, 76(%esp)
	jmp	.L2181
	.p2align 4,,7
	.p2align 3
.L2175:
	leal	1(%eax), %edx
	cmpb	$-59, %bl
	movl	%edx, 76(%esp)
	je	.L2303
	cmpb	$-58, %bl
	jne	.L2415
.L2304:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2181
	.p2align 4,,7
	.p2align 3
.L2178:
	addl	$48, %ebx
	leal	1(%eax), %edx
	cmpb	$47, %bl
	movl	%edx, 76(%esp)
	ja	.L2256
	movzbl	%bl, %ebx
	jmp	*.L2186(,%ebx,4)
	.section	.rodata
	.align 4
	.align 4
.L2186:
	.long	.L2185
	.long	.L2187
	.long	.L2176
	.long	.L2177
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.long	.L2181
	.text
	.p2align 4,,7
	.p2align 3
.L2168:
	leal	1(%eax), %edx
	cmpb	$-34, %bl
	movl	%edx, 76(%esp)
	je	.L2191
	ja	.L2192
	leal	-128(%ebx), %eax
	cmpb	$15, %al
	ja	.L2262
	andl	$15, %ebx
.L2195:
	testl	%ebx, %ebx
	je	.L2181
	xorl	%ebp, %ebp
	.p2align 4,,7
	.p2align 3
.L2196:
	leal	76(%esp), %eax
	addl	$1, %ebp
	movl	%eax, (%esp)
	call	mp_load
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %ebp
	jne	.L2196
	jmp	.L2181
	.p2align 4,,7
	.p2align 3
.L2171:
	leal	1(%eax), %edx
	cmpb	$-39, %bl
	movl	%edx, 76(%esp)
	je	.L2415
	jbe	.L2432
	cmpb	$-38, %bl
	je	.L2303
	cmpb	$-37, %bl
	.p2align 4,,5
	je	.L2304
	.p2align 4,,7
	.p2align 3
.L2350:
	movl	$_ZZ11mp_str_loadE12__FUNCTION__, 12(%esp)
	movl	$779, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L2170:
	leal	1(%eax), %edx
	cmpb	$-36, %bl
	movl	%edx, 76(%esp)
	je	.L2198
	ja	.L2199
	leal	112(%ebx), %eax
	cmpb	$15, %al
	ja	.L2307
	movl	%ebx, %eax
	andl	$15, %eax
	movl	%eax, 48(%esp)
.L2202:
	movl	48(%esp), %eax
	testl	%eax, %eax
	je	.L2181
	xorl	%ebx, %ebx
	movl	%esi, 52(%esp)
.L2295:
	movl	76(%esp), %edx
	movzbl	(%edx), %eax
	movl	%eax, %ecx
	addb	$-128, %cl
	js	.L2203
	movzbl	%cl, %ecx
	jmp	*.L2205(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L2205:
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2204
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2206
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2210
	.long	.L2143
	.long	.L2210
	.long	.L2210
	.long	.L2211
	.long	.L2211
	.long	.L2211
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2212
	.long	.L2213
	.long	.L2203
	.long	.L2203
	.long	.L2203
	.long	.L2203
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2207
	.long	.L2207
	.long	.L2207
	.long	.L2206
	.long	.L2206
	.long	.L2204
	.long	.L2204
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.long	.L2214
	.text
	.p2align 4,,7
	.p2align 3
.L2155:
	addl	$2, %eax
	movl	%eax, 76(%esp)
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2157:
	addl	$3, %eax
	movl	%eax, 76(%esp)
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2429:
	movzbl	1(%eax), %esi
	movl	%esi, %ebx
	xorl	%esi, %esi
	jmp	.L2330
	.p2align 4,,7
	.p2align 3
.L2426:
	movl	24(%esp), %eax
	xorl	%edx, %edx
	addl	$2, 24(%esp)
	movzbl	1(%eax), %eax
	jmp	.L2335
.L2250:
	leal	1(%eax), %ecx
	cmpb	$-46, %dl
	movl	%ecx, 76(%esp)
	je	.L2248
	jbe	.L2433
	cmpb	$-45, %dl
	je	.L2249
	cmpb	$-32, %dl
	.p2align 4,,5
	jae	.L2253
	.p2align 4,,7
	.p2align 3
.L2256:
	movl	$_ZZ11mp_int_loadE12__FUNCTION__, 12(%esp)
	movl	$572, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
.L2210:
	addl	$1, %edx
	movl	%edx, 76(%esp)
.L2217:
	addl	$1, %ebx
	cmpl	48(%esp), %ebx
	jne	.L2295
	movl	52(%esp), %esi
	jmp	.L2181
.L2203:
	leal	1(%edx), %ecx
	testb	%al, %al
	movl	%ecx, 76(%esp)
	jns	.L2217
	cmpb	$-52, %al
	je	.L2221
	cmpb	$-51, %al
	je	.L2223
	cmpb	$-50, %al
	.p2align 4,,5
	je	.L2212
	cmpb	$-49, %al
	.p2align 4,,5
	jne	.L2153
.L2213:
	addl	$9, %edx
	movl	%edx, 76(%esp)
	jmp	.L2217
.L2212:
	addl	$5, %edx
	movl	%edx, 76(%esp)
	jmp	.L2217
.L2214:
	addl	$48, %eax
	leal	1(%edx), %ecx
	cmpb	$47, %al
	movl	%ecx, 76(%esp)
	ja	.L2256
	movzbl	%al, %eax
	jmp	*.L2222(,%eax,4)
	.section	.rodata
	.align 4
	.align 4
.L2222:
	.long	.L2221
	.long	.L2223
	.long	.L2212
	.long	.L2213
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2256
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.long	.L2217
	.text
.L2211:
	leal	1(%edx), %ecx
	cmpb	$-59, %al
	movl	%ecx, 76(%esp)
	je	.L2293
	cmpb	$-58, %al
	jne	.L2414
.L2294:
	movl	1(%edx), %eax
	bswap	%eax
	leal	5(%edx,%eax), %eax
	movl	%eax, 76(%esp)
	jmp	.L2217
.L2207:
	leal	1(%edx), %ecx
	cmpb	$-39, %al
	movl	%ecx, 76(%esp)
	je	.L2414
	jbe	.L2434
	cmpb	$-38, %al
	je	.L2293
	cmpb	$-37, %al
	.p2align 4,,7
	je	.L2294
	.p2align 4,,7
	jmp	.L2350
.L2206:
	leal	1(%edx), %ecx
	cmpb	$-36, %al
	movl	%ecx, 76(%esp)
	je	.L2234
	.p2align 4,,2
	ja	.L2235
	leal	112(%eax), %edx
	cmpb	$15, %dl
	ja	.L2307
	andl	$15, %eax
	movl	%eax, 56(%esp)
.L2238:
	movl	56(%esp), %eax
	testl	%eax, %eax
	je	.L2217
	xorl	%ebp, %ebp
	movl	%ebx, 60(%esp)
.L2285:
	movl	76(%esp), %eax
	movzbl	(%eax), %edx
	movl	%edx, %ecx
	addb	$-128, %cl
	js	.L2239
	movzbl	%cl, %ecx
	jmp	*.L2241(,%ecx,4)
	.section	.rodata
	.align 4
	.align 4
.L2241:
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2240
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2242
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2246
	.long	.L2143
	.long	.L2246
	.long	.L2246
	.long	.L2247
	.long	.L2247
	.long	.L2247
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2248
	.long	.L2249
	.long	.L2239
	.long	.L2239
	.long	.L2239
	.long	.L2239
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2143
	.long	.L2243
	.long	.L2243
	.long	.L2243
	.long	.L2242
	.long	.L2242
	.long	.L2240
	.long	.L2240
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.long	.L2250
	.text
.L2204:
	leal	1(%edx), %ecx
	cmpb	$-34, %al
	movl	%ecx, 76(%esp)
	je	.L2227
	ja	.L2228
	leal	-128(%eax), %edx
	cmpb	$15, %dl
	ja	.L2262
	movl	%eax, %ebp
	andl	$15, %ebp
.L2231:
	testl	%ebp, %ebp
	je	.L2217
	xorl	%esi, %esi
	.p2align 4,,7
	.p2align 3
.L2232:
	leal	76(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebp, %esi
	jne	.L2232
	jmp	.L2217
.L2185:
	addl	$2, %eax
	movl	%eax, 76(%esp)
	.p2align 4,,2
	jmp	.L2181
.L2187:
	addl	$3, %eax
	movl	%eax, 76(%esp)
	jmp	.L2181
.L2246:
	addl	$1, %eax
	movl	%eax, 76(%esp)
.L2253:
	addl	$1, %ebp
	cmpl	56(%esp), %ebp
	jne	.L2285
	movl	60(%esp), %ebx
	jmp	.L2217
.L2239:
	leal	1(%eax), %ecx
	testb	%dl, %dl
	movl	%ecx, 76(%esp)
	jns	.L2253
	cmpb	$-52, %dl
	je	.L2259
	cmpb	$-51, %dl
	je	.L2260
	cmpb	$-50, %dl
	.p2align 4,,2
	je	.L2248
	cmpb	$-49, %dl
	.p2align 4,,2
	jne	.L2153
.L2249:
	addl	$9, %eax
	movl	%eax, 76(%esp)
	jmp	.L2253
.L2248:
	addl	$5, %eax
	movl	%eax, 76(%esp)
	jmp	.L2253
.L2247:
	leal	1(%eax), %ecx
	cmpb	$-59, %dl
	movl	%ecx, 76(%esp)
	je	.L2283
	cmpb	$-58, %dl
	jne	.L2413
.L2284:
	movl	1(%eax), %edx
	bswap	%edx
	leal	5(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2253
.L2243:
	leal	1(%eax), %ecx
	cmpb	$-39, %dl
	movl	%ecx, 76(%esp)
	je	.L2413
	jbe	.L2435
	cmpb	$-38, %dl
	je	.L2283
	cmpb	$-37, %dl
	.p2align 4,,5
	je	.L2284
	.p2align 4,,5
	jmp	.L2350
.L2240:
	leal	1(%eax), %ecx
	cmpb	$-34, %dl
	movl	%ecx, 76(%esp)
	je	.L2263
	ja	.L2264
	leal	-128(%edx), %eax
	cmpb	$15, %al
	ja	.L2262
	movl	%edx, %esi
	andl	$15, %esi
.L2267:
	testl	%esi, %esi
	je	.L2253
	xorl	%ebx, %ebx
.L2268:
	leal	76(%esp), %eax
	addl	$1, %ebx
	movl	%eax, (%esp)
	call	mp_load
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%esi, %ebx
	jne	.L2268
	jmp	.L2253
.L2242:
	leal	1(%eax), %ecx
	cmpb	$-36, %dl
	movl	%ecx, 76(%esp)
	je	.L2270
	ja	.L2271
	leal	112(%edx), %eax
	cmpb	$15, %al
	ja	.L2307
	movl	%edx, %ebx
	andl	$15, %ebx
.L2274:
	testl	%ebx, %ebx
	je	.L2253
	xorl	%esi, %esi
.L2275:
	leal	76(%esp), %eax
	addl	$1, %esi
	movl	%eax, (%esp)
	call	mp_load
	cmpl	%ebx, %esi
	jne	.L2275
	jmp	.L2253
.L2223:
	addl	$3, %edx
	movl	%edx, 76(%esp)
	.p2align 4,,2
	jmp	.L2217
.L2221:
	addl	$2, %edx
	movl	%edx, 76(%esp)
	jmp	.L2217
	.p2align 4,,7
	.p2align 3
.L2421:
	leal	96(%edx), %ecx
	cmpb	$31, %cl
	ja	.L2350
	movl	%edx, %esi
	addl	$1, %eax
	andl	$31, %esi
	jmp	.L2349
	.p2align 4,,7
	.p2align 3
.L2323:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2149
	.p2align 4,,7
	.p2align 3
.L2422:
	leal	96(%ebx), %edx
	cmpb	$31, %dl
	ja	.L2350
	movl	24(%esp), %ecx
	andl	$31, %ebx
	addl	$1, %ecx
	leal	(%ecx,%ebx), %edx
	movl	%edx, 24(%esp)
	jmp	.L2356
	.p2align 4,,7
	.p2align 3
.L2344:
	movzbl	1(%eax), %esi
	addl	$2, %eax
	jmp	.L2349
	.p2align 4,,7
	.p2align 3
.L2262:
	movl	$_ZZ11mp_map_loadE12__FUNCTION__, 12(%esp)
	movl	$304, 8(%esp)
	movl	$.LC3, 4(%esp)
	movl	$.LC4, (%esp)
	call	assert_fail
	.p2align 4,,7
	.p2align 3
.L2354:
	movl	24(%esp), %ecx
	movzwl	1(%ecx), %ebx
	addl	$3, %ecx
	rolw	$8, %bx
	movzwl	%bx, %ebx
	leal	(%ecx,%ebx), %edx
	movl	%edx, 24(%esp)
	jmp	.L2356
	.p2align 4,,7
	.p2align 3
.L2351:
	movl	24(%esp), %ecx
	movzbl	1(%ecx), %ebx
	addl	$2, %ecx
	leal	(%ecx,%ebx), %edx
	movl	%edx, 24(%esp)
	jmp	.L2356
	.p2align 4,,7
	.p2align 3
.L2308:
	movzwl	1(%eax), %ebx
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L2312
	.p2align 4,,7
	.p2align 3
.L2161:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %dx
	movzwl	%dx, %eax
	movl	%eax, 40(%esp)
	jmp	.L2165
.L2430:
	movzwl	1(%eax), %esi
	rolw	$8, %si
	movzwl	%si, %esi
	movl	%esi, %ebx
	xorl	%esi, %esi
	jmp	.L2330
.L2427:
	movl	24(%esp), %eax
	xorl	%edx, %edx
	addl	$3, 24(%esp)
	movzwl	1(%eax), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	jmp	.L2335
.L2415:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2181
.L2431:
	movl	1(%eax), %esi
	bswap	%esi
	movl	%esi, %ebx
	xorl	%esi, %esi
	jmp	.L2330
.L2428:
	movl	24(%esp), %eax
	xorl	%edx, %edx
	addl	$5, 24(%esp)
	movl	1(%eax), %eax
	bswap	%eax
	jmp	.L2335
.L2303:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2181
.L2192:
	cmpb	$-33, %bl
	jne	.L2262
	movl	1(%eax), %ebx
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%ebx
	jmp	.L2195
.L2199:
	cmpb	$-35, %bl
	jne	.L2307
	movl	1(%eax), %ebx
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%ebx
	movl	%ebx, 48(%esp)
	jmp	.L2202
.L2432:
	leal	96(%ebx), %eax
	cmpb	$31, %al
	ja	.L2350
	andl	$31, %ebx
	addl	%ebx, %edx
	movl	%edx, 76(%esp)
	jmp	.L2181
.L2191:
	movzwl	1(%eax), %ebx
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %bx
	movzwl	%bx, %ebx
	jmp	.L2195
.L2198:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %dx
	movzwl	%dx, %eax
	movl	%eax, 48(%esp)
	jmp	.L2202
.L2414:
	movzbl	1(%edx), %eax
	leal	2(%edx,%eax), %eax
	movl	%eax, 76(%esp)
	jmp	.L2217
.L2293:
	movzwl	1(%edx), %eax
	rolw	$8, %ax
	movzwl	%ax, %eax
	leal	3(%edx,%eax), %eax
	movl	%eax, 76(%esp)
	jmp	.L2217
.L2235:
	cmpb	$-35, %al
	jne	.L2307
	movl	1(%edx), %eax
	addl	$5, %edx
	movl	%edx, 76(%esp)
	bswap	%eax
	movl	%eax, 56(%esp)
	jmp	.L2238
.L2228:
	cmpb	$-33, %al
	jne	.L2262
	movl	1(%edx), %ebp
	addl	$5, %edx
	movl	%edx, 76(%esp)
	bswap	%ebp
	jmp	.L2231
.L2434:
	leal	96(%eax), %edx
	cmpb	$31, %dl
	ja	.L2350
	andl	$31, %eax
	addl	%eax, %ecx
	movl	%ecx, 76(%esp)
	jmp	.L2217
.L2227:
	movzwl	1(%edx), %ebp
	addl	$3, %edx
	movl	%edx, 76(%esp)
	rolw	$8, %bp
	movzwl	%bp, %ebp
	jmp	.L2231
.L2234:
	movzwl	1(%edx), %eax
	addl	$3, %edx
	movl	%edx, 76(%esp)
	rolw	$8, %ax
	movzwl	%ax, %eax
	movl	%eax, 56(%esp)
	jmp	.L2238
.L2413:
	movzbl	1(%eax), %edx
	leal	2(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2253
.L2433:
	cmpb	$-48, %dl
	je	.L2259
	cmpb	$-47, %dl
	jne	.L2256
.L2260:
	addl	$3, %eax
	movl	%eax, 76(%esp)
	jmp	.L2253
.L2271:
	cmpb	$-35, %dl
	jne	.L2307
	movl	1(%eax), %ebx
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%ebx
	jmp	.L2274
.L2264:
	cmpb	$-33, %dl
	jne	.L2262
	movl	1(%eax), %esi
	addl	$5, %eax
	movl	%eax, 76(%esp)
	bswap	%esi
	jmp	.L2267
.L2124:
	call	_ZL12tuple_formatPK5tuple.part.3
.L2419:
	call	_ZL15tuple_format_idP12tuple_format.part.2
.L2435:
	leal	96(%edx), %eax
	cmpb	$31, %al
	ja	.L2350
	andl	$31, %edx
	addl	%edx, %ecx
	movl	%ecx, 76(%esp)
	jmp	.L2253
.L2283:
	movzwl	1(%eax), %edx
	rolw	$8, %dx
	movzwl	%dx, %edx
	leal	3(%eax,%edx), %eax
	movl	%eax, 76(%esp)
	jmp	.L2253
.L2360:
	xorl	%eax, %eax
	jmp	.L2128
.L2263:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %dx
	movzwl	%dx, %esi
	jmp	.L2267
.L2259:
	addl	$2, %eax
	movl	%eax, 76(%esp)
	jmp	.L2253
.L2270:
	movzwl	1(%eax), %edx
	addl	$3, %eax
	movl	%eax, 76(%esp)
	rolw	$8, %dx
	movzwl	%dx, %ebx
	jmp	.L2274
	.cfi_endproc
.LFE206:
	.size	_Z22tuple_compare_with_keyPK5tuplePKcPK7key_def, .-_Z22tuple_compare_with_keyPK5tuplePKcPK7key_def
	.p2align 4,,15
	.globl	_Z10tuple_initv
	.type	_Z10tuple_initv, @function
_Z10tuple_initv:
.LFB207:
	.cfi_startproc
	subl	$28, %esp
	.cfi_def_cfa_offset 32
	movl	$rlist_nil, (%esp)
	call	_Z16tuple_format_newP5rlist
	movl	4(%eax), %edx
	movl	%eax, tuple_format_ber
	addl	$1, %edx
	js	.L2440
	movl	%edx, 4(%eax)
	jne	.L2436
	movl	%eax, (%esp)
	call	_Z19tuple_format_deleteP12tuple_format
.L2436:
	addl	$28, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 4
	ret
.L2440:
	.cfi_restore_state
	call	_ZL16tuple_format_refP12tuple_formati.part.11
	.cfi_endproc
.LFE207:
	.size	_Z10tuple_initv, .-_Z10tuple_initv
	.p2align 4,,15
	.globl	_Z10tuple_freev
	.type	_Z10tuple_freev, @function
_Z10tuple_freev:
.LFB208:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	subl	$20, %esp
	.cfi_def_cfa_offset 32
	movl	_ZL19recycled_format_ids, %edx
	cmpl	$65535, %edx
	je	.L2446
	.p2align 4,,7
	.p2align 3
.L2449:
	movl	tuple_formats, %eax
	movzwl	%dx, %edx
	leal	(%eax,%edx,4), %eax
	movl	(%eax), %edx
	movl	$0, (%eax)
	cmpl	$65535, %edx
	jne	.L2449
	movl	$65535, _ZL19recycled_format_ids
.L2446:
	movl	_ZL12formats_size, %eax
	movl	tuple_formats, %ebx
	leal	0(,%eax,4), %esi
	leal	(%ebx,%esi), %eax
	cmpl	%eax, %ebx
	jae	.L2452
	.p2align 4,,7
	.p2align 3
.L2450:
	movl	(%ebx), %eax
	addl	$4, %ebx
	movl	%eax, (%esp)
	call	free
	movl	tuple_formats, %eax
	leal	(%eax,%esi), %edx
	cmpl	%edx, %ebx
	jb	.L2450
.L2444:
	movl	%eax, (%esp)
	call	free
	addl	$20, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 12
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
.L2452:
	.cfi_restore_state
	movl	%ebx, %eax
	jmp	.L2444
	.cfi_endproc
.LFE208:
	.size	_Z10tuple_freev, .-_Z10tuple_freev
	.section	.rodata
	.type	_ZZL19tuple_compare_fieldPPKcS1_10field_typeE12__FUNCTION__, @object
	.size	_ZZL19tuple_compare_fieldPPKcS1_10field_typeE12__FUNCTION__, 20
_ZZL19tuple_compare_fieldPPKcS1_10field_typeE12__FUNCTION__:
	.string	"tuple_compare_field"
	.type	_ZZ13tuple_comparePK5tupleS1_PK7key_defE12__FUNCTION__, @object
	.size	_ZZ13tuple_comparePK5tupleS1_PK7key_defE12__FUNCTION__, 14
_ZZ13tuple_comparePK5tupleS1_PK7key_defE12__FUNCTION__:
	.string	"tuple_compare"
	.section	.tbss,"awT",@nobits
	.type	_ZZL19tuple_field_to_cstrPKcjE3buf, @object
	.size	_ZZL19tuple_field_to_cstrPKcjE3buf, 256
_ZZL19tuple_field_to_cstrPKcjE3buf:
	.zero	256
	.section	.rodata
	.type	_ZZ9mp_typeofE12__FUNCTION__, @object
	.size	_ZZ9mp_typeofE12__FUNCTION__, 10
_ZZ9mp_typeofE12__FUNCTION__:
	.string	"mp_typeof"
	.type	_ZZ10tuple_nextP14tuple_iteratorE12__FUNCTION__, @object
	.size	_ZZ10tuple_nextP14tuple_iteratorE12__FUNCTION__, 11
_ZZ10tuple_nextP14tuple_iteratorE12__FUNCTION__:
	.string	"tuple_next"
	.type	_ZZL15tuple_field_oldPK12tuple_formatPK5tuplejE12__FUNCTION__, @object
	.size	_ZZL15tuple_field_oldPK12tuple_formatPK5tuplejE12__FUNCTION__, 16
_ZZL15tuple_field_oldPK12tuple_formatPK5tuplejE12__FUNCTION__:
	.string	"tuple_field_old"
	.type	_ZZ9tuple_refP5tupleiE12__FUNCTION__, @object
	.size	_ZZ9tuple_refP5tupleiE12__FUNCTION__, 10
_ZZ9tuple_refP5tupleiE12__FUNCTION__:
	.string	"tuple_ref"
	.type	_ZZL12tuple_formatPK5tupleE12__FUNCTION__, @object
	.size	_ZZL12tuple_formatPK5tupleE12__FUNCTION__, 13
_ZZL12tuple_formatPK5tupleE12__FUNCTION__:
	.string	"tuple_format"
	.type	_ZZ12tuple_deleteP5tupleE12__FUNCTION__, @object
	.size	_ZZ12tuple_deleteP5tupleE12__FUNCTION__, 13
_ZZ12tuple_deleteP5tupleE12__FUNCTION__:
	.string	"tuple_delete"
	.type	_ZZL16tuple_format_refP12tuple_formatiE12__FUNCTION__, @object
	.size	_ZZL16tuple_format_refP12tuple_formatiE12__FUNCTION__, 17
_ZZL16tuple_format_refP12tuple_formatiE12__FUNCTION__:
	.string	"tuple_format_ref"
	.type	_ZZL15tuple_format_idP12tuple_formatE12__FUNCTION__, @object
	.size	_ZZL15tuple_format_idP12tuple_formatE12__FUNCTION__, 16
_ZZL15tuple_format_idP12tuple_formatE12__FUNCTION__:
	.string	"tuple_format_id"
	.type	_ZZ11mp_str_loadE12__FUNCTION__, @object
	.size	_ZZ11mp_str_loadE12__FUNCTION__, 12
_ZZ11mp_str_loadE12__FUNCTION__:
	.string	"mp_str_load"
	.type	_ZZ11mp_map_loadE12__FUNCTION__, @object
	.size	_ZZ11mp_map_loadE12__FUNCTION__, 12
_ZZ11mp_map_loadE12__FUNCTION__:
	.string	"mp_map_load"
	.type	_ZZ11mp_int_loadE12__FUNCTION__, @object
	.size	_ZZ11mp_int_loadE12__FUNCTION__, 12
_ZZ11mp_int_loadE12__FUNCTION__:
	.string	"mp_int_load"
	.type	_ZZ12mp_uint_loadE12__FUNCTION__, @object
	.size	_ZZ12mp_uint_loadE12__FUNCTION__, 13
_ZZ12mp_uint_loadE12__FUNCTION__:
	.string	"mp_uint_load"
	.type	_ZZ7mp_loadE12__FUNCTION__, @object
	.size	_ZZ7mp_loadE12__FUNCTION__, 8
_ZZ7mp_loadE12__FUNCTION__:
	.string	"mp_load"
	.type	_ZZ13mp_array_loadE12__FUNCTION__, @object
	.size	_ZZ13mp_array_loadE12__FUNCTION__, 14
_ZZ13mp_array_loadE12__FUNCTION__:
	.string	"mp_array_load"
	.weak	_ZTI6Object
	.section	.rodata._ZTI6Object,"aG",@progbits,_ZTI6Object,comdat
	.align 4
	.type	_ZTI6Object, @object
	.size	_ZTI6Object, 8
_ZTI6Object:
	.long	_ZTVN10__cxxabiv117__class_type_infoE+8
	.long	_ZTS6Object
	.weak	_ZTS6Object
	.section	.rodata._ZTS6Object,"aG",@progbits,_ZTS6Object,comdat
	.type	_ZTS6Object, @object
	.size	_ZTS6Object, 8
_ZTS6Object:
	.string	"6Object"
	.weak	_ZTI9Exception
	.section	.rodata._ZTI9Exception,"aG",@progbits,_ZTI9Exception,comdat
	.align 4
	.type	_ZTI9Exception, @object
	.size	_ZTI9Exception, 12
_ZTI9Exception:
	.long	_ZTVN10__cxxabiv120__si_class_type_infoE+8
	.long	_ZTS9Exception
	.long	_ZTI6Object
	.weak	_ZTS9Exception
	.section	.rodata._ZTS9Exception,"aG",@progbits,_ZTS9Exception,comdat
	.type	_ZTS9Exception, @object
	.size	_ZTS9Exception, 11
_ZTS9Exception:
	.string	"9Exception"
	.weak	_ZTI11LoggedError
	.section	.rodata._ZTI11LoggedError,"aG",@progbits,_ZTI11LoggedError,comdat
	.align 4
	.type	_ZTI11LoggedError, @object
	.size	_ZTI11LoggedError, 12
_ZTI11LoggedError:
	.long	_ZTVN10__cxxabiv120__si_class_type_infoE+8
	.long	_ZTS11LoggedError
	.long	_ZTI11ClientError
	.weak	_ZTS11LoggedError
	.section	.rodata._ZTS11LoggedError,"aG",@progbits,_ZTS11LoggedError,comdat
	.type	_ZTS11LoggedError, @object
	.size	_ZTS11LoggedError, 14
_ZTS11LoggedError:
	.string	"11LoggedError"
	.weak	_ZTI13IllegalParams
	.section	.rodata._ZTI13IllegalParams,"aG",@progbits,_ZTI13IllegalParams,comdat
	.align 4
	.type	_ZTI13IllegalParams, @object
	.size	_ZTI13IllegalParams, 12
_ZTI13IllegalParams:
	.long	_ZTVN10__cxxabiv120__si_class_type_infoE+8
	.long	_ZTS13IllegalParams
	.long	_ZTI11LoggedError
	.weak	_ZTS13IllegalParams
	.section	.rodata._ZTS13IllegalParams,"aG",@progbits,_ZTS13IllegalParams,comdat
	.type	_ZTS13IllegalParams, @object
	.size	_ZTS13IllegalParams, 16
_ZTS13IllegalParams:
	.string	"13IllegalParams"
	.weak	_ZTV6Object
	.section	.rodata._ZTV6Object,"aG",@progbits,_ZTV6Object,comdat
	.align 8
	.type	_ZTV6Object, @object
	.size	_ZTV6Object, 16
_ZTV6Object:
	.long	0
	.long	_ZTI6Object
	.long	_ZN6ObjectD1Ev
	.long	_ZN6ObjectD0Ev
	.weak	_ZTV9Exception
	.section	.rodata._ZTV9Exception,"aG",@progbits,_ZTV9Exception,comdat
	.align 8
	.type	_ZTV9Exception, @object
	.size	_ZTV9Exception, 20
_ZTV9Exception:
	.long	0
	.long	_ZTI9Exception
	.long	_ZN9ExceptionD1Ev
	.long	_ZN9ExceptionD0Ev
	.long	__cxa_pure_virtual
	.weak	_ZTV11LoggedError
	.section	.rodata._ZTV11LoggedError,"aG",@progbits,_ZTV11LoggedError,comdat
	.align 8
	.type	_ZTV11LoggedError, @object
	.size	_ZTV11LoggedError, 20
_ZTV11LoggedError:
	.long	0
	.long	_ZTI11LoggedError
	.long	_ZN11LoggedErrorD1Ev
	.long	_ZN11LoggedErrorD0Ev
	.long	_ZNK11ClientError3logEv
	.weak	_ZTV13IllegalParams
	.section	.rodata._ZTV13IllegalParams,"aG",@progbits,_ZTV13IllegalParams,comdat
	.align 8
	.type	_ZTV13IllegalParams, @object
	.size	_ZTV13IllegalParams, 20
_ZTV13IllegalParams:
	.long	0
	.long	_ZTI13IllegalParams
	.long	_ZN13IllegalParamsD1Ev
	.long	_ZN13IllegalParamsD0Ev
	.long	_ZNK11ClientError3logEv
	.local	_ZL16formats_capacity
	.comm	_ZL16formats_capacity,4,4
	.local	_ZL12formats_size
	.comm	_ZL12formats_size,4,4
	.data
	.align 4
	.type	_ZL19recycled_format_ids, @object
	.size	_ZL19recycled_format_ids, 4
_ZL19recycled_format_ids:
	.long	65535
	.globl	tuple_format_ber
	.bss
	.align 4
	.type	tuple_format_ber, @object
	.size	tuple_format_ber, 4
tuple_format_ber:
	.zero	4
	.globl	tuple_formats
	.align 4
	.type	tuple_formats, @object
	.size	tuple_formats, 4
tuple_formats:
	.zero	4
	.ident	"GCC: (Debian 4.8.1-2) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
