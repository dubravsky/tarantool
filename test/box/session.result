space = box.schema.create_space('tweedledum')
---
...
space:create_index('primary', 'hash', { parts = { 0, 'num' }})
---
...
box.session.exists(box.session.id())
---
- 1
...
box.session.exists()
---
- error: 'session.exists(sid): bad arguments'
...
box.session.exists(1, 2, 3)
---
- error: 'session.exists(sid): bad arguments'
...
box.session.exists(1234567890)
---
- 0
...
-- check session.id()
box.session.id() > 0
---
- true
...
f = box.fiber.create(function() box.fiber.detach() failed = box.session.id() ~= 0 end)
---
...
box.fiber.resume(f)
---
...
failed
---
- false
...
f1 = box.fiber.create(function() if box.session.id() == 0 then failed = true end end)
---
...
box.fiber.resume(f1)
---
- true
...
failed
---
- false
...
box.session.peer() == box.session.peer(box.session.id())
---
- true
...
-- check on_connect/on_disconnect triggers
type(box.session.on_connect(function() end))
---
- function
...
type(box.session.on_disconnect(function() end))
---
- function
...
-- check it's possible to reset these triggers
type(box.session.on_connect(function() error('hear') end))
---
- function
...
type(box.session.on_disconnect(function() error('hear') end))
---
- function
...
-- check on_connect/on_disconnect argument count and type
type(box.session.on_connect())
---
- function
...
type(box.session.on_disconnect())
---
- function
...
box.session.on_connect(function() end, function() end)
---
- error: 'session.on_connect(chunk): bad arguments'
...
box.session.on_disconnect(function() end, function() end)
---
- error: 'session.on_connect(chunk): bad arguments'
...
box.session.on_connect(1, 2)
---
- error: 'session.on_connect(chunk): bad arguments'
...
box.session.on_disconnect(1, 2)
---
- error: 'session.on_connect(chunk): bad arguments'
...
box.session.on_connect(1)
---
- error: 'session.on_connect(chunk): bad arguments'
...
box.session.on_disconnect(1)
---
- error: 'session.on_connect(chunk): bad arguments'
...
-- use of nil to clear the trigger
box.session.on_connect(nil)
---
- null
...
box.session.on_disconnect(nil)
---
- null
...
-- check how connect/disconnect triggers work
function inc() active_connections = active_connections + 1 end
---
...
function dec() active_connections = active_connections - 1 end
---
...
type(box.session.on_connect(inc))
---
- function
...
type(box.session.on_disconnect(dec))
---
- function
...
active_connections = 0
---
...
--# create connection con_one to default
active_connections
---
- 1
...
--# create connection con_two to default
active_connections
---
- 2
...
--# drop connection con_one
--# drop connection con_two
box.fiber.sleep(0) -- yield
---
...
active_connections
---
- 0
...
box.session.on_connect(nil)
---
- null
...
box.session.on_disconnect(nil)
---
- null
...
-- write audit trail of connect/disconnect into a space
type(box.session.on_connect(function() box.space['tweedledum']:insert(box.session.id()) end))
---
- function
...
type(box.session.on_disconnect(function() box.space['tweedledum']:delete(box.session.id()) end))
---
- function
...
--# create connection con_three to default
--# set connection con_three
box.unpack('i', space:select(0, box.session.id())[0]) == box.session.id()
---
- true
...
--# set connection default
--# drop connection con_three
-- cleanup
box.session.on_connect(nil)
---
- null
...
box.session.on_disconnect(nil)
---
- null
...
active_connections
---
- 0
...
space:drop()
---
...
